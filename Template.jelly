import Shortcuts
#Color: red, #Icon: magicWandAlt

/*
Notes:
- call the "update" function whenever you want to check for updates

**make sure to update Shortcut Name and RoutineHub ID for the shortcut to run properly**
*/
/*
AppData and dependency/res dictionaries

*/
dictionary({"Shortcut Name":"Template","Version":"1.1","RoutineHub ID":"2152"}) >> AppData
// commonly used assets like icons
dictionary({"ic_item":"iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAQAAABIkb+zAAABqUlEQVR4Ae3aT8tMYRzG8e+UzMxKWViwlUKasbdiJRsLr4CdrOQdsBsLwtDI0o6VbETKTilSiA0LihoLGfPPzPkpnU4zYqHuOXdXXZ/rFXybeXqec54f/2BmZmZmZmZm+7nMS74xZVZtvrKf1RYrW1YrVhZ/2Zx33OAgG9GiT0HUsIKbtEmsxWOixj1JnTAgat4tEupSELXvBMlcJzLsK7tI5C2RZY9okMSMyLRzJBHZNqOrHRC8pq0dEFxTDwiOqQd8YYd2QHBfPSA4ox4wYZ92QPCCrdoBwUX1gIIj2gHBJ7ZrBwR31QOCU+oBI3ZrBwRP2aIdEFxQD1hySDsg+MA27YDgtgOy7r32V2ih/kN83r/IMu67+p8SJ0E54A4oB3zUfqApOAzKAT1QDniu/VplzF5QDjgNygH3QDngs/rr9aOgHHAFlANe0VIOmNLR/kf3We1Tgwc0SKJPZNiQnSTSocgQcJyS5mcwIKkmD2s+tGlC6oRLLGp6bOnTZCP20OMZQ0blfpQb/96k3LTc2lnm+kHmn4eY1XHNG65ygP9iZmZmZmZmZr8AnhtDjFkaQycAAAAASUVORK5CYII=","ic_back":"","dep_updatekit":"UpdateKit"}) >> res
if(ShortcutInput .contains ""${ShortcutInput}"") {
// Global Variables
	getDictionaryFrom(input: ShortcutInput) >> getDictionaryFrom
var input = Dictionary
var function = Variable
} else {
// first run setup
	dictionary({"function":"main"})
	runShortcut(name: AppData, input: Dictionary, show: false) >> runShortcut
	exit(var: Shortcut Result)
} >> IFResult
// Update Check using UpdateKit
if(function == "update") {
	getShortcuts() >> getShortcuts
	if(My Shortcuts .contains ""${res.key(dep_updatekit)}"") {
		runShortcut(name: res, input: AppData, show: false)
	}
} >> IFResult 1
// Main Menu
if(function == "main") {
	menu(Main Menu, [Simple Menu, Menu With Icons]) {
	case("Simple Menu"):
		dictionary({"function":"submenu 1"})
		runShortcut(name: AppData, input: Dictionary, show: false) >> runShortcut 1
	case("Menu With Icons"):
		dictionary({"function":"submenu 2"})
		runShortcut(name: AppData, input: Dictionary, show: false) >> runShortcut 2
	} >> MenuResult
	dictionary({"function":"main"})
	runShortcut(name: AppData, input: Dictionary, show: false) >> runShortcut 3
	exit(var: Shortcut Result)
} >> IFResult 2
// Simple Submenu with Back functionality 
if(function == "submenu 1") {
	menu(Simple Submenu, [choice 1, choice 2, Back]) {
	case("choice 1"):
	case("choice 2"):
	case("Back"):
		nothing()
	} >> MenuResult 1
	exit(var: Menu Result)
} >> IFResult 3
// Menu with icons and Back functionality 
if(function == "submenu 2") {
	list(items: (
    "choice 1",
    "choice 2"
)) >> list
	repeatEach(List) {
/*
*Use this template to create custom menu items*

BEGIN:VCARD
VERSION:3.0
N: [title here]
ORG: [sub title here]
PHOTO;encoding=b: [encoded icon here]
END:VCARD
*/
var F6CE8939-9DD1-4D40-9A10-C020ECE1E5CD = """BEGIN:VCARD
VERSION:3.0
N: ￼
ORG: index: ￼
PHOTO;encoding=b:￼
END:VCARD"""
text("${F6CE8939-9DD1-4D40-9A10-C020ECE1E5CD}")
	} >> RepeatResult
var E7D28D72-8370-4014-B816-B3AA4D6CA96F = """BEGIN:VCARD
VERSION:3.0
N:Back
PHOTO;encoding=b:￼
END:VCARD"""
text("${E7D28D72-8370-4014-B816-B3AA4D6CA96F}")
	list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Repeat Results";
                        OutputUUID = "2F524EF0-2772-4543-86E8-768FB260703D";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Text;
                        OutputUUID = "57AC9037-75C3-40E5-8950-EB46AAC72A9F";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 1
	combineText(text: List, combine: New Lines) >> combineText
	setName(input: Combined Text, name: "a.vcf") >> setName
	getContactsFrom(input: Renamed Item) >> getContactsFrom
	choose(list: Contacts) >> choose
	exit(var: Selected Item)
}
