import Shortcuts
#Color: Red, #Icon: pawPrint

/*
Outputs or imports shortcut source.
2025-06-01 	v2.0
https://routinehub.co/user/gluebyte
https://bsky.app/profile/gluebyte.bsky.social
*/
randomNumber(min: 1, max: 2) >> randomNumber
if(Random Number == 1) {
	getIP() >> getIP
	if(Current IP Address != nil) {
		downloadURL(url: "https://updatecheck.gluebyte.workers.dev/?id=07D4DD09") >> downloadURL
		if(Contents of URL .contains "2025-06-01") { >> IFResult
			menu(, [🌏  Go to RoutineHub, 👾  Download Update, ⮐  Not Now]) {
			case("🌏  Go to RoutineHub"):
				openURL(url: "https://routinehub.co/shortcut/10060/")
				exit()
			case("👾  Download Update"):
				downloadURL(url: "https://routinehub.co/api/v1/shortcuts/10060/versions/latest") >> downloadURL 1
				matchText(text: "${Contents of URL}", regex: "(?<="id":\D?)\d+") >> matchText
				expandURL(url: "https://routinehub.co/download/${Matches}/") >> expandURL
				replaceText(input: "${Expanded URL}", find: "^.+icloud.com/", replace: "shortcuts://", isRegex: true) >> replaceText
				openURL(url: Updated Text) >> openURL
				exit()
			case("⮐  Not Now"):
			} >> MenuResult
		} >> IFResult 1
	}
} >> IFResult 2
if(ShortcutInput == nil) {
// Choose shortcut and return plist
	getShortcuts() >> getShortcuts
	repeat(5) {
		if(Files == nil) {
			askForInput(prompt: "
Find shortcuts with name containing:
(Name is case-sensitive)
") >> askForInput
			filterFiles() >> filterFiles
			nothing() >> nothing
			if(Files == nil) {
				alert(alert: "

🚫 No shortcuts found. Please try again.

", tancel: false)
			} >> IFResult 3
		} >> IFResult 4
	} >> RepeatResult
	count(input: Files) >> count
	if(Count == 1) {
//Unable to get shortcuts action is.workflow.actions.getvariable
	} else {
		replaceText(input: "${DeviceDetails.get(System Version)}", find: "\.(\d+).*", replace: "$1", isRegex: true) >> replaceText 1
		if(DeviceDetails !=) {
			math(input: Updated Text, operation: -, operand: "30") >> math
		} >> IFResult 5
		if(If Result >= 150) {
			fileDetail(input: Files, property: File Path) >> fileDetail
		}
		choose(list: Files) >> choose
	} >> IFResult 6
	getFileOfType(input: If Result, type: "com.apple.property-list") >> getFileOfType
	setName(input: File of Type, name: "${If Result.get(Name)}.plist") >> setName
} else {
// Import plist input as shortcut
	if(DeviceDetails ==) {
		runShellScript(input: ShortcutInput, script: "cd /tmp
cat > a.wflow
shortcuts sign -m anyone -i a.wflow -o a.shortcut
cat a.shortcut") >> runShellScript
	} else {
		if(DeviceDetails == nil) {
			setName(input: ShortcutInput, name: "${ShortcutInput.get(Name)}.shortcut") >> setName 1
			getFileLink(file: Renamed Item) >> getFileLink
			openURL(url: Link to File)
			exit()
		} else {
			makeArchive(input: ShortcutInput, type: gz) >> makeArchive
			menu(
Please select ‘Remote Sign’. Or if you have a Mac running macOS, you can set up SSH:
, [⚡️  Remote Sign, 🌐  Show me how to SSH, 🖥  SSH to Mac 1, 🖥  SSH to Mac 2]) {
			case("⚡️  Remote Sign"):
				downloadURL(url: "http://shortcuts.gluebyte.workers.dev/", method: POST, requestType: File, requestVar: Archive) >> downloadURL 2
				if(Contents of URL != "gz") {
					if(Contents of URL == "") {
						alert(alert: "
🛑 It seems the Remote Sign server is not reachable. Please try again later.
", tancel: false)
					} else {
						alert(alert: "
${Contents of URL}
", cancel: false)
					}
					exit()
				} >> IFResult 7
			case("🌐  Show me how to SSH"):
				alert(alert: "
After reading the instructions, edit this shortcut and add login info to the ‘Run Script over SSH’ action near the bottom.
")
				openURL(url: "https://routinehub.co/shortcut/10060/")
				exit()
			case("🖥  SSH to Mac 1"):
/*

◥◤    ADD SSH LOGIN INFO    ◥◤

*/
				runSSH(auth: SSH Key, input: Archive, script: "cd /tmp
gunzip > a.wflow
shortcuts sign -m anyone -i a.wflow -o a.shortcut
gzip -9c a.shortcut") >> runSSH
/*

◢◣    ADD SSH LOGIN INFO    ◢◣

*/
			case("🖥  SSH to Mac 2"):
				runSSH(auth: SSH Key, input: Archive, script: "cd /tmp
gunzip > a.wflow
shortcuts sign -m anyone -i a.wflow -o a.shortcut
gzip -9c a.shortcut") >> runSSH 1
			} >> MenuResult 1
			extractArchive(input: Menu Result) >> extractArchive
		}
	} >> IFResult 8
	dictionary({"a":"${ShortcutInput.get(Name)}"})
	replaceText(input: "${Dictionary}", find: "\u0023", replace: "\\u0023", isRegex: true) >> replaceText 2
	url(url: "data:text/html;charset=utf-8,<body/><script>document.body.textContent=encodeURIComponent(Array.from(${Updated Text}.a).map(c=>c===(n=c.normalize('NFD'))?c:(s=n.split('')).join(s[0].codePointAt(0)<0x1100?' ':'\u200D')).join(''))</script>") >> url
	encodeURL(url: "${URL.as(RichText)}") >> encodeURL
	setName(input: If Result, name: "${URL Encoded Text}.shortcut") >> setName 2
	openIn(input: Renamed Item, app: "com.apple.shortcuts", ask: false)
	wait(seconds: true)
	nothing()
} >> IFResult 9
