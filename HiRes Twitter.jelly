import Shortcuts
#Color: Red, #Icon: star

/*
Download media from public/private/circle/community tweets at the highest quality, save to Photos or Files or share.
2025-04-29 	v5.5.7
https://routinehub.co/user/gluebyte
https://bsky.app/profile/gluebyte.bsky.social
*/
list(items: (
        {
        WFItemType = 1;
        WFValue =         {
            Value =             {
                Value =                 {
                    WFDictionaryFieldValueItems =                     (
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = version;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "2025-04-29";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = id;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = BE3F1DF7;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefversion;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 5;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = filename;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Shortcuts/HiRes Tweet.json";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = defaultpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 5;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = selection;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 4;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefstring;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save gif as";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "mp4 [1/4]",
                                                                    "gif [2/4]",
                                                                    "Both mp4 and gif [3/4]",
                                                                    "Ask Always [4/4]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 gif Quality";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "High [1/3]",
                                                                    "Low [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Quick Look";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "None [1/3]",
                                                                    "All Media [2/3]",
                                                                    "Only Videos and gifs [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Ask to Continue after Quick Look";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show List for Multiple Media";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = Share;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Files";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Photos";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Open Photos after Save";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Set Media Date to";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Date Tweeted [1/3]",
                                                                    "Current Date [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show Notification";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    }
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = option;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "\U2611\Ufe0f",
                                    "\U2b1c\Ufe0f"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = worker;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://hirestweet.gluebyte.workers.dev/";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadurl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/api/v1/shortcuts/7912/versions/latest";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 4;
                            WFKey =                             {
                                Value =                                 {
                                    string = false;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value = 0;
                                WFSerializationType = WFNumberSubstitutableState;
                            };
                        },
                                                {
                            WFItemType = 4;
                            WFKey =                             {
                                Value =                                 {
                                    string = true;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value = 1;
                                WFSerializationType = WFNumberSubstitutableState;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onmy;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "On My ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = settings;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2699\Ufe0f  User Settings";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = account;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b50\Ufe0f  Manage Twitter Accounts in Scriptable";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = quit;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd1a  Quit";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = download;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = download;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getlink;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udccb Download Media from Copied Link";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = goback;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Go Back";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = gotoweb;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf0f  Go to RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = dateoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Date Tweeted\U200b",
                                    "Always Current Date\U200b\U200b",
                                    "Date Tweeted\U200b\U200b\U200b",
                                    "Current Date\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gifoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always mp4 and gif",
                                    "Always gif\U200b",
                                    "Always mp4\U200b\U200b",
                                    "mp4 and gif\U200b\U200b\U200b",
                                    "gif\U200b\U200b\U200b\U200b",
                                    "mp4\U200b\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gifqualityoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Low",
                                    "Always High\U200b",
                                    "Low\U200b\U200b",
                                    "High\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = quicklookboth;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd0e  Quick Look Both";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getbetter;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd38  Get Better Quality (";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getbest;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd36  Get Best Quality (";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getboth;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc95  Get Both";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = continue;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udcab  Continue";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getsub;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udcac  Embed Subtitles";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = skip;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U23ec\Ufe0f  Skip";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc27  Contact gluebyte on RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83e\Udd8b  Contact gluebyte on Bluesky";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = shortcutpage;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/shortcut/7912/";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contacturl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://bsky.app/profile/gluebyte.bsky.social";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadupdate;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc7e  Download Update";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = notnow;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Not Now";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = folder;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Folder: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = album;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Album: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = msg;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Cannot download media. Current account in Scriptable: @";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Cannot download media. Twitter login in Scriptable is required.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error3;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Cannot download media. Please try again later or contact developer.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error4;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Account error. Please close the Scriptable window after Twitter is loaded.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error5;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Scriptable error. Please delete and reinstall Scriptable and this shortcut.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oldpref;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nThis shortcut is older than the settings file. Please download the latest version.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newpref;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "User settings have been updated. Please review new settings.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = notweeturl;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please share a tweet.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = vidurl;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease share a tweet, not a video.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nosave;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nMedia is not saved or shared. \U2019User Settings\U2018 menu will open.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNo media attached to tweet.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmark;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udc1a  One-time Setup  \Ud83d\Udc1a\n\nPlease open \U2018On My \U2022\U2019 folder by tapping:\n\n\U278a \U2018Browse\U2019\n\U278b \U2018On My \U2022\U2019 (not \U2018a-Shell\U2019)\n\U278c \U2018Open\U2019 (upper right corner)\n\nYou can stop shortcut if shortcut banner obscures \U2018Open\U2019.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmarkerror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Uded1  \U2018On My \U2022\U2019 folder was not opened. Please try again.\n\nIf this error continues, please tap cancel then delete and reinstall a-Shell mini.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = dateprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nChoose date of media:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = optionsaved;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U2728 Option has been saved. To change settings, run \U2018HiRes Twitter\U2019 from the Shortcuts app.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nSave gif as:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifqualityprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease select gif quality. \U2018Low\U2019 is faster, \U2018High\U2019 uses \U2018a-Shell mini\U2019:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNote: \U2018Better\U2019 may look better than \U2018Best\U2019 if color changes and movements are small across frames.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = album;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease select photo album from the following list. You can change it later in \U2018User Settings\U2019.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = subprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nVideo subtitles found:\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accountsprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nAccounts logged in in Scriptable:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = noaccountprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPrivate/circle/space/nsfw media can be downloaded after logging in.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = settingprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Tap any item to change option. To reset folder or album, turn the option off and on.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = locationprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nWhere do you want to save media?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nEnter folder name for media:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nEnter folder name for media. It will be created inside iCloud Drive/Shortcuts folder:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accountprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nScriptable will open Twitter web.\nPlease close browser when finished.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accountpromptipad;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nScriptable will open Twitter web.\nPlease close browser when finished.\nIgnore the \U201cThis browser is not supported\U201d page at the end.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = noclipboard;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNo Twitter link in clipboard.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "New Version Available";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        }
                    );
                };
                WFSerializationType = WFDictionaryFieldValue;
            };
            WFSerializationType = WFDictionaryFieldValue;
        };
    }
)) >> list
number(value: 0) >> number
if(DeviceDetails != nil) {
	number(value: 1) >> number 1
} >> IFResult
var OS = If Result
replaceText(input: "${DeviceDetails.get(System Version)}", find: "\.(\d+).*", replace: "$1", isRegex: true) >> OS
getDictionaryFrom(input: List) >> getDictionaryFrom
if(OS == 0) { >> IFResult 1
	replaceText(input: "${Dictionary.key(filename)}", find: "Shortcuts/") >> replaceText
	setValue(key: "filename", value: "${Updated Text}", dictionary: Dictionary) >> setValue
} >> IFResult 2
var mainDict = If Result
/*


◥◤		CHECK INPUT
*/
if(ShortcutInput != nil) { >> IFResult 3
	getItemFromList(list: ShortcutInput, type: Last Item) >> getItemFromList
	if(Item from List .contains "t.co/") {
		expandURL(url: "${Item from List}") >> expandURL
	} >> IFResult 4
	replaceText(input: "${If Result}", find: "\?.*", isRegex: true) >> twurl
	if(twurl .contains "x.com/") {
		if(twurl .contains "twitter.com/") {
			nothing() >> nothing
		}
	} >> IFResult 5
	if(If Result != nil) {
		replaceText(input: "ㅁ${twurl}", find: "^.*/(\d{17,}).*$", replace: "$1", isRegex: true) >> ID
		if(ID .beginsWith "ㅁ") {
			alert(alert: "${twurl}
‘${ActionOutput}’", cancel: false)
		} else {
var command = Variable
		} >> IFResult 6
	} else {
		if(twurl .contains "twimg.com") {
			alert(alert: "${mainDict.key(msg.vidurl)}", cancel: false)
		} else {
			alert(alert: "${twurl}
‘${ActionOutput}’", cancel: false)
		}
	}
} >> IFResult 7
/*


◥◤		CHECK PREF
*/
getFile(picker: false, path: "${mainDict.key(filename)}", error: false) >> getFile
if(File == nil) { >> IFResult 8
	getDictionaryFrom(input: mainDict) >> getDictionaryFrom 1
var pref = Dictionary
	saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile
} else { >>  1
	getDictionaryFrom(input: File) >> getDictionaryFrom 2
var pref = Dictionary
	valuesFrom(dictionary: pref) >> prefversion
	if(prefversion != mainDict) {
		if(prefversion > mainDict) {
			menu(, [) {
			case("mainDict (gotoweb)"):
				openURL(url: mainDict)
			} >> MenuResult
			exit()
		} >> IFResult 9
		combineText(text: pref, combine: Custom) >> combineText
		if(prefversion == 1) {
			replaceText(input: "${Combined Text}", find: "...$", replace: "2$0", isRegex: true) >> replaceText 1
		} >> IFResult 10
		if(prefversion false 3) {
			replaceText(input: "${If Result}", find: "^.", replace: "$03", isRegex: true) >> replaceText 2
		} >> IFResult 11
		if(prefversion false 4) {
			replaceText(input: "${If Result}", find: ".$", replace: "2$0", isRegex: true)
		} >> IFResult 12
		if(prefversion false 5) {
			replaceText(input: "${If Result}", find: "2(.)$", replace: "3$1", isRegex: true) >> replaceText 3
		} >> IFResult 13
		splitText(text: If Result, separator: Every Character) >> splitText
		setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 1
		setValue(key: "prefversion", value: "${mainDict.key(prefversion)}", dictionary: Dictionary) >> setValue 2
var pref = Dictionary
		saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 1
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
	} else {
		if(ShortcutInput != nil) {
			getItemFromList(list: pref, type: Items in Range, startIndex: "6", endIndex: "8") >> getItemFromList 1
			if(Item from List .contains "1") {
				if(Item from List .contains "١") {
					alert(alert: "${mainDict.key(msg.nosave)}", cancel: false)
var command = Variable
				}
			}
		} >> IFResult 14
	} >> IFResult 15
} >> IFResult 16
/*


◥◤		CHECK BOOKMARK
*/
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
matchText(text: "${output}", regex: "^/private/.+/File Provider Storage$") >> matchText
if(Matches == nil) { >> IFResult 17
var switched = Variable
	deviceDetails(detail: Device Model) >> deviceDetails
	replaceText(input: "${mainDict.key(msg.bookmark)}", find: "•", replace: "${Device Model}") >> replaceText 4
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
	alert(alert: "${Updated Text}", cancel: false)
	waitToReturn()
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
	matchText(text: "${output}", regex: "^/private/.+/File Provider Storage$") >> matchText 1
	if(Matches == nil) {
		replaceText(input: "${mainDict.key(msg.bookmarkerror)}", find: "•", replace: "${Device Model}") >> replaceText 5
		alert(alert: "${Updated Text}")
		runShortcut(name: "HiRes Twitter", input: ShortcutInput)
		exit()
	}
} >> IFResult 18
repeat(20) {
/*


◥◤		LOOP
*/
	if(command != ""${mainDict.key(quit)}"") {
		if(command == ""${mainDict.key(download)}"") { >> IFResult 19
/*


◥◤		DOWNLOAD
*/
var command = Variable
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			getDictionaryFrom(input: Output) >> getDictionaryFrom 3
var tweetDict = Dictionary
			if(tweetDict != nil) { >> IFResult 20
				openApp(id: "dk.simonbs.Scriptable")
				openApp(id: "com.atebits.Tweetie2")
				runShortcut(name: "HiRes Twitter", input: twurl)
				exit()
			}
			if(tweetDict != nil) { >> IFResult 21
				wait(seconds: tweetDict)
				runShortcut(name: "HiRes Twitter", input: twurl)
				exit()
			}
var version = Variable
			if(tweetDict == nil) { >> IFResult 22
				if(tweetDict != nil) { >> IFResult 23
					getTextFrom(input: tweetDict) >> error
					if(error .contains ""statusCode":403") {
						if(error .contains ""code":336") {
							alert(alert: "
🛑  ${mainDict.key(msg.error5)}
", tancel: false)
						} else {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
							alert(alert: "
🛑  ${mainDict.key(msg.error4)}
", tancel: false)
						}
					} else {
						if(error .contains ""code":179") {
var command = Variable
							if(tweetDict != nil) {
								text(text: "${tweetDict.key(me)}${Variable.key(me)}")
							} else {
								valuesFrom(dictionary: mainDict)
							}
						} else {
							valuesFrom(dictionary: mainDict)
						} >> IFResult 24
						alert(alert: "${If Result}
➡️  ${ActionOutput}

🛑  ￼", tincel: false)
					}
				} else {
					alert(alert: "${mainDict.key(msg.nomedia)}
${Variable.key(msg.nomedia)}", cancel: false)
				} >> IFResult 25
			} else {
				valuesFrom(dictionary: tweetDict) >> hasgif
				number(value: 0) >> number 2
				if(hasgif ==) { >> IFResult 26
					math(input: pref, operation: -, operand: "1") >> math
					if(Calculation Result == 3) {
						choose(list: mainDict, prompt: "${mainDict.key(msg.gifprompt)}") >> choose
						replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 6
						count(type: Characters, input: Updated Text) >> count
						math(input: "5", operation: -, operand: Count) >> math 1
						if(Calculation Result > 2) {
							math(input: Calculation Result, operation: -, operand: "2") >> math 2
var newSelection = Calculation Result
							getItemFromList(list: pref, type: Items in Range, startIndex: "2") >> getItemFromList 2
//Unable to get shortcuts action is.workflow.actions.appendvariable
							setValue(key: "selection", value: "${newSelection}", dictionary: pref) >> setValue 3
var pref = Dictionary
							saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 2
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
							alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
							math(input: Calculation Result, operation: -, operand: "1")
						}
					} >> IFResult 27
				} >> IFResult 28
				if(toGIF != 0) { >> IFResult 29
					math(input: "2", operation: -, operand: pref) >> math 3
					if(Calculation Result false 0) {
						choose(list: mainDict, prompt: "${mainDict.key(msg.gifqualityprompt)}") >> choose 1
						replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 7
						count(type: Characters, input: Updated Text) >> count 1
						math(input: "0", operand: Count) >> math 4
						math(input: Calculation Result, operation: -, operand: "2") >> math 5
						if(Calculation Result false 0) {
							math(input: "2", operation: -, operand: Count) >> math 6
							combineText(text: pref, combine: Custom) >> combineText 1
							replaceText(input: "${Combined Text}", find: "^(.).", replace: "$1${Calculation Result}", isRegex: true) >> replaceText 8
							splitText(text: Updated Text, separator: Every Character) >> splitText 1
							setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 4
var pref = Dictionary
							saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 3
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
							alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
//Unable to get shortcuts action is.workflow.actions.getvariable
						}
					}
				} >> IFResult 30
				valuesFrom(dictionary: pref) >> Media Date
				if(Media Date == 3) { >> IFResult 31
					choose(list: mainDict, prompt: "${mainDict.key(msg.dateprompt)}") >> choose 2
					replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 9
					count(type: Characters, input: Updated Text) >> count 2
					math(input: "0", operand: Count) >> math 7
					math(input: Calculation Result, operation: -, operand: "2") >> math 8
					if(Calculation Result false 1) {
						combineText(text: pref, combine: Custom) >> combineText 2
						replaceText(input: "${Combined Text}", find: ".(.)$", replace: "${Calculation Result}$1", isRegex: true) >> replaceText 10
						splitText(text: Updated Text, separator: Every Character) >> splitText 2
						setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 5
var pref = Dictionary
						saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 4
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
//Unable to get shortcuts action is.workflow.actions.getvariable
					}
				} >> IFResult 32
				adjustDate(duration: , date: "1970-01-01 00:00:00Z") >> adjustDate
				if(MediaDate == 1) { >> IFResult 33
					formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "'-t 'yyyyMMddHHmm.ss") >> -t MediaDate
				} >> IFResult 34
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
				repeatEach(tweetDict) {
					getItemFromList(list: tweetDict, type: Item At Index, index: Repeat Index 2) >> mediainfo
					valuesFrom(dictionary: mediainfo) >> type
					nothing()
					if(type == "video") { >> IFResult 35
						if(mediainfo != nil) {
							menu(, [) {
							case("mainDict (getsub)"):
								valuesFrom(dictionary: mediainfo) >> valuesFrom
							case("mainDict (skip)"):
							}
						}
					} >> IFResult 36
					nothing() >> nothing 1
					if(Repeat Item 2 != "m3u") { >> IFResult 37
						downloadURL(url: "${Repeat Item 2}") >> downloadURL
						if(type == "video") {
							if(Contents of URL false) {
								nothing()
							}
						} >> IFResult 38
					} >> IFResult 39
					if(If Result != nil) {
						if(type == "video") {
							setName(input: If Result, name: "tw_0.mp4") >> setName
							saveFile(input: Renamed Item, ask: false, overwrite: true) >> saveFile 5
							randomNumber(min: 0, max: 99999) >> random
var CB667783-5C2A-41F4-9133-E00BD7CC50C7 = """cd ~OnMyDevice
rm -f tw_done*
ffmpeg -v error -stats -i tw_0.mp4 ￼ -c:v copy -c:a copy -y tw_￼.mp4
touch tw_done￼
rm -f tw_0.mp4"""
text("${CB667783-5C2A-41F4-9133-E00BD7CC50C7}")
							if(Renamed Item false) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
							} else {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
var shell = Variable
var switched = Variable
//Unable to get shortcuts action is.workflow.actions.setvariable
								repeat(10) { >> RepeatResult
									if(loop == nil) {
										repeat(10) { >> RepeatResult 1
											if(loop == nil) {
												wait(seconds: 0.5)
												getFile(path: "tw_done${random}", error: false) >> getFile 1
var loop = File
												nothing()
											}
										}
									}
								}
							}
							getFile(path: "tw_${Repeat Index 2}.mp4")
						}
					} else {
var shell = Variable
var switched = Variable
						randomNumber(min: 0, max: 99999) >> random
var EBDAB634-104C-4EE5-BAF5-9305AFBEF01A = """cd ~OnMyDevice
rm -f tw_* *.ts
touch tw_begin￼
hideKeyboard
jsc --reset
clear
jsi -c "let u='￼';jsc.system('curl -Sso tw_1.m3u8 '+u);let l=jsc.readFile('tw_1.m3u8').match(/^[^#].+/gm);let base=u.replace(/[^\/]+$/,'');jsc.writeFile('tw_1.dash','echo;echo \"🍩x'+Math.ceil(l.length/10)+'\";TW1=\"curl --retry 5 -OLSs '+base+'\";'+l.map((a,i)=>((i%10==9)?'echo -n '+((i%500==499)?Math.round(i/10)+';':'🍩;'):'')+'${TW1}'+a+';').join(''))"
dash tw_1.dash
echo
ffmpeg -v error -stats -protocol_whitelist file,tls,tcp,https,crypto -i tw_1.m3u8 ￼ -c:v copy -c:a copy -y tw_￼.mp4
rm -f *.ts tw_1.m3u8
touch ￼ tw_￼.mp4
open shortcuts:"""
text("${EBDAB634-104C-4EE5-BAF5-9305AFBEF01A}")
						repeat(5) { >> RepeatResult 2
							if(File == nil) {
								if(Repeat Index 3 .between 2...4) {
								} else {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
								}
								wait(seconds: 0.5)
								getFile(path: "tw_begin${random}", error: false) >> getFile 2
							}
						}
						waitToReturn()
						getFile(path: "tw_${Repeat Index 2}.mp4") >> getFile 3
						if(tweetDict != nil) { >> IFResult 40
							setName(input: File, name: "${Adjusted Date} ${ActionOutput}.m4a") >> setName 1
							share(file: Renamed Item) >> share
						}
					} >> IFResult 41
					setName(input: If Result, name: "tw_${Repeat Index 2}") >> setName 2
				} >> RepeatResult 3
				if(Repeat Results .contains "m4a") { >> IFResult 42
var media = Repeat Results
					valuesFrom(dictionary: pref) >> Quick Look
					if(Quick Look != 1) { >> IFResult 43
						if(OS .between 171...173) {
							math(input: "1", operation: -, operand: switched) >> math 9
var switched = Calculation Result
							if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
							} else {
								openApp(id: "com.atebits.Tweetie2")
							}
						} else {
							wait(seconds: 0.1)
						}
						quicklook(input: media)
						valuesFrom(dictionary: pref) >> ⤷Ask after Quick Look
						if(⤷Ask after Quick Look == 1) {
							menu(, [) {
							case("mainDict (continue)"):
							case("mainDict (quit)"):
//Unable to get shortcuts action is.workflow.actions.setvariable
							}
						}
					} >> IFResult 44
					count(input: media) >> count 3
					if(Count > 1) { >> IFResult 45
						valuesFrom(dictionary: pref) >> Select if Multiple
						if(Select if Multiple == 1) {
							if(OS .between 171...173) {
								math(input: "1", operation: -, operand: switched) >> math 10
var switched = Calculation Result
								if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
								} else {
									openApp(id: "com.atebits.Tweetie2")
								}
							} else {
								wait(seconds: 0.1)
							}
							choose(list: media, multiple: true, all: true) >> choose 3
var media = Chosen Item
						} >> IFResult 46
					} >> IFResult 47
					repeatEach(media) { >> RepeatResult 4
						replaceText(input: "${Repeat Item 2.as(File).get(Name)}", find: "\D+", isRegex: true) >> index2
						getItemFromList(list: tweetDict, type: Item At Index, index: index2) >> getItemFromList 3
var Info = Item from List
						valuesFrom(dictionary: Info) >> type
						if(type == "photo") { >> IFResult 48
//Unable to get shortcuts action is.workflow.actions.appendvariable
							text(text: "${Repeat Item 2.as(Image).get(Width)} ${Variable.as(Image).get(Width)}x${Repeat Item 2.get(File Extension)} (${Variable.get(File Extension)})") >> text
//Unable to get shortcuts action is.workflow.actions.appendvariable
						} >> IFResult 49
						number(value: 0) >> number 3
						if(type == "video") {
							number(value: 1)
						} >> IFResult 50
						if(type == "animated_gif") { >> IFResult 51
							if(toGIF != 1) {
								number(value: 1)
							}
						} >> IFResult 52
						if(If Result == 1) { >> IFResult 53
//Unable to get shortcuts action is.workflow.actions.getvariable
							if(MediaDate == 2) { >> IFResult 54
								if(shell == nil) {
									encodeAudio(media: Repeat Item 2) >> encodeAudio
									getFileOfType(input: Encoded Media, type: "public.mpeg-4") >> getFileOfType
									setName(input: File of Type, name: "tw_${index2}")
								}
							} >> IFResult 55
//Unable to get shortcuts action is.workflow.actions.appendvariable
							text(text: "${Info.as(Dictionary).key(width)} ${Variable.as(Dictionary).key(width)}x${If Result.get(File Extension)} (${ActionOutput.get(File Extension)})") >> text 1
//Unable to get shortcuts action is.workflow.actions.appendvariable
						}
						if(type == "animated_gif") { >> IFResult 56
							if(toGIF != 0) { >> IFResult 57
								if(GIF Quality == 0) { >> IFResult 58
									math(input: "1", operation: /, operand: Repeat Item 2) >> math 11
									valuesFrom(dictionary: Info) >> w
									valuesFrom(dictionary: Info) >> h
									if(w > h) {
										makeGIF(content: Repeat Item 2, frameTime: Calculation Result, autoSize: false, height: w) >> makeGIF
									} else {
										makeGIF(content: Repeat Item 2, frameTime: Calculation Result, autoSize: false, width: h) >> makeGIF 1
									} >> IFResult 59
									setName(input: If Result, name: "tw_${index2}") >> setName 3
//Unable to get shortcuts action is.workflow.actions.appendvariable
									text(text: "${Info.as(Dictionary).key(height)}${Variable.as(Dictionary).key(height)}x${If Result.get(File Extension)} (${ActionOutput.get(File Extension)})") >> text 2
//Unable to get shortcuts action is.workflow.actions.appendvariable
								} else {
var switched = Variable
									imageDetail(detail: Frame Rate, image: Repeat Item 2) >> imageDetail
									setValue(key: "f", value: "${Frame Rate}") >> setValue 6
									matchText(text: "${Dictionary}", regex: "(?<=:)\d+(\.\d{1,6})?") >> Frame Rate
									getFile(path: "tw_${index2}.mp4", error: false) >> getFile 1
									if(File == nil) {
										saveFile(input: Repeat Item 2, ask: false, overwrite: true) >> saveFile 6
									}
									randomNumber(min: 0, max: 99999) >> random
var 8220E4E6-825D-4AC6-A8FE-AA211E07AA00 = """cd ~OnMyDevice
touch tw_begin￼
rm -f tw_done*
hideKeyboard
clear
echo "	🕑  PLEASE WAIT  🕓"
echo
ffmpeg -v error -stats -i tw_￼.mp4 -filter_complex "[0:v]tpad=stop_mode=clone:stop_duration=0"`bc -e "scale=3;.8/￼"`",fps=￼,split[a][b];[a]palettegen=reserve_transparent=0:stats_mode=diff[p];[b][p]paletteuse=dither=floyd_steinberg" -y tw_￼Better.gif
echo
ffmpeg -v error -stats -i tw_￼.mp4 -filter_complex "[0:v]tpad=stop_mode=clone:stop_duration=0"`bc -e "scale=3;.8/￼"`",fps=￼,split[a][b];[a]palettegen=reserve_transparent=0:stats_mode=single[p];[b][p]paletteuse=dither=floyd_steinberg:new=1" -y tw_￼Best.gif
touch ￼ tw_*.gif tw_done￼
echo"""
text("${8220E4E6-825D-4AC6-A8FE-AA211E07AA00}")
									replaceText(input: "${Text}", find: "
", replace: ";") >> replaceText 11
//Unable to get shortcuts action is.workflow.actions.setvariable
									repeat(5) { >> RepeatResult 5
										if(loop == nil) {
											if(Repeat Index 3 .between 2...4) {
											} else {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
											}
											wait(seconds: 0.5)
											getFile(path: "tw_begin${random}", error: false) >> getFile 2
var loop = File
										}
									}
//Unable to get shortcuts action is.workflow.actions.setvariable
									repeat(10) { >> RepeatResult 6
										if(loop == nil) {
											repeat(10) { >> RepeatResult 7
												if(loop == nil) {
													wait(seconds: 0.5)
													getFile(path: "tw_done${random}", error: false) >> getFile 3
var loop = File
													nothing()
												}
											}
										}
									} >> RepeatResult 8
									getFile(path: "tw_${index2}Better.gif") >> getFile 4
var better = File
									getFile(path: "tw_${index2}Best.gif") >> getFile 5
var best = File
									text(text: "${better.as(Image).get(Width)} ${Variable.as(Image).get(Width)}x${better.get(File Extension)} (${Variable.get(File Extension)})") >> text 3
									text(text: "${best.as(Image).get(Width)} ${Variable.as(Image).get(Width)}x${best.get(File Extension)} (${Variable.get(File Extension)})") >> text 4
									list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Type = Variable;
                        VariableName = better;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Type = Variable;
                        VariableName = best;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 1
var loop = Variable
									repeat(10) { >> RepeatResult 9
										if(loop ==) {
var loop = Variable
											menu(, [) {
											case("mainDict (quicklookboth)"):
var loop = Variable
												if(OS .between 171...173) {
													math(input: "1", operation: -, operand: switched) >> math 12
var switched = Calculation Result
													if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
													} else {
														openApp(id: "com.atebits.Tweetie2")
													}
												} else {
													wait(seconds: 0.1)
												}
												quicklook(input: List)
											case("mainDict (getbetter)better (File Size))"):
//Unable to get shortcuts action is.workflow.actions.appendvariable
//Unable to get shortcuts action is.workflow.actions.appendvariable
											case("mainDict (getbest)best (File Size))"):
//Unable to get shortcuts action is.workflow.actions.appendvariable
//Unable to get shortcuts action is.workflow.actions.appendvariable
											case("mainDict (getboth)"):
//Unable to get shortcuts action is.workflow.actions.appendvariable
//Unable to get shortcuts action is.workflow.actions.appendvariable
//Unable to get shortcuts action is.workflow.actions.appendvariable
//Unable to get shortcuts action is.workflow.actions.appendvariable
											} >> MenuResult 1
										}
										nothing()
									} >> RepeatResult 10
								} >> IFResult 60
							} >> IFResult 61
						} >> IFResult 62
						nothing()
					} >> RepeatResult 11
var media = Variable
					if(MediaDate == 1) { >> IFResult 63
						repeatEach(media) {
							getFile(path: "${Repeat Item 2.get(File Extension)}.${Variable.get(File Extension)}", error: false) >> getFile 6
							if(File == nil) {
								saveFile(input: Repeat Item 2, ask: false, overwrite: true)
							}
							nothing() >> nothing 2
							if(Repeat Item 2 == "mp4") {
								replaceText(input: "${-t MediaDate}", find: "\D+", isRegex: true) >> replaceText 12
var C5613429-9DDD-40EA-8BA7-22C438B90670 = """ffmpeg -v warning -i ￼.￼ -c copy -map 0 -metadata creation_time=￼ -y tw_0.mp4
mv -f tw_0.mp4 ￼.￼
"""
text("${C5613429-9DDD-40EA-8BA7-22C438B90670}")
							} >> IFResult 64
							randomNumber(min: 0, max: 99999) >> random
var A767F5C5-D280-4CF4-9121-66388A2FBA1C = """cd ~OnMyDevice
rm -f tw_done*
￼touch ￼ ￼.￼ tw_done￼"""
text("${A767F5C5-D280-4CF4-9121-66388A2FBA1C}")
							if(Repeat Item 2 false) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
							} else { >>  1
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
var shell = Variable
var switched = Variable
//Unable to get shortcuts action is.workflow.actions.setvariable
								repeat(20) {
									if(loop == nil) {
										wait(seconds: 0.3)
										getFile(path: "tw_done${random}", error: false) >> getFile 7
var loop = File
										nothing()
									}
								}
							} >> IFResult 65
							getFile(path: "${Repeat Item 2.get(File Extension)}.${Variable.get(File Extension)}")
						} >> RepeatResult 12
var media = Repeat Results
					} >> IFResult 66
					repeatEach(media) {
						nothing() >> nothing 3
						if(Count > 1) {
							replaceText(input: " ${Repeat Item 2.get(Name)}", find: "tw_|B.+", isRegex: true)
						} >> IFResult 67
						setName(input: Repeat Item 2, name: "${If Result} ${ActionOutput}${Adjusted Date}")
					} >> RepeatResult 13
var media = Repeat Results
				}
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} >> IFResult 68
			if(media != nil) { >> IFResult 69
				valuesFrom(dictionary: pref) >> Share
				if(Share == 1) {
					if(OS .between 171...173) {
						math(input: "1", operation: -, operand: switched) >> math 13
var switched = Calculation Result
						if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
						} else {
							openApp(id: "com.atebits.Tweetie2")
						}
					} else {
						wait(seconds: 0.1)
					}
					share(file: media) >> share 1
				} >> IFResult 70
				valuesFrom(dictionary: pref) >> Save to Files
				if(Save to Files == 1) { >> IFResult 71
					valuesFrom(dictionary: pref) >> valuesFrom 1
					if(OS > 0) {
						if(Dictionary Value == nil) {
							menu(, [) {
							case("mainDict (onmy)Device Details (Device Type)"):
								number(value: 1)
							case("iCloud Drive"):
								number(value: 2)
							case("iCloud Drive/Shortcuts"):
								number(value: 3)
							} >> MenuResult 2
							setValue(key: "folderlocation", value: "${Menu Result.as(Number)}", dictionary: pref) >> setValue 7
var pref = Dictionary
//Unable to get shortcuts action is.workflow.actions.getvariable
						} >> IFResult 72
					} >> IFResult 73
					if(If Result == 1) {
						file(file: $0) >> file
					} else {
						if(If Result == 2) {
							file(file: $0) >> file 1
						} else {
							file(file: $0) >> file 2
						}
					} >> IFResult 74
					if(pref == nil) {
						if(OS > 0) {
							valuesFrom(dictionary: mainDict)
						} else {
							valuesFrom(dictionary: mainDict) >> valuesFrom 2
						} >> IFResult 75
						askForInput(prompt: "${If Result}") >> askForInput
						text(text: "${Provided Input}") >> text 5
						setValue(key: "savefolder", value: "${Text}", dictionary: pref) >> setValue 8
var pref = Dictionary
						saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 7
						if(Provided Input != nil) {
							createFolder(path: "${pref.key(savefolder)}") >> createFolder
						}
					} >> IFResult 76
					saveFile(input: media, ask: false, path: "${pref.key(savefolder)}") >> saveFile 8
				} >> IFResult 77
				valuesFrom(dictionary: pref) >> Save to Album
				if(Save to Album == 1) { >> IFResult 78
					valuesFrom(dictionary: pref) >> album
					if(album == nil) {
						alert(alert: "${mainDict.key(msg.album)}", cancel: false)
						saveToCameraRoll(image: media, album: Ask) >> saveToCameraRoll
						getItemFromList(list: Saved Photo Media) >> getItemFromList 4
						text(text: "${Item from List}") >> text 6
						setValue(key: "album", value: "${Text}", dictionary: pref) >> setValue 9
var pref = Dictionary
						saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 9
					} else {
						if(album == "") {
							saveToCameraRoll(image: media) >> saveToCameraRoll 1
						} else {
							if(OS > 0) {
								createAlbum(photos: media, name: "${album}") >> createAlbum
							} else {
								saveToCameraRoll(image: media, album: album) >> saveToCameraRoll 2
							}
						}
					} >> IFResult 79
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
					valuesFrom(dictionary: pref) >> ⤷Open Photos after Save
				} >> IFResult 80
				valuesFrom(dictionary: pref) >> ⤷Show Notification
			}
			if(switched == 1) {
				openApp(id: "com.atebits.Tweetie2")
			}
/*
◢◣		DOWNLOAD


*/
		} >> IFResult 81
		if(Update Menu Shown == nil) { >> IFResult 82
/*


◥◤		UPDATE
*/
			if(version != nil) {
				if(version .contains ""${mainDict.as(Dictionary).key(version)}"") {
					menu(, [) {
					case("mainDict (gotoweb)"):
						openURL(url: mainDict)
						exit()
					case("mainDict (downloadupdate)"):
						downloadURL(url: "${mainDict.key(downloadurl)}") >> downloadURL 1
						matchText(text: "${Contents of URL}", regex: "(?<="id":\D?)\d+") >> matchText 2
						expandURL(url: "https://routinehub.co/download/${Matches}/") >> expandURL 1
						replaceText(input: "${Expanded URL}", find: "^.+icloud.com/", replace: "shortcuts://", isRegex: true) >> replaceText 13
						openURL(url: Updated Text)
						exit()
					case("mainDict (notnow)"):
						number(value: 1) >> Update Menu Shown
					} >> MenuResult 3
				}
			}
		}
		if(command != ""${mainDict.key(quit)}"") { >> IFResult 83
			if(command == ""${mainDict.key(settings)}"") { >> IFResult 84
/*


◥◤		SETTINGS
*/
var menu = Variable
				count(input: pref) >> count 4
				repeat(30) {
					if(menu ==) {
						valuesFrom(dictionary: pref) >> valuesFrom 3
						if(Dictionary Value != nil) {
							valuesFrom(dictionary: pref) >> valuesFrom 4
							if(Dictionary Value == 1) {
								text(text: "${DeviceDetails.get(Device Type)}${mainDict.key(onmy)}") >> text 7
							} else {
								if(Dictionary Value == 2) {
									text(text: "iCloud")
								} else {
									text(text: "iCloud Drive/Shortcuts")
								}
							} >> IFResult 85
var 3096359F-ECBC-49F0-A37E-5732F95436CA = """
￼‘￼/￼’"""
text("${3096359F-ECBC-49F0-A37E-5732F95436CA}")
						} >> IFResult 86
						valuesFrom(dictionary: pref) >> valuesFrom 5
						if(Dictionary Value != nil) {
							if(Dictionary Value == "") {
								valuesFrom(dictionary: mainDict)
							} >> IFResult 87
var 82748C50-FF0D-40C2-A736-545EE25D12E4 = """
￼‘￼’"""
text("${82748C50-FF0D-40C2-A736-545EE25D12E4}")
						} >> IFResult 88
						repeatEach(mainDict) {
							valuesFrom(dictionary: pref) >> valuesFrom 6
							if(Repeat Item 3 != nil) {
								valuesFrom(dictionary: Repeat Item 3) >> valuesFrom 7
								text(text: "${Dictionary Value}　➤　${ActionOutput}") >> text 8
							} else {
								valuesFrom(dictionary: mainDict) >> valuesFrom 8
								text(text: "${Repeat Item 3.as(Dictionary).key(title)}  ${Variable.as(Dictionary).key(title)}")
							} >> IFResult 89
						} >> RepeatResult 14
						list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Repeat Results";
                        OutputUUID = "1C0DD17D-B54B-4639-A988-823743B42ED7";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = goback;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 2
						choose(list: List, prompt: "${albumname}${ActionOutput}${folderpath}") >> choose 4
						if(Chosen Item == ""${mainDict.key(goback)}"") {
							if(twurl != nil) {
var command = Variable
							} >> IFResult 90
var menu = Variable
						} else {
							repeat(Count) {
								valuesFrom(dictionary: mainDict) >> valuesFrom 9
								if(Chosen Item .contains ""${Dictionary Value}"") {
									number(value: Repeat Index 3) >> number 4
								} >> IFResult 91
							} >> RepeatResult 15
							valuesFrom(dictionary: pref) >> valuesFrom 10
							text(text: "${Number}${ActionOutput}") >> text 9
							if(Text .between 17...18) {
								if(Text == 17) {
									setValue(key: "folderlocation", value: " ", dictionary: pref) >> setValue 10
									setValue(key: "savefolder", value: " ", dictionary: Dictionary) >> setValue 11
									replaceText(input: "${Dictionary}", find: ""(?:folderlocation|savefolder)":" ",?", isRegex: true)
								} else {
									setValue(key: "album", value: " ", dictionary: pref) >> setValue 12
									replaceText(input: "${Dictionary}", find: ""album":" ",?", isRegex: true)
								} >> IFResult 92
								getDictionaryFrom(input: If Result) >> getDictionaryFrom 4
var pref = Dictionary
							} >> IFResult 93
							valuesFrom(dictionary: mainDict) >> valuesFrom 11
							if(Dictionary Value == nil) {
								valuesFrom(dictionary: mainDict)
							} >> IFResult 94
							count(input: OptionString) >> count 5
							valuesFrom(dictionary: pref) >> valuesFrom 12
							math(input: Dictionary Value, operation: …, scientific: Modulus) >> math 14
							math(input: Calculation Result, operand: "1") >> NewOption
							repeatEach(pref) {
								if(Repeat Index 3 == Number) {
//Unable to get shortcuts action is.workflow.actions.getvariable
								}
							} >> RepeatResult 16
							setValue(key: "selection", value: "${Repeat Results.as(Number)}", dictionary: pref) >> setValue 13
var pref = Dictionary
							saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 10
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						} >> IFResult 95
					} >> IFResult 96
				} >> RepeatResult 17
/*
◢◣		SETTINGS


*/
			} >> IFResult 97
			if(command == ""${mainDict.key(account)}"") { >> IFResult 98
/*


◥◤		ACCOUNT
*/
				if(DeviceDetails ==) {
					alert(alert: "${mainDict.key(msg.accountpromptipad)}")
				} else {
					alert(alert: "${mainDict.key(msg.accountprompt)}")
				}
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
				exit()
			} >> IFResult 99
			if(command != ""${mainDict.key(download)}"") { >> IFResult 100
/*


◥◤		MENU
*/
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
				if(Output != nil) {
					wait(seconds: Output)
					runShortcut(name: "HiRes Twitter")
					exit()
				}
				if(Output != nil) {
var 15D86626-0173-40DA-92DD-13E50A9D0838 = """￼
￼
"""
text("${15D86626-0173-40DA-92DD-13E50A9D0838}")
				} else {
					valuesFrom(dictionary: mainDict)
				} >> IFResult 101
				list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact2;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = account;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = settings;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = getlink;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = quit;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 3
				choose(list: List, prompt: "${If Result}") >> choose 5
var command = Chosen Item
			} >> IFResult 102
			if(command == ""${mainDict.key(getlink)}"") { >> IFResult 103
/*


◥◤		GET CLIPBOARD
*/
				getClipboard() >> getClipboard
				matchText(text: "${Clipboard}", regex: "twitter\.com/|t\.co/|x\.com/") >> matchText 3
				if(Matches != nil) {
					runShortcut(name: "HiRes Twitter", input: Clipboard) >> runShortcut
					exit()
				} else {
					alert(alert: "${Clipboard}", title: "${mainDict.key(msg.noclipboard)}", cancel: false)
				}
			}
			if(command == ""${mainDict.key(contact)}"") { >> IFResult 104
/*


◥◤		CONTACT
*/
				openURL(url: mainDict) >> openURL
				exit()
			} >> IFResult 105
			if(command == ""${mainDict.key(contact2)}"") { >> IFResult 106
				openURL(url: mainDict) >> openURL 1
				exit()
			}
/*
◢◣		NOT QUIT


*/
		} >> IFResult 107
/*
◢◣		NOT QUIT


*/
	} >> IFResult 108
} >> RepeatResult 18
if(⤷Open Photos after Save == 1) {
	openApp(id: "com.apple.mobileslideshow")
} >> IFResult 109
if(⤷Show Notification == 1) {
	sendNotification(body: "${Media Info}", sound: false) >> sendNotification
} >> IFResult 110
