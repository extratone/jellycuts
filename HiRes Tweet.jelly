import Shortcuts
#Color: green,#Icon: star

// This Twitter client lets you download media from public or private accounts at the highest quality, save to Photos or Files or share. It can also upload images at up to 8K.
2022-02-12 	v2.5.1 	u/gluebyte
https://routinehub.co/shortcut/7912
list(items: (
        {
        WFItemType = 1;
        WFValue =         {
            Value =             {
                Value =                 {
                    WFDictionaryFieldValueItems =                     (
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = version;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "2022-02-12";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefversion;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 5;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = filename;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "HiRes Tweet.json";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = defaultpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 5;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 1;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = users;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        Value =                                                         {
                                                            WFDictionaryFieldValueItems =                                                             (
                                                            );
                                                        };
                                                        WFSerializationType = WFDictionaryFieldValue;
                                                    };
                                                    WFSerializationType = WFDictionaryFieldValue;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = selection;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 4;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefstring;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save gif as";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "mp4 [1/4]",
                                                                    "gif [2/4]",
                                                                    "Both mp4 and gif [3/4]",
                                                                    "Ask Always [4/4]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 gif Quality";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "High (Requires a-Shell mini) [1/3]",
                                                                    "Low [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Quick Look";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "None [1/3]",
                                                                    "All Media [2/3]",
                                                                    "Only Videos and gifs [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Ask to Continue after Quick Look";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show List for Multiple Images";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = Share;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Files";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Photos";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Open Photos after Save";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Set Media Date to";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Date Tweeted (Requires a-Shell mini) [1/3]",
                                                                    "Current Date [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show Notification";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    }
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = option;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "\U2611\Ufe0f",
                                    "\U2b1c\Ufe0f"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = worker;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://hirestweet.gluebyte.workers.dev/";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = shortcutpage;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/shortcut/7912/";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadurl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/api/v1/shortcuts/7912/versions/latest";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "\U2192jpeg";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2192jpeg";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = emptydict;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = emptytext;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = newline;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\n";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 4;
                            WFKey =                             {
                                Value =                                 {
                                    string = false;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value = 0;
                                WFSerializationType = WFNumberSubstitutableState;
                            };
                        },
                                                {
                            WFItemType = 4;
                            WFKey =                             {
                                Value =                                 {
                                    string = true;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value = 1;
                                WFSerializationType = WFNumberSubstitutableState;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onmy;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "On My ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = maxpixel;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 8192;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = maxbyte;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 5242880;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = threshold;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "5E-3";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = readme;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "<!DOCTYPE html><html><head><title>HiRes Tweet</title>\n<meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width\"><meta name=\"color-scheme\" content=\"light dark\">\n<style>body { font-family:system-ui; word-break:keep-all; line-height:2; }\na { color:#09f; text-decoration:none; }</style></head><body>\n<h2 style=\"line-height:0.5;\">Please Read</h2>\n\n<div style=\"text-align:right; font-size:1.5em; font-family:monospace; line-height:0.3; padding-right:20px;\">\n<p><a href=\"https://www.reddit.com/user/gluebyte/\">u/gluebyte</a></p>\n<p><a href=\"https://routinehub.co/user/gluebyte\">routinehub.co/user/gluebyte</a></p></div>\n\n<p><i>HiRes Tweet</i> can download media from public or <strong>private</strong> accounts at the highest quality, save to <i>Photos</i> or <i>Files</i> or share. It can also upload images at up to 8K.</p>\n\n<h3>Downloading Media</h3>\n\n<ul><li><strong>Long-press</strong> a tweet\U2019s share button, then select <i>HiRes Tweet</i> from the list.\n<ul><li>Alternatively you can <i>tap</i> the share button, tap \U2018Share via\U2019, then select <i>HiRes Tweet</i>. This may not work on private tweets, though.</li></ul></li>\n<li>Images are downloaded at up to 8K (for comparison, the Twitter app is limited to 4K).</li>\n<li>gifs can be downloaded as gif and/or mp4.</li>\n<li>You can save media to <i>iCloud</i> or <i>On My Device</i> on iOS 15, or to <i>iCloud/Shortcuts</i> on iOS 14 or older.</li></ul>\n\n<h3>Uploading Image</h3>\n\n<ul><li>To compose a tweet with an image at up to 8K (for comparison, the Twitter app is limited to 4K), run <i>HiRes Tweet</i> from the <i>Shortcuts</i> app.</li>\n<li>Share your own tweet, and you can reply to it with an image.</li></ul>\n\n<h3>User Settings</h3>\n\n<ul><li>You can change user settings by running <i>HiRes Tweet</i> from the <i>Shortcuts</i> app.</li>\n<li>Connecting accounts enables you to download private media and upload images.</li>\n<li>To change folder or album, toggle the <i>Save to Files/Photos</i> option off and on.</li></ul>\n</body></html>";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = info;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2139\Ufe0f  Show Instructions / Contact";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = connect;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc24  Connect Twitter Account";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = disconnect;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2702\Ufe0f  Disconnect Account";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = settings;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2699\Ufe0f  User Settings";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = upload;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Uddbc  Tweet Image";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = quit;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd1a  Quit";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = download;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b50\Ufe0f  Download Media";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = reply;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Uddbc  Tweet Image as Reply";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getlink;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udccb Download Media from Copied Link";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = refresh;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = refresh;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = goback;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Go Back";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = gotoweb;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf0f  Go to RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = dateoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Date Tweeted",
                                    "Always Current Date",
                                    "Date Tweeted",
                                    "Current Date"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gifoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always mp4 and gif",
                                    "Always gif",
                                    "Always mp4",
                                    "mp4 and gif",
                                    gif,
                                    mp4
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gifqualityoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Low",
                                    "Always High",
                                    Low,
                                    High
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getashell;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udcf2  Get app from App Store";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = haveashell;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2705  a-Shell mini is installed";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = quicklookboth;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd0e  Quick Look Both";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getbetter;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd38  Get Better Quality (";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getbest;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd36  Get Best Quality (";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getboth;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc95  Get Both";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = continue;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udcab  Continue";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = moreimage;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Uddbc  Add Image";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = opentweet;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc23  Open Tweet";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = showinfo;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udcd9  Instructions";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc27  Contact gluebyte on RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc26  ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = confirmdisconnect;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2702\Ufe0f  Disconnect";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = loginerror;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U202232\U202289\U2022";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = loginerror2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U202232\U202289\U2022179\U2022";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = copyerror;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udccb  Copy Error to Clipboard";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = openmenu;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc24  Manage Accounts";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadupdate;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc7e  Download Update";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = notnow;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Not Now";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = folder;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Folder: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = album;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Album: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = msg;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = error;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "An error occured. Please contact developer if problem persists.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oldpref;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nThis shortcut is older than the settings file. Please download the latest version.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newpref;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "User settings have been updated. Please review new settings.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = notweeturl;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please share a tweet.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = onlyurls;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nOnly links found in tweet:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNo media attached to tweet.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = dateprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nChoose date of media. The free \U2018a-Shell mini\U2019 app is required for \U2018Date Tweeted\U2019:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = optionsaved;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U2728 Option has been saved. To change settings, run \U2018HiRes Tweet\U2019 from the Shortcuts app.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nSave gif as:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifqualityprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease select gif quality. Low is faster, High requires the free \U2018a-Shell mini\U2019 app:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = ashellprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nIs \U2018a-Shell mini\U2019 installed?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gifprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNote: \U2018Better\U2019 may look better than \U2018Best\U2019 if color changes and movements are small across frames.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = album;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease select photo album from the following list. You can change it later in \U2018User Settings\U2019.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accountprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease choose account:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = tweet1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease enter tweet status:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = photoready;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Ready to upload:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = tweet2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please confirm tweet status:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = tweeted;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nTweet is uploaded:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nouserprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease connect Twitter account to upload photos or download protected media.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = userlistprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Connected accounts: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = connect1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease confirm your active account and press \U2018Done\U2019 in the next screen.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = connect2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease authorize, copy PIN and press \U2018Done\U2019 in the next screen.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = revokeapp1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nIn the next screen, press \U2018Done\U2019 after confiming that the active account is ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = revokeapp2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease \U2018revoke access\U2019 if you see \U2018HiRes Tweet Shortcut\U2019 in the next screen.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = enterpin;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease enter PIN:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = disconnectprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nChoose account you want to disconnect:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = settingprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Tap any item to change option. To reset folder or album, turn the option off and on.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = locationprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nWhere do you want to save media?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nEnter folder name for media:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nEnter folder name for media. It will be created inside iCloud Drive/Shortcuts folder:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = noclipboard;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nNo Twitter link in clipboard.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "New Version Available";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = mytweetprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "This tweet is from ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = loginerrorprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Account error occured. If problem persists, please try disconnecting and reconnecting ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = protectederrorprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please connect an account that follows this protected account and try again:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = e34;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Account does not exist or has been deleted.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = e88;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Too many users are using the shortcut. Please try again later or connect an account.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = e144;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Tweet does not exist or has been deleted.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        }
                    );
                };
                WFSerializationType = WFDictionaryFieldValue;
            };
            WFSerializationType = WFDictionaryFieldValue;
        };
    }
)) >> list
getDictionaryFrom(input: List) >> getDictionaryFrom
var mainDict = Dictionary
if( == $2) {
	number(value: 4) >> number
} else {
	deviceDetails(detail: System Version) >> deviceDetails
	replaceText(input: "${System Version}.0", find: "^(\d+)\.(\d).*", replace: "$1$2", isRegex: true) >> replaceText
	number(value: 3) >> number 1
	if( false 150) {
		number(value: 2) >> number 2
		if( false 143) {
			number(value: 1) >> number 3
			if( false 140) {
				number(value: 0) >> number 4
			}
		}
	}
} >> If Result
var OS = If Result
// ◥◤		CHECK INPUT
if( != nil $2) {
	if( .beginsWith "{"") {
		var command = mainDict
	} else {
		getItemFromList(list: Shortcut Input, type: Last Item) >> getItemFromList
		if( .contains "t.co/") {
			expandURL(url: "${Item from List}") >> expandURL
		} >> twurl
		if( .contains "twitter.com/") {
			replaceText(input: "ㅁ${twurl}", find: "^.*/(\d{17,}).*$", replace: "$1", isRegex: true) >> ID
			if( .beginsWith "ㅁ") {
				alert(alert: "${twurl}
${ActionOutput}", cancel: false)
			} else {
				var input = twurl
				var command = mainDict
			} >> If Result 1
		} else {
			alert(alert: "${twurl}
${ActionOutput}", cancel: false)
		}
	} >> If Result 2
} >> If Result 3
// ◥◤		CHECK PREF
if( > 2) {
	setValue(key: "filename", value: "Shortcuts/${mainDict.key(filename)}", dictionary: mainDict) >> setValue
	var mainDict = Dictionary
} >> If Result 4
getFile(picker: false, path: "${mainDict.key(filename)}", error: false) >> getFile
if( == nil $2) {
	if( > 2) {
		createFolder(path: "Shortcuts/")
	} >> If Result 5
	getDictionaryFrom(input: mainDict) >> getDictionaryFrom 1
	var pref = Dictionary
	saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile
	richTextFromHTML() >> richTextFromHTML
	quicklook(input: Rich Text from HTML)
} else {
	getDictionaryFrom(input: File) >> getDictionaryFrom 2
	var pref = Dictionary
	keysFrom(dictionary: pref) >> prefversion
	if( != mainDict) {
		if( > mainDict) {
			menu(, [) {
			case("mainDict (gotoweb)"):
				openURL(url: mainDict)
			} >> Menu Result
			exit()
		} >> If Result 6
		combineText(text: pref, combine: Custom) >> combineText
		if( == 1) {
			replaceText(input: "${Combined Text}", find: "...$", replace: "2$0", isRegex: true) >> replaceText 1
		} >> If Result 7
		if( false 3) {
			replaceText(input: "${If Result}", find: "^.", replace: "$03", isRegex: true) >> replaceText 2
		} >> If Result 8
		if( false 4) {
			replaceText(input: "${If Result}", find: ".$", replace: "2$0", isRegex: true) >> replaceText 3
		} >> If Result 9
		if( false 5) {
			replaceText(input: "${If Result}", find: "2(.)$", replace: "3$1", isRegex: true) >> replaceText 4
		} >> If Result 10
		splitText(text: If Result, separator: Every Character) >> splitText
		setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 1
		setValue(key: "prefversion", value: "${mainDict.key(prefversion)}", dictionary: Dictionary) >> setValue 2
		var pref = Dictionary
		saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 1
	}
} >> If Result 11
// ◥◤		CHECK ACCOUNTS
keysFrom(dictionary: pref) >> keysFrom
filterFiles() >> filterFiles
var users = Files
count(input: users) >> count
var usercount = Count
if( != 0) {
	if( != nil $2) {
		replaceText(input: "${twurl}", find: ".*twitter\.com/([^/]+)/.*", replace: "$1", isRegex: true) >> replaceText 5
var FF3ABBA1-D248-4F41-9848-8FE54CB1DBA3 = """ㅁ
￼"""
text("${FF3ABBA1-D248-4F41-9848-8FE54CB1DBA3}")
		replaceText(input: "${Text}", find: "(?ms).*^(${Updated Text})$.*", replace: "$1", isRegex: true, caseSensitive: false) >> TweetUser
		if( .beginsWith "ㅁ") {
		} else {
			menu(, [) {
			case("mainDict (download)"):
			case("mainDict (reply)"):
				var currentuser = TweetUser
				var command = mainDict
			}
		}
	} >> If Result 12
} >> If Result 13
repeat(20) {
// ◥◤		LOOP
	if( != ""${mainDict.key(quit)}"") {
		if( == ""${mainDict.key(download)}"") {
// ◥◤		DOWNLOAD
			var command = mainDict
			if( .beginsWith "{"") {
				openApp(id: "com.atebits.Tweetie2")
				keysFrom(dictionary: Shortcut Input) >> filename
				if( != nil $2) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.GetFileIntent
					setName(input: File, name: "${filename}") >> setName
					var media = Renamed Item
				}
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.GetFileIntent
				setName(input: Better, name: "${filename}") >> Better
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.GetFileIntent
				setName(input: Best, name: "${filename}") >> Best
				var gifw = Best
				var gifh = Best
				list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Better;
                        OutputUUID = "A1995D02-5615-4F3A-B21D-F9A21C08FD12";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Best;
                        OutputUUID = "662863E4-38B8-4552-A118-97808825AF6A";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 1
				var gifloop = mainDict
				repeat(10) {
					if( == $2) {
						var gifloop = mainDict
						menu(, [) {
						case("mainDict (quicklookboth)"):
							var gifloop = mainDict
							quicklook(input: List)
						case("mainDict (getbetter)Better (File Size))"):
//Unable to get shortcuts action is.workflow.actions.getvariable
						case("mainDict (getbest)Best (File Size))"):
//Unable to get shortcuts action is.workflow.actions.getvariable
						case("mainDict (getboth)"):
							list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Better;
                        OutputUUID = "3C33BDA3-E5F0-488A-BBB3-93E51427D2A8";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Best;
                        OutputUUID = "BB8B32C0-17D2-4A55-82BC-7A88C5F0367D";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
))
						} >> Menu Result 1
					}
					nothing()
				} >> Repeat Result
				var media += Menu Result >> variable
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} else {
				setValue(key: " ", value: "${mainDict.key(emptydict)}", dictionary: pref) >> userdict
				list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Type = Variable;
                        VariableName = users;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
    " "
)) >> list 2
				repeatEach(List) {
					if( == $2) {
					} else {
						var currentuser = Repeat Item 2
						keysFrom(dictionary: userdict) >> keysFrom 1
						downloadURL(url: "${mainDict.key(worker)}", method: POST, headers: , requestJSON: ) >> downloadURL
						var tweetDict = Contents of URL
						var error = tweetDict
						number(value: 1)
						if( != nil $2) {
							var error = tweetDict
							keysFrom(dictionary: mainDict) >> keysFrom 2
							number(value: 0)
							if( .contains ""•${error.as(Dictionary).key(code)}•"") {
								number(value: 1)
							}
						} >> If Result 14
						var break = If Result
					}
				} >> Repeat Result 1
				var version = tweetDict
				if( == nil $2) {
					keysFrom(dictionary: tweetDict) >> Type
					if( == "url") {
						if( != nil $2) {
							choose(list: tweetDict, prompt: "${mainDict.key(msg.onlyurls)}") >> choose
							openURL(url: Selected Item)
						} else {
							alert(alert: "${twurl}
${ActionOutput}", cancel: false)
						} >> If Result 15
					} else {
						number(value: 0) >> number 5
						if( == "animated_gif") {
							math(input: pref, operation: -, operand: "1") >> math
							if( == 3) {
								repeatEach(mainDict) {
									setName(input: Repeat Index 2, name: "${Repeat Item 2}")
								} >> Repeat Result 2
								choose(list: Repeat Results, prompt: "${mainDict.key(msg.gifprompt)}") >> choose 1
								math(input: "6", operation: -, operand: Chosen Item) >> math 1
								if( > 2) {
									math(input: Calculation Result, operation: -, operand: "2") >> math 2
									var newSelection = Calculation Result
									getItemFromList(list: pref, type: Items in Range, startIndex: "2") >> getItemFromList 1
									var newSelection += Item from List >> variable 1
									setValue(key: "selection", value: "${newSelection}", dictionary: pref) >> setValue 3
									var pref = Dictionary
									saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 2
									alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
									math(input: Calculation Result, operation: -, operand: "1")
								}
							} >> If Result 16
						} >> toGIF
						number(value: 0) >> number 6
						if( != 0) {
							if( > 0) {
								math(input: "2", operation: -, operand: pref) >> math 3
								if( false 0) {
									repeatEach(mainDict) {
										setName(input: Repeat Index 2, name: "${Repeat Item 2}")
									} >> Repeat Result 3
									choose(list: Repeat Results, prompt: "${mainDict.key(msg.gifqualityprompt)}") >> choose 2
									math(input: Chosen Item, operation: -, operand: "3") >> math 4
									if( false 0) {
										math(input: "3", operation: -, operand: Chosen Item) >> math 5
										combineText(text: pref, combine: Custom) >> combineText 1
										replaceText(input: "${Combined Text}", find: "^(.).", replace: "$1${Calculation Result}", isRegex: true) >> replaceText 6
										splitText(text: Updated Text, separator: Every Character) >> splitText 1
										setValue(key: "selection", value: "${Split Text}", dictionary: pref) >> setValue 4
										var pref = Dictionary
										saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 3
										alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
										math(input: Chosen Item, operation: -, operand: "1") >> math 6
									}
								}
							} >> If Result 17
						} >> GIF Quality
						keysFrom(dictionary: pref) >> Media Date
						if( == 3) {
							repeatEach(mainDict) {
								setName(input: Repeat Index 2, name: "${Repeat Item 2}")
							} >> Repeat Result 4
							choose(list: Repeat Results, prompt: "${mainDict.key(msg.dateprompt)}") >> choose 3
							math(input: Chosen Item, operation: -, operand: "2") >> math 7
							if( false 1) {
								combineText(text: pref, combine: Custom) >> combineText 2
								replaceText(input: "${Combined Text}", find: ".(.)$", replace: "${Chosen Item}$1", isRegex: true) >> replaceText 7
								splitText(text: Updated Text, separator: Every Character) >> splitText 2
								setValue(key: "selection", value: "${Split Text}", dictionary: pref) >> setValue 5
								var pref = Dictionary
								saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 4
								alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
//Unable to get shortcuts action is.workflow.actions.getvariable
							}
						} >> MediaDate
						if( == nil $2) {
							matchText(text: "${GIF Quality}${ActionOutput}${MediaDate}", regex: "^[12]1|1$") >> matchText
							if( != nil $2) {
								menu(, [) {
								case("mainDict (getashell)"):
									openURL(url: "https://apps.apple.com/app/id1543537943")
									exit()
								case("mainDict (haveashell)"):
									setValue(key: "has a-Shell mini", value: "1", dictionary: pref) >> setValue 6
									var pref = Dictionary
									saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true)
								}
							}
						} >> If Result 18
						if( == 1) {
							adjustDate(duration: , date: "1970-01-01 00:00:00Z") >> adjustDate
							formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "'-t 'yyyyMMddHHmm.ss") >> -t MediaDate
						} >> If Result 19
						downloadURL(url: "${tweetDict.as(Dictionary).key(url)}") >> downloadURL 1
						if( == "video") {
							if( == 2) {
								encodeAudio(media: Contents of URL) >> encodeAudio
								getFileOfType(input: Encoded Media, type: "public.mpeg-4") >> getFileOfType
							} >> If Result 20
						}
						if( == $2) {
							if( == 2) {
								var media_ = Contents of URL
							} >> If Result 21
							if( == 0) {
								math(input: "1", operation: /, operand: Contents of URL) >> math 8
								keysFrom(dictionary: tweetDict) >> w
								keysFrom(dictionary: tweetDict) >> h
								if( > h) {
									makeGIF(content: Contents of URL, frameTime: Calculation Result, autoSize: false, height: w) >> makeGIF
								} else {
									makeGIF(content: Contents of URL, frameTime: Calculation Result, autoSize: false, width: h)
								} >> If Result 22
							} else {
								setName(input: Contents of URL, name: "a.mp4") >> setName 1
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.PutFileIntent
								imageDetail(detail: Frame Rate, image: Contents of URL) >> imageDetail
								replaceText(input: "${Frame Rate}", find: ",", replace: ".") >> Frame Rate
								setValue(key: "filename", value: "${tweetDict.as(Dictionary).key(user)} ${Variable.as(Dictionary).key(user)}") >> setValue 7
								if( == 2) {
									setValue(key: "mp4", value: "y", dictionary: Dictionary)
								} >> If Result 23
								decodeURL(url: "${If Result}") >> decodeURL
var 0CACA6A0-B514-470D-B943-F140E935D9B4 = """hideKeyboard
echo
echo
ffmpeg -v error -stats -i a.mp4 -filter_complex "[0:v]fps=￼,split[a][b];[a]palettegen=reserve_transparent=0:stats_mode=diff[p];[b][p]paletteuse=dither=floyd_steinberg" -y Better.gif
echo
ffmpeg -v error -stats -i a.mp4 -filter_complex "[0:v]fps=￼,split[a][b];[a]palettegen=reserve_transparent=0:stats_mode=single[p];[b][p]paletteuse=dither=floyd_steinberg:new=1" -y Best.gif
touch ￼ a.mp4 Better.gif Best.gif
echo
open "shortcuts://run-shortcut?name=HiRes%20Tweet&input=￼""""
text("${0CACA6A0-B514-470D-B943-F140E935D9B4}")
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
								exit()
							} >> If Result 24
						} >> If Result 25
						var media_ += If Result >> variable 2
						repeatEach(media_) {
							setName(input: Repeat Item 2, name: "${tweetDict.as(Dictionary).key(user)} ${Variable.as(Dictionary).key(user)}")
						} >> Repeat Result 5
						var media = Repeat Results
						keysFrom(dictionary: pref) >> Quick Look
						if( != 1) {
							if( == 3) {
								if( == "photo") {
									number(value: 0)
								}
							} >> If Result 26
							if( == $2) {
								if( == "photo") {
									if( == 0) {
										repeatEach(media) {
											math(input: Repeat Item 2, operation: *, operand: Repeat Item 2)
										} >> Repeat Result 6
										statistic(input: Repeat Results, operation: Maximum) >> statistic
										if( > 8600000) {
											continueInShortcuts()
										}
									} >> If Result 27
								} >> If Result 28
								quicklook(input: media)
								keysFrom(dictionary: pref) >> ⤷Ask after Quick Look
								if( == 1) {
									menu(, [) {
									case("mainDict (continue)"):
									case("mainDict (quit)"):
										var media = $1
									}
								}
							} >> If Result 29
						} >> If Result 30
						if( == 0) {
							count(input: media) >> count 1
							if( > 1) {
								keysFrom(dictionary: pref) >> Select if Multiple
								if( == 1) {
									choose(list: media, multiple: true, all: true) >> choose 4
									var media = Chosen Item
								} >> If Result 31
							} >> If Result 32
						} >> If Result 33
						if( != 0) {
							if( == 1) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
								repeatEach(media) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.PutFileIntent
									text(text: "touch ${-t MediaDate} "${ActionOutput}.${Repeat Item 2.as(File).get(Name)}"") >> text
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.GetFileIntent
									setName(input: File, name: "${Repeat Item 2.as(File).get(Name)}")
								} >> Repeat Result 7
								var media = Repeat Results
							} >> If Result 34
						}
					} >> If Result 35
				}
			} >> If Result 36
			if( != nil $2) {
				keysFrom(dictionary: pref) >> Share
				if( == 1) {
					share(file: media)
				} >> If Result 37
				keysFrom(dictionary: pref) >> Save to Files
				if( == 1) {
					keysFrom(dictionary: pref) >> keysFrom 3
					if( > 2) {
						if( == nil $2) {
							menu(, [) {
							case("mainDict (onmy)Unknown Variable"):
								number(value: 1)
							case("iCloud Drive"):
								number(value: 2)
							case("iCloud Drive/Shortcuts"):
								number(value: 3)
							} >> Menu Result 2
							setValue(key: "folderlocation", value: "${Menu Result.as(Number)}", dictionary: pref) >> setValue 8
							var pref = Dictionary
//Unable to get shortcuts action is.workflow.actions.getvariable
						} >> If Result 38
					} >> If Result 39
					if( == 1) {
//Unable to get shortcuts action is.workflow.actions.folder
					} else {
						if( == 2) {
//Unable to get shortcuts action is.workflow.actions.folder
						} else {
//Unable to get shortcuts action is.workflow.actions.folder
						}
					} >> If Result 40
					if( == nil $2) {
						if( > 2) {
							keysFrom(dictionary: mainDict)
						} else {
							keysFrom(dictionary: mainDict) >> keysFrom 4
						} >> If Result 41
						askForInput(prompt: "${If Result}") >> askForInput
						setValue(key: "savefolder", value: "${Provided Input}", dictionary: pref) >> setValue 9
						var pref = Dictionary
						saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 5
						if( != nil $2) {
							createFolder(path: "${pref.key(savefolder)}") >> createFolder
						}
					} >> If Result 42
					saveFile(input: media, ask: false, path: "${pref.key(savefolder)}")
				} >> If Result 43
				keysFrom(dictionary: pref) >> Save to Album
				if( == 1) {
					keysFrom(dictionary: pref) >> album
					if( == nil $2) {
						alert(alert: "${mainDict.key(msg.album)}", cancel: false)
						saveToCameraRoll(image: media, album: Ask) >> saveToCameraRoll
						getItemFromList(list: Saved Photo Media) >> getItemFromList 2
						text(text: "${Item from List}") >> text 1
						setValue(key: "album", value: "${Text}", dictionary: pref) >> setValue 10
						var pref = Dictionary
						saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true)
					} else {
						if( == ""${mainDict.key(emptytext)}"") {
							saveToCameraRoll(image: media) >> saveToCameraRoll 1
						} else {
							saveToCameraRoll(image: media, album: album) >> saveToCameraRoll 2
						}
					} >> If Result 44
					keysFrom(dictionary: pref) >> ⤷Open Photos after Save
				} >> If Result 45
				keysFrom(dictionary: pref) >> ⤷Show Notification
				if( == 1) {
					repeatEach(media) {
						if( == "photo") {
							replaceText(input: "${Repeat Item 2.get(File Size)} ${Variable.get(File Size)}x${Repeat Item 2.get(File Extension)} (${Variable.get(File Extension)})", find: " ", replace: " ")
						} else {
							replaceText(input: "${gifw} ${Variable}${tweetDict.as(Dictionary).key(height)}x${Variable.as(Dictionary).key(height)}${Repeat Item 2.get(File Extension)} (${Variable.get(File Extension)})", find: " ", replace: " ")
						}
					} >> Repeat Result 8
					text(text: "${Repeat Results}") >> text 2
					replaceText(input: "${Text}", find: "\n", replace: ", ", isRegex: true) >> Size Info
				} >> If Result 46
			}
// ◢◣		DOWNLOAD
		} >> If Result 47
		if( == ""${mainDict.key(upload)}"") {
// ◥◤		UPLOAD
			if( == nil $2) {
				if( == 1) {
//Unable to get shortcuts action is.workflow.actions.getvariable
				} else {
					choose(list: users, prompt: "${mainDict.key(msg.accountprompt)}")
				} >> If Result 48
				var currentuser = If Result
			} >> If Result 49
			keysFrom(dictionary: pref) >> keysFrom 5
			askForInput(prompt: "	❰❰@${mainDict.key(msg.tweet1)}❱❱${Variable.key(msg.tweet1)}") >> askForInput 1
			var mid = $1
			var imginfo = $1
			var loop = mainDict
			repeat(4) {
				if( == $2) {
					var newext = $1
					var newpixel = $1
					var newsize = $1
					selectPhoto(types: Images) >> selectPhoto
					var img = Photos
					if( > img) {
						if( > mainDict) {
							resizeImage(image: img, width: mainDict) >> resizeImage
							var img = Resized Image
							text(text: "→${Resized Image.get(Width)}x${ActionOutput.get(Width)}") >> text 3
							var newpixel = Text
						}
					} else {
						if( > mainDict) {
							resizeImage(image: img, height: mainDict, width: ) >> resizeImage 1
							var img = Resized Image
							text(text: "→${Resized Image.get(Height)}x${ActionOutput.get(Height)}") >> text 4
							var newpixel = Text
						}
					} >> If Result 50
					replaceText(input: "jpg jpeg", find: ".*${img.get(File Extension)}.*", isRegex: true, caseSensitive: false) >> replaceText 8
					if( .contains " ") {
						replaceText(input: "png gif webp", find: ".*${img.get(File Extension)}.*", isRegex: true, caseSensitive: false) >> replaceText 9
						number(value: 0)
						if( .contains " ") {
							number(value: 1)
						} else {
							if( > $2) {
								number(value: 1)
							}
						}
					} >> If Result 51
					if( == $2) {
						var newext = mainDict
						convertImage(image: img, metadata: false, quality: true) >> convertImage
						var img = Converted Image
						text(text: "→${img.get(File Size)}") >> text 5
						var newsize = Text
					} >> If Result 52
					if( > $2) {
						var low = mainDict
						var high = mainDict
						var cont = high
						repeat(11) {
							if( == $2) {
								math(input: high, operand: low) >> math 9
								math(input: Calculation Result, operation: *, operand: "500") >> math 10
								round(number: Calculation Result, roundTo: Ones Place, mode: Always Round Down) >> round
								math(input: Rounded Number, operation: /, operand: "1000") >> math 11
								convertImage(image: img, metadata: false, quality: Calculation Result) >> convertImage 1
								imageDetail(detail: File Size, image: Converted Image) >> imageDetail 1
								if( > $2) {
									var highsize = File Size
									var high = Calculation Result
								} else {
									var lowsize = File Size
									var low = Calculation Result
								} >> If Result 53
								math(input: high, operation: -, operand: low) >> math 12
								if( false mainDict) {
									var cont = Calculation Result
								} >> If Result 54
							} >> If Result 55
						} >> Repeat Result 9
						convertImage(image: img, metadata: false, quality: low) >> convertImage 2
						var img = Converted Image
						text(text: "→${img.as(Image).get(File Size)}") >> text 6
						var newsize = Text
					} >> If Result 56
					downloadURL(url: "${mainDict.key(worker)}", method: POST, requestJSON: ) >> downloadURL 2
					downloadURL(url: "https://upload.twitter.com/1.1/media/upload.json", method: POST, headers: , requestType: Form) >> downloadURL 3
					if( .contains "media_id_string") {
						var mid += Contents of URL >> variable 3
						text(text: "${Repeat Index 2}: ${Variable}${Photos.get(File Size)} (${ActionOutput.get(File Size)}${newpixel}) ${Variable}x${Photos.get(File Extension)}${ActionOutput.get(File Extension)}") >> text 7
						var imginfo += Text
						if( false 4) {
							menu(, [) {
							case("mainDict (moreimage)"):
							case("mainDict (continue)"):
								var loop = mainDict
							}
						}
					} else {
						var error = Contents of URL
						var mid = $1
						var loop = mainDict
					} >> If Result 57
				} >> If Result 58
			} >> Repeat Result 10
			if( != nil $2) {
var 8F2A2CC3-6C15-4ED8-BE89-D32CC0D574C7 = """	❰❰@￼❱❱
￼
￼

"""
text("${8F2A2CC3-6C15-4ED8-BE89-D32CC0D574C7}")
				askForInput(prompt: "${mainDict.key(msg.tweet2)}${Variable.key(msg.tweet2)}", default: "${Provided Input}") >> askForInput 2
				combineText(text: mid, combine: Custom, separator: ",") >> combineText 3
				downloadURL(url: "${mainDict.key(worker)}", method: POST, requestJSON: ) >> downloadURL 4
				var version = Contents of URL
				keysFrom(dictionary: Contents of URL) >> keysFrom 6
				if( .contains "id_str") {
					menu(, [) {
					case("mainDict (opentweet)"):
						number(value: 1) >> Open Tweet
						var command = mainDict
					case("mainDict (continue)"):
					} >> Menu Result 3
					nothing()
				} else {
					var error = Dictionary Value
				} >> If Result 59
			}
			if( != nil $2) {
				var command = mainDict
			}
// ◢◣		UPLOAD
		} >> If Result 60
		if( != nil $2) {
// ◥◤		ERROR
			keysFrom(dictionary: mainDict) >> keysFrom 7
			keysFrom(dictionary: error) >> code
			if( .contains ""•${code}•"") {
				if( == 179) {
					keysFrom(dictionary: mainDict)
				} else {
					text(text: "${currentuser}❰❰@${Variable}❱❱ (Error ${mainDict.key(msg.loginerrorprompt)})")
				} >> If Result 61
				menu(, [) {
				case("mainDict (openmenu)"):
					var command = $1
				case("mainDict (quit)"):
				}
			} else {
				keysFrom(dictionary: mainDict) >> keysFrom 8
				if( != nil $2) {
var A23299C5-6654-4E10-A851-CB4E8E8A47DD = """￼
￼"""
text("${A23299C5-6654-4E10-A851-CB4E8E8A47DD}")
				} else {
var 87F1EE13-59A0-4ED6-84FE-CA350D91E3D1 = """￼
￼
￼"""
text("${87F1EE13-59A0-4ED6-84FE-CA350D91E3D1}")
				} >> If Result 62
				menu(, [) {
				case("mainDict (copyerror)"):
					setClipboard(variable: If Result)
					getClipboard()
				case("mainDict (continue)"):
				}
			}
			var input = $1
			var error = $1
// ◢◣		ERROR
		} >> If Result 63
		if( != ""${mainDict.key(quit)}"") {
			var currentuser = $1
			if( == ""${mainDict.key(settings)}"") {
// ◥◤		SETTINGS
				number(value: 1) >> number 7
				var menu = Number
				count(input: pref) >> count 2
				repeat(30) {
					if( == $2) {
						keysFrom(dictionary: pref) >> keysFrom 9
						if( != nil $2) {
							keysFrom(dictionary: pref) >> keysFrom 10
							if( == 1) {
								text(text: "${mainDict.key(onmy)}${Variable.key(onmy)}")
							} else {
								if( == 2) {
									text(text: "iCloud")
								} else {
									text(text: "iCloud Drive/Shortcuts")
								}
							} >> If Result 64
var 345B83E2-ACE2-4AA8-A8D0-73FD9F85A0D7 = """
￼‘￼/￼’"""
text("${345B83E2-ACE2-4AA8-A8D0-73FD9F85A0D7}")
						} >> folderpath
						keysFrom(dictionary: pref) >> keysFrom 11
						if( != nil $2) {
							if( == ""${mainDict.key(emptytext)}"") {
								keysFrom(dictionary: mainDict)
							} >> If Result 65
var FD42B7BE-F6A6-4501-ABA5-E7D87A6E7CCD = """
￼‘￼’"""
text("${FD42B7BE-F6A6-4501-ABA5-E7D87A6E7CCD}")
						} >> albumname
						repeatEach(mainDict) {
							keysFrom(dictionary: pref) >> keysFrom 12
							if( != nil $2) {
								keysFrom(dictionary: Repeat Item 3) >> keysFrom 13
								text(text: "${Dictionary Value}　➤　${ActionOutput}") >> text 8
							} else {
								keysFrom(dictionary: mainDict) >> keysFrom 14
								text(text: "${Repeat Item 3.as(Dictionary).key(title)}  ${Variable.as(Dictionary).key(title)}")
							} >> If Result 66
						} >> Repeat Result 11
						list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Repeat Results";
                        OutputUUID = "C95EBCE8-24FC-4077-8E92-DE21D48EED53";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = goback;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 3
						choose(list: List, prompt: "${folderpath}${ActionOutput}${albumname}") >> choose 5
						if( == ""${mainDict.key(goback)}"") {
							number(value: 0) >> number 8
							var menu = Number
						} else {
							repeat(Count) {
								keysFrom(dictionary: mainDict) >> keysFrom 15
								if( .contains ""${Dictionary Value}"") {
									number(value: Repeat Index 3) >> number 9
								} >> If Result 67
							} >> Repeat Result 12
							keysFrom(dictionary: pref) >> keysFrom 16
							text(text: "${Number}${ActionOutput}") >> text 9
							if( .between 17...18) {
								var tempdict = mainDict
								if( == 17) {
									filterFiles()
								} else {
									filterFiles() >> filterFiles 1
								} >> If Result 68
								repeatEach(If Result) {
									keysFrom(dictionary: pref) >> keysFrom 17
									setValue(key: "${Repeat Item 3}", value: "${Dictionary Value}", dictionary: tempdict) >> setValue 11
									var tempdict = Dictionary
								} >> Repeat Result 13
								var pref = tempdict
							} >> If Result 69
							keysFrom(dictionary: mainDict) >> keysFrom 18
							if( == nil $2) {
								keysFrom(dictionary: mainDict)
							} >> OptionString
							count(input: OptionString) >> count 3
							keysFrom(dictionary: pref) >> keysFrom 19
							math(input: Dictionary Value, operation: …, scientific: Modulus) >> math 13
							math(input: Calculation Result, operand: "1") >> NewOption
							repeatEach(pref) {
								if( == Number) {
//Unable to get shortcuts action is.workflow.actions.getvariable
								}
							} >> Repeat Result 14
							setValue(key: "selection", value: "${Repeat Results.as(Number)}", dictionary: pref) >> setValue 12
							var pref = Dictionary
							saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 6
						} >> If Result 70
					} >> If Result 71
				} >> Repeat Result 15
// ◢◣		SETTINGS
			}
			if( != ""${mainDict.key(connect)}"") {
// ◥◤		MENU
				var menu = mainDict
				var menu += mainDict
				var menu += mainDict
				if( == 0) {
					keysFrom(dictionary: mainDict)
				} else {
					var menu += mainDict
					var menu += mainDict
					replaceText(input: "${users}", find: "^", replace: "@", isRegex: true) >> replaceText 10
					text(text: "${Updated Text}${ActionOutput}") >> text 10
					replaceText(input: "${Text}", find: "\n", replace: "  ", isRegex: true) >> replaceText 11
				} >> If Result 72
				var menu += mainDict >> variable 4
				var menu += mainDict
				choose(list: menu, prompt: "${If Result}") >> choose 6
				var command = Chosen Item
// ◢◣		MENU
			}
			if( == ""${mainDict.key(getlink)}"") {
// ◥◤		GET CLIPBOARD
				getClipboard() >> getClipboard
				matchText(text: "${Clipboard}", regex: "twitter\.com/|t\.co/") >> matchText 1
				if( != nil $2) {
					runShortcut(name: "HiRes Tweet", input: Clipboard) >> runShortcut
					exit()
				} else {
					alert(alert: "${Clipboard}", title: "${mainDict.key(msg.noclipboard)}", cancel: false)
				}
// ◢◣		GET CLIPBOARD
			}
			if( == ""${mainDict.key(info)}"") {
// ◥◤		INFO
				menu(, [) {
				case("mainDict (showinfo)"):
					richTextFromHTML() >> richTextFromHTML 1
					quicklook(input: Rich Text from HTML)
				case("mainDict (contact)"):
					openURL(url: mainDict)
					exit()
				case("mainDict (goback)"):
				} >> Menu Result 4
// ◢◣		INFO
			} >> If Result 73
			if( == ""${mainDict.key(connect)}"") {
// ◥◤		CONNECT
				alert(alert: "${mainDict.key(msg.connect1)}", cancel: false)
				showWebPage(url: "https://twitter.com/account/switch")
				alert(alert: "${mainDict.key(msg.connect2)}", cancel: false)
				downloadURL(url: "${mainDict.key(worker)}", method: POST, requestJSON: ) >> downloadURL 5
				var version = Contents of URL
				if( .contains "oauth_callback_confirmed=true") {
					getDictionaryFrom(input: Contents of URL) >> getDictionaryFrom 3
					url(url: "https://api.twitter.com/oauth/authorize?oauth_token=${Dictionary.key(oauth_token)}") >> url
					showWebPage(url: "${URL}")
					askForInput(prompt: "${mainDict.key(msg.enterpin)}", type: Text, allowDecimal: false, allowNegative: false) >> askForInput 3
					count(type: Characters, input: Provided Input) >> count 4
					if( > 6) {
						downloadURL(url: "https://api.twitter.com/oauth/access_token?oauth_token=${Provided Input}&oauth_verifier=${ActionOutput}", method: POST, requestJSON: ) >> downloadURL 6
						if( .contains "screen_name") {
							replaceText(input: "${Contents of URL.as(Dictionary)}", find: " ") >> replaceText 12
							setValue(key: "token", value: "${Updated Text.as(Dictionary).key(oauth_token)}") >> setValue 13
							setValue(key: "tokensecret", value: "${Updated Text.as(Dictionary).key(oauth_token_secret)}", dictionary: Dictionary) >> setValue 14
							setValue(key: "${Updated Text.as(Dictionary).key(screen_name)}", value: "${Dictionary}", dictionary: pref) >> setValue 15
							setValue(key: "users", value: "${Dictionary}", dictionary: pref) >> setValue 16
							var pref = Dictionary
							var command = mainDict
							nothing()
						} else {
var EF3927F2-5EF7-43CF-84F8-198FDA0A1A22 = """￼ (2)
￼"""
text("${EF3927F2-5EF7-43CF-84F8-198FDA0A1A22}")
						} >> If Result 74
					} else {
						nothing()
					} >> If Result 75
				} else {
var 07CEF0BD-A8CF-4684-9F9D-382AC116843A = """￼ (1)
￼"""
text("${07CEF0BD-A8CF-4684-9F9D-382AC116843A}")
				} >> If Result 76
				if( != nil $2) {
					menu(, [) {
					case("mainDict (copyerror)"):
						setClipboard(variable: If Result)
						getClipboard()
					case("mainDict (continue)"):
					}
				}
// ◢◣		CONNECT
			} >> If Result 77
			if( == ""${mainDict.key(disconnect)}"") {
// ◥◤		DISCONNECT
				if( == 1) {
//Unable to get shortcuts action is.workflow.actions.getvariable
				} else {
					choose(list: users, prompt: "${mainDict.key(msg.disconnectprompt)}")
				} >> If Result 78
				alert(alert: "${mainDict.key(msg.revokeapp1)}❰❰@${Variable.key(msg.revokeapp1)}❱❱", cancel: false)
				showWebPage(url: "https://twitter.com/account/switch")
				alert(alert: "${mainDict.key(msg.revokeapp2)}", cancel: false)
				if( > 1) {
					dictionary({})
					var tempdict = Dictionary
					filterFiles() >> filterFiles 2
					repeatEach(Files) {
						keysFrom(dictionary: pref) >> keysFrom 20
						setValue(key: "${Repeat Item 2}", value: "${Dictionary Value}", dictionary: tempdict) >> setValue 17
						var tempdict = Dictionary
					} >> Repeat Result 16
					setValue(key: "users", value: "${tempdict}", dictionary: pref) >> setValue 18
				} else {
					setValue(key: "users", value: "${mainDict.key(defaultpref.users)}", dictionary: pref) >> setValue 19
				} >> If Result 79
				var pref = If Result
				showWebPage(url: "https://twitter.com/settings/connected_apps")
				var command = mainDict
// ◢◣		DISCONNECT
			} >> If Result 80
			if( == ""${mainDict.key(refresh)}"") {
// ◥◤		REFRESH USER DATA
				saveFile(input: pref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 7
				keysFrom(dictionary: pref) >> keysFrom 21
				filterFiles() >> filterFiles 3
				var users = Files
				count(input: users) >> count 5
				var usercount = Count
// ◢◣		REFRESH
			}
		} >> If Result 81
		if( == $2) {
// ◥◤		UPDATE
		} else {
			if( .contains ""${mainDict.as(Dictionary).key(version)}"") {
				number(value: 1) >> Update Menu Shown
				menu(, [) {
				case("mainDict (gotoweb)"):
					openURL(url: mainDict)
					exit()
				case("mainDict (downloadupdate)"):
					downloadURL(url: "${mainDict.key(downloadurl)}") >> downloadURL 7
					expandURL(url: "https://routinehub.co/download/${Contents of URL.as(Dictionary).key(id)}") >> expandURL 1
					replaceText(input: "${Expanded URL}", find: "^.+icloud.com/", replace: "shortcuts://", isRegex: true) >> replaceText 13
					openURL(url: Updated Text)
					exit()
				case("mainDict (notnow)"):
				} >> Menu Result 5
			}
// ◢◣		UPDATE
		}
// ◢◣		NOT QUIT
	} >> If Result 82
} >> Repeat Result 17
if( == 1) {
	openApp(id: "com.apple.mobileslideshow")
} >> If Result 83
if( != nil $2) {
	sendNotification(body: "${Updated Text}", sound: false) >> sendNotification
} >> If Result 84
if( == $2) {
	url(url: "https://twitter.com/${currentuser}/status/${Variable}") >> url 1
	openURL(url: URL)
} >> If Result 85
