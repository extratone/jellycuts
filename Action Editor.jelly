import Shortcuts
#Color: green, #Icon: textBox

/*
Shortcut action editor
2025-03-23 	v1.2
https://routinehub.co/user/gluebyte
https://bsky.app/profile/gluebyte.bsky.social
*/
randomNumber(min: 1, max: 2) >> randomNumber
if(Random Number == 1) { >> IFResult
	getIP() >> getIP
	if(Current IP Address != nil) {
		downloadURL(url: "https://updatecheck.gluebyte.workers.dev/?id=8B45C2A9") >> downloadURL
		if(Contents of URL .contains "2025-03-23") { >> IFResult 1
			menu(, [🌏  Go to RoutineHub, 👾  Download Update, ⮐  Not Now]) {
			case("🌏  Go to RoutineHub"): >> MenuResult
				openURL(url: "https://routinehub.co/shortcut/18280/") >> openURL
				exit()
			case("👾  Download Update"): >> MenuResult 1
				downloadURL(url: "https://routinehub.co/api/v1/shortcuts/18280/versions/latest") >> downloadURL 1
				matchText(text: "${Contents of URL}", regex: "(?<="id":\D?)\d+") >> matchText
				expandURL(url: "https://routinehub.co/download/${Matches}/") >> expandURL
				replaceText(input: "${Expanded URL}", find: "^.+icloud.com/", replace: "shortcuts://", isRegex: true) >> replaceText
				openURL(url: Updated Text) >> openURL 1
				exit()
			case("⮐  Not Now"):
			} >> MenuResult 2
		} >> IFResult 2
	} >> IFResult 3
} >> IFResult 4
//Unable to get shortcuts action com.sindresorhus.Actions.GetEmojisIntent
/*
Please install the Actions app

https://apps.apple.com/app/id1586435171
*/
if(ShortcutInput != nil) { >> IFResult 5
	runJavascriptOnWebpage(javascript: "window.close(); completion();") >> runJavascriptOnWebpage
	keysFrom(dictionary: ShortcutInput) >> keysFrom
	repeatEach(Dictionary Value) {
		setName(input: Repeat Item, name: "a.json") >> setName
		getFileOfType(input: Renamed Item, type: "com.apple.property-list") >> getFileOfType
//Unable to get shortcuts action com.sindresorhus.Actions.SetUniformTypeIdentifier
	} >> RepeatResult
	setClipboard(variable: Repeat Results) >> setClipboard
	getClipboard() >> getClipboard
	count(input: Clipboard) >> count
	if(Count == 1) {
		alert(alert: "

📋  Updated action copied to clipboard  📋

", tincel: false)
	} else {
		alert(alert: "

📋 ${Count} actions copied to clipboard 📋

", tincel: false)
	} >> IFResult 6
} else {
	if(Clipboard != nil) { >> IFResult 7
		setName(input: CurrentDate, name: "a.zip") >> setName 1
		getType(input: Renamed Item) >> file type
		getType(input: Clipboard) >> getType
		if(Type .contains ""${file type}"") {
//Unable to get shortcuts action com.sindresorhus.Actions.GetUniformTypeIdentifierIntent
		}
	} >> IFResult 8
	if(Uniform Type Identifier .contains "com.apple.shortcuts.action") { >> IFResult 9
		if(DeviceDetails ==) { >> IFResult 10
			number(value: 1) >> number
		} else {
			menu(



📝  Edit JSON in:


, [WebView (Quick edit), Safari (Can switch to other apps)]) {
			case("WebView (Quick edit)"):
				number(value: 2) >> number 1
			case("Safari (Can switch to other apps)"):
				text(text: "setTimeout(window.close,500);") >> text
				number(value: 3) >> number 2
			} >> MenuResult 3
		} >> IFResult 11
		repeatEach(Clipboard) { >> RepeatResult 1
			setName(input: Repeat Item, name: "a.plist") >> setName 2
			getFileOfType(input: Renamed Item, type: "public.json") >> getFileOfType 1
			replaceText(input: "${File of Type}", find: "\u0023", replace: "\\u0023", isRegex: true) >> replaceText 1
		} >> RepeatResult 2
		setValue(key: "json", value: "${Repeat Results.as(Dictionary)}") >> setValue
		if(OS == 2) {
var 5F88954C-6A8C-4A01-890D-253BF2947A59 = """  clearTimeout(timeoutID);
  try{
    js=JSON.parse('[' + document.getElementById('input').innerText.split('\n\n').join(',') + ']');
    navigator.clipboard.writeText('{"actions":' + JSON.stringify(js) + '}');
    document.title = '✅  Tap ‘Done’ to continue  👉';
  } catch { document.title = '🛑  Invalid JSON format'; }
  timeoutID = setTimeout(() => { document.title = t; }, 5000);"""
text("${5F88954C-6A8C-4A01-890D-253BF2947A59}")
		} else {
var 94E85D56-1957-46B6-BCBE-E174112436C7 = """  try{
   js=JSON.parse('[' + document.getElementById('input').innerText.split('\n\n').join(',') + ']');
    ￼
    location.href = 'shortcuts://run-shortcut?name=Action%20Editor&input=' + encodeURIComponent('{"actions":' + JSON.stringify(js) + '}');
  } catch { alert('\n\n🛑  Invalid JSON format\n\n'); }"""
text("${94E85D56-1957-46B6-BCBE-E174112436C7}")
		} >> IFResult 12
// Syntax highlighting adapted from: https://codepen.io/absolutedevelopment/pen/EpwVzN
var 4EE0411E-DB24-42C3-AA51-147C97F09098 = """<html><meta charset="utf-8"><meta name="viewport" content="width=device-width, maximum-scale=1">
<style>
body { background: #eee; color: #222; }
a { display: inline-block; background-color: #5c6; font-family: system-ui; font-weight: bold; text-align: center; cursor: pointer; padding: 0.8em 1em; border-radius: 16px; }
div { .string {color: maroon;} .number {color: black;} .boolean,.null {color: blue;} .key {color: teal;} }
@media (prefers-color-scheme: dark) {
  body { background: #222; color: #ddd; }
  a { background-color: #2b4; }
  div { .string {color: lightcoral;} .number {color: ghostwhite;} .boolean,.null {color: deepskyblue;} .key {color: lightseagreen;} }
}
</style>
<title>Action Editor</title>
<body>
<div id="input" contenteditable autofocus spellcheck="false" autocorrect="off" autocapitalize="none" style="width: 100%; min-height: 300px; font-family: monospace; font-size: 15px; word-break: break-all; white-space: pre-wrap; caret-color: red; outline: none;"></div>
<center><a onclick="finish()">Finish &amp; Copy</a></center>
</body><script>
let timeoutID;
let t = document.title;
let j = ￼.json;
document.getElementById('input').innerHTML = (Array.isArray(j) ? j : [j]).map(a=>JSON.stringify(a,null,2)).join('\n\n').replace(/[\0-\x08\x0B-\x1F\x7F-\xA0\xAD\u2000-\u200B\u2028\u2029\u202F\u205F-\u2064\u2800\u3000\uFFFC]/g, c=>'\\u'+c.charCodeAt(0).toString(16).toUpperCase().padStart(4,'0')).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, (m)=>`<span class="${/^"/.test(m) ? (/:$/.test(m) ? 'key' : 'string') : (/true|false/.test(m) ? 'boolean' : (/null/.test(m) ? 'null' : 'number'))}">${m}</span>`);
function finish() {
￼
}
</script></html>"""
text("${4EE0411E-DB24-42C3-AA51-147C97F09098}")
		if(OS == 1) {
			randomNumber(min: 0, max: 99999) >> randomNumber 1
			setName(input: Text, name: "Action Editor${Random Number}.html") >> setName 3
			moveFile(file: Renamed Item, folder: $1) >> moveFile
			openIn(input: File, app: "com.apple.mobilesafari") >> openIn
		} else {
			if(OS == 2) {
				setName(input: Text, name: "Action Editor.html") >> setName 4
				showWebPage(url: "${Renamed Item}") >> showWebPage
//Unable to get shortcuts action com.sindresorhus.Actions.GetUniformTypeIdentifierIntent
				if(Uniform Type Identifier == "public.plain-text") {
					runShortcut(name: "Action Editor", input: Clipboard) >> runShortcut
				} else {
					runShortcut(name: "Action Editor")
				} >> IFResult 13
			} else {
				url(url: "data:text/html,${Text}") >> url
				openURL(url: URL) >> openURL 2
			}
		}
	} else { >>  3
		alert(alert: "

🛑 No shortcut actions in clipboard

", title: "", cancel: false)
	} >> IFResult 14
} >> IFResult 15
