import Shortcuts
#Color: Red, #Icon: circledStop

/*
Downloads public or private photos and videos from posts, stories, highlights, reels, etc at highest quality
2025-06-18 	v5.6.1
https://routinehub.co/user/gluebyte
https://threads.net/@gluebyte
*/
list(items: (
        {
        WFItemType = 1;
        WFValue =         {
            Value =             {
                Value =                 {
                    WFDictionaryFieldValueItems =                     (
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = version;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "2025-06-18";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = name;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Instagram Download";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = id;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = DF1910A2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefversion;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 4;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = filename;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Instagram Download.json";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = defaultpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 4;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = selection;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = updatecheck;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 0;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefstring;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show List for Multiple Items";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Show Videos in Grid View";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = Share;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Files";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Photos";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Media Date";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Date Posted [1/3]",
                                                                    "Current Date [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Get Reels Cover";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Copy Caption to Clipboard";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    }
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = option;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "\U2611\Ufe0f",
                                    "\U2b1c\Ufe0f"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = localpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safemode;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = safemode;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = title;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\Ud83d\Udeb8  Use Safe Mode\U3000\U27a4\U3000";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = options;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                        No,
                                                        Yes,
                                                        "Posts/reels only"
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 3;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 3;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onmy;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "On My ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = gotoweb;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf0f  Go to RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadupdate;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc7e  Download Update";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = notnow;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Not Now";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = safemodeoff;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb7  Why Safari? Turn off Safe Mode\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = ackhide;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2705  OK, do not show anymore\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = ack;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2705  OK";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "privacy?";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U270b  Privacy Browsing?\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = privacyurl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://support.apple.com/105030";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = retry;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Retry;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = signin;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Log in";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = cancel;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Cancel;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onestory;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U261d\Ufe0f  Download current story only\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = allstory1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Show list for all items\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "allstory\U0661";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Show list for all items\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = allstory2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Download all items\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "allstory\U0662";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Download all items\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = profilestory;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Profile picture / Stories\t\t";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = highlight;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udfa6  Story highlights";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = selectall;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Select All  \U2611\Ufe0f \U2611\Ufe0f \U2611\Ufe0f";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = selectnone;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Select None  \U2b1c\Ufe0f \U2b1c\Ufe0f \U2b1c\Ufe0f";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = geturls2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udedf  Try another (possibly lower quality) version";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = usesafe;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb8  Turn on Safe Mode";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = usesafe2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb8  Turn on Safe Mode for posts/reels\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = urls;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = urls;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83e\Uddf5  Contact gluebyte on Threads\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc27  Contact gluebyte on RoutineHub\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = settings;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2699\Ufe0f  User Settings";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = login;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Manage accounts in Scriptable\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = checklogin;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udde3\Ufe0f  Check account in Scriptable\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = loginsafari;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Manage accounts in Safari\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getlink;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udccb  Download media from copied link\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = goback;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Go Back";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = openscriptable;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf10  Open Scriptable to sign in\t\t\b";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = folder;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Folder: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = album;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Album: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contacturl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "barcelona://user?username=gluebyte";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = web1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/user/gluebyte";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = dateoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Date Posted\U200b",
                                    "Always Current Date\U200b\U200b",
                                    "Date Posted\U200b\U200b\U200b",
                                    "Current Date\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gridoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = reelsoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = copyoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = msg;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmark;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udc1a  One-time Setup  \Ud83d\Udc1a\n\nPlease open \U2018On My \U2022\U2019 folder by tapping:\n\n\U278a \U2018Browse\U2019\n\U278b \U2018On My \U2022\U2019 (not \U2018a-Shell\U2019)\n\U278c \U2018Open\U2019 (upper right corner)\n\nYou can stop shortcut if shortcut banner obscures \U2018Open\U2019.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmarkerror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Uded1  \U2018On My \U2022\U2019 folder was not opened. Please try again.\n\nIf this error continues, please tap cancel then delete and reinstall a-Shell mini.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oldversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2757\Ufe0f This is an old version. RoutineHub will open now.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "New Version Available";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safesafarierror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease turn off Safe Mode for stories if problem persists.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safariprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\t\Ud83d\Udeb8 Safe Mode \Ud83d\Udeb8\n\nTap Safari\U2019s (not Instagram\U2019s) share button and run \U2018Instagram Download\U2019 to download media.\n\nTouching the webpage can prevent forced logouts or account suspensions.\n\nMake sure to turn on Settings app \U2192 Shortcuts \U2192 Advanced \U2192 Allow Running Scripts.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = profileprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nSharing profile URL lets you download profile picture only. To download protected stories/highlights:\n\n\Ud83d\Udeb8 Protected Stories/Highlights in Safe Mode \Ud83d\Udeb8\n\n\U278a  Share the account\U2019s post or reel then run \U2018Instagram Download\U2019\n\n\U278b  Navigate to stories/highlights in Scriptable browser\n\n\U278c  Tap share on top right, select \U2018Share URL\U2019 then run \U2018Instagram Download\U2019 again\n\n\U278d  ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = profileprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nContinue?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safeloginprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nPlease try again after signing in. Choose \U2018Save Info\U2019 when signing in. Make sure to turn off \U2018Private Browsing\U2019.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safenomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f No media has been downloaded\n\nPlease choose \U2018Retry\U2019 and share to \U2018Instagram Download\U2019 again. If the problem persists, try toggling WiFi. If you cannot download stories/highlights, try using Safe Mode only for posts/reels.\n\n\Ud83d\Udeb8 To download stories (of private accounts) without share button:\n\n\U278a  Share account\U2019s post/reel to \U2018Instagram Download\U2019\n\U278b  Navigate to stories\n\U278c  Reload webpage\n\U278d  Tap Safari\U2019s share button to run \U2018Instagram Download\U2019\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Ude97 Downloading Story Highlights [1/2]\n\n\U278a  Close highlights\n\n\U278b  Select \U2018Copy Profile URL\U2019 from account\U2019s three dot menu on top right\n\n\U278c  Wait a moment\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Ude97 Downloading Story Highlights [2/2]\n\n\U278a  Navigate to highlights\n\n\U278b  Tap share button on top right of browser window\n\n\U278c  Select \U2018Share URL\U2019 then \U2018Copy\U2019\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = private;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udd12 Could not download private media. Please sign in with an account that follows this account and try again. Scriptable\U2019s browser will open.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nologin1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U2705 Media has been downloaded. Please sign in on Scriptable\U2019s browser in the next screen.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nologin2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f No media has been downloaded. Please sign in with Scriptable and try again.\n\n\U26a0\Ufe0f CAUTION \U26a0\Ufe0f\nInstagram monitors bot-like activities strictly, and sometimes force-logs out or even suspends accounts. Using a different account in Scriptable is recommended.\n\n\Ud83d\Udeb8 Safe Mode reduces the chance of your account being logged out or banned.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oops;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f Oops, an error occurred. Please sign in on Scriptable\U2019s browser in the next screen and try again.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accounterror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83c\Udd98 Account error. Try logging in again in the Scriptable app.\n\n\U26a0\Ufe0f CAUTION \U26a0\Ufe0f\nInstagram monitors bot-like activities strictly. Using a different account in Scriptable is recommended.\n\n\Ud83d\Udeb8 Safe Mode reduces the chance of your account being logged out or banned.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hasherror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nFailed to download some media due to Instagram server error:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = login;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nScriptable will open Instagram web.\nPlease close the browser after logging in or out.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = ok;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = OK;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udeab No media has been downloaded. If the problem persists, try deleting and reinstalling the Scriptable app.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = story;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nStory count: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = whichoneprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nDownload which?\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26a0\Ufe0f Make sure to turn on Settings app \U2192 Shortcuts \U2192 Advanced \U2192 Allow Sharing Large Amounts of Data \U26a0\Ufe0f\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gridprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nShow selection list in grid view?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = dateprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nChoose date of media:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = reelsprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nDownload reels/live cover?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = optionsaved;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2728 Option has been saved. To change settings, run \U2018Instagram Download\U2019 from the Shortcuts app.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = countprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nMedia count: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = album;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please select photo album from the following list. You can change it later in \U2018User Settings\U2019.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = copyprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nCopy post caption to clipboard?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = menuprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\tInstagram Download Main Menu\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = userprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Current account: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nouserprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2770 You are not logged in. \U2771";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = settingprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Tap any item to change option. To reset folder or album, turn the option off and on.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = locationprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Where do you want to save media?";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Enter folder name for media:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt0;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Enter folder name for media. It will be created inside iCloud Drive/Shortcuts folder:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = noclipboard;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "No Instagram link in clipboard.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        }
                    );
                };
                WFSerializationType = WFDictionaryFieldValue;
            };
            WFSerializationType = WFDictionaryFieldValue;
        };
    }
)) >> list
getDictionaryFrom(input: List) >> getDictionaryFrom
var mainDict = Dictionary
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
/*
Please install a-Shell mini
If already installed, open it once
*/
if(output .contains "mini") {
	file(file: $0)
} else {
	file(file: $0) >> file
} >> IFResult
getFile(path: "${mainDict.key(filename)}", error: false) >> getFile
if(File .contains ""safemode"") {
} else {
	valueFor(key: "localpref", dictionary: mainDict) >> valueFor
} >> IFResult 1
getDictionaryFrom(input: If Result) >> getDictionaryFrom 1
var localpref = Dictionary
getNumbersFrom(text: localpref) >> safe mode
dictionary({})
if(ShortcutInput != nil) { >> IFResult 2
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.GetFileIntent
	valueFor(key: "CacheExtra.5pYKlGnYYBzGvAlIU8RjEQ", dictionary: File) >> cpu
	getType(input: ShortcutInput) >> getType
	if(Type .contains "Safari") { >> IFResult 3
var switched = Variable
		runJavascriptOnWebpage(url: ShortcutInput, javascript: "output = (new Function(decodeURIComponent("let%20cpu%20%3D%20eval('${cpu}'.replace(/t80*(.+)/,'($1%3C110)%3F-1:$1*1.1-100').replace(/t60*(.+)/,'$1+40').replace(/%5Bst%5D.+/,'-1'));%0Alet%20h%20%3D%20document.documentElement.innerHTML;%0Aif%20(h.includes('%22PolarisViewer%22,%5B%5D,%7B%22data%22:null'))%20return%20%7Berror:1,%20login:1%7D;%0A%0Alet%20input%20%3D%20window.location.href.replace(/%5C%3F.*/,%20'');%0Alet%20murl%20%3D%20((input.includes('/stories/')%20%7C%7C%20input.includes('/s/'))%20%3F%20document.querySelector('meta%5Bproperty%3D%22og:url%22%5D')%20:%20document.querySelector('meta%5Bproperty%3D%22al:android:url%22%5D'))%3F.content%3F.replace(/%5C%3F.*/,%20'').replace(/(instagram%5C.com%5C/).+%3F%5C/(%3F%3D(%3F:p%7Ctv%7Creel)%5C/)/,%20'$1')%20%7C%7C%20'!';%0Aif%20(murl.includes('com/stories/')%20%26%26%20input.endsWith('.com/'))%20input%20%3D%20murl;%0Aif%20(murl%20!%3D%20input%20%26%26%20!(murl.includes('com/stories/')%20%26%26%20input.includes('com/stories/')))%20return%20%7Berror:1%7D;%0A%0Alet%20mm%20%3D%20h.match(/.*xdt_api__v1__(%3F:media__shortcode__web_info%7Cfeed__reels_media).*/)%3F.%5B0%5D%3F.replace(/%5E%3C.+%3F%3E/,'').replace(/%3C.+%3F%3E$/,'');%0Aif%20(!mm)%20return%20%7Berror:2,%20mobile:navigator.userAgent.includes('Mobile')%3F1:null,%20stories:input.includes('com/stories/')%3F1:null%7D;%0A%0A%09let%20localDate%20%3D%20d%20%3D%3E%20new%20Date(d.getTime()%20-%20(d.getTimezoneOffset()%20*%2060000)).toISOString().replace(/%5C....Z%7C:/g,'');%0A%09let%20touchDate%20%3D%20s%20%3D%3E%20s.slice(0,4)%20+%20s.slice(5,7)%20+%20s.slice(8,10)%20+%20s.slice(11,15)%20+%20'.'%20+%20s.slice(15);%0A%09let%20bestImage%20%3D%20(j,%20reels%3Dfalse)%20%3D%3E%20%7B%0A%09%09let%20ratio%20%3D%20j.original_width%20%3F%20j.original_width%20/%20j.original_height%20:%200;%0A%09%09let%20can%20%3D%20j.image_versions2.candidates;%0A%09%09return%20(img%20%3D%20can.reduce((b,c)%20%3D%3E%20(c.width%20%3E%3D%20b%5B1%5D%20%26%26%20c.height%20%3E%20b%5B2%5D%20%26%26%20((reels%20%26%26%20(c.width/c.height%20!%3D%201))%20%7C%7C%20!ratio%20%7C%7C%20((r%20%3D%20c.width/c.height%20-%20ratio)%20%3C%3D%200.01%20%26%26%20r%20%3E%3D%20-0.01)))%20%3F%20%5Bc.url,c.width,c.height%5D%20:%20b,%20%5B'',0,0%5D)%5B0%5D)%20%3D%3D%3D%20''%20%3F%20can.reduce((b,c)%20%3D%3E%20(c.width%20%3E%3D%20b%5B1%5D%20%26%26%20c.height%20%3E%20b%5B2%5D)%20%3F%20%5Bc.url,c.width,c.height%5D%20:%20b,%20%5B'',0,0%5D)%5B0%5D%20:%20img;%0A%09%7D;%0A%09let%20bestVideo%20%3D%20(v)%20%3D%3E%20(v.candidates%20%3F%3F%20v).reduce((b,c)%20%3D%3E%20(c.width%20%3F%20(c.width%20%3E%3D%20b%5B1%5D%20%26%26%20c.height%20%3E%3D%20b%5B2%5D)%20:%20(c.type%20%3C%20b%5B3%5D))%20%3F%20%5Bc.url,c.width,c.height,c.type%5D%20:%20b,%20%5B'',0,0,9999%5D)%5B0%5D;%0A%09let%20baseURLs%20%3D%20m%20%3D%3E%20%7B%0A%09%09let%20url%20%3D%20m.split('%3C/Representation%3E').reduce((b,c)%20%3D%3E%20(!c.includes('AudioChannelConfiguration')%20%26%26%20b%5B1%5D%20%3C%20(bw%20%3D%20parseInt(c.match(/bandwidth%3D%5Cu0022(%5Cd+)/)%3F.%5B1%5D%20%3F%3F%200)))%20%3F%20%5Bc.match(/%3CBaseURL%5B%5E%3E%5D*%3E(%5B%5E%3C%5D+)/)%3F.%5B1%5D,%20bw%5D%20:%20b,%20%5B'',0%5D);%0A%09%09let%20fftime%20%3D%20Number.parseFloat(m.match(/%20duration%3D%5Cu0022PT(%5B%5Cd.%5D+)/)%3F.%5B1%5D)%20*%20url%5B1%5D%20/%2040000%20/%20cpu;%0A%09%09url%20%3D%20url%5B0%5D.replace(/%26amp;/g,'%26');%0A%09%09if%20(audio%20%3D%20m.match(/%3CAudioChannelConfiguration%5B%5E%3E%5D*%3E%5Cs*%3CBaseURL%5B%5E%3E%5D*%3E(%5B%5E%3C%5D+)/))%20%7B%0A%09%09%09url%20%3D%20%5Burl,%20audio%5B1%5D.replace(/%26amp;/g,'%26')%5D;%0A%09%09%7D%0A%09%09return%20%5Burl,%20fftime%5D;%0A%09%7D;%0A%0A%09let%20j%20%3D%20JSON.parse(mm).require%5B0%5D%5B3%5D%5B0%5D.__bbox.require%5B0%5D%5B3%5D%5B1%5D.__bbox.result.data;%0A%09j%20%3D%20j.xdt_api__v1__media__shortcode__web_info%20%3F%3F%20j.xdt_api__v1__feed__reels_media__connection%3F.edges%3F.%5B0%5D%3F.node%20%3F%3F%20%09j.xdt_api__v1__feed__reels_media%3F.reels_media%3F.%5B0%5D;%0A%0A%09let%20out%20%3D%20%7Bcount:0%7D;%0A%09let%20m%20%3D%20input.match(/%5C/(p%7Ctv%7Creel)%5C/(%5B%5Cw-%5D+)/)%20%7C%7C%20input.match(/instagram%5C.com%5C/(%5B%5E%5C/%5D+)(%3F:%5C/(%5B%5Cw-%5D+))%3F/);%0A%09if%20(%5B'p','tv','reel'%5D.includes(m%5B1%5D))%20%7B%20//%20post%0A%09%09out.ispost%20%3D%201%0A%09%09out%20%3D%20%7B...out,%20urls:%5B%5D,%20urls2:%5B%5D,%20dates:%5B%5D,%20tdates:%5B%5D,%20vcount:0%7D;%0A%09%09p%20%3D%20j.items%5B0%5D;%0A%09%09out.user%20%3D%20p.user.username;%0A%09%09out.urls%20%3D%20(p.carousel_media%20%3F%3F%20%5Bp%5D).map(a%20%3D%3E%20%7B%0A%09%09%09let%20u,%20u2,%20fftime;%0A%09%09%09if%20(v%3Da.video_versions)%20%7B%0A%09%09%09%09out.vcount++;%0A%09%09%09%09u2%20%3D%20bestVideo(v);%0A%09%09%09%09if%20(m%20%3D%20a.video_dash_manifest)%20%7B%0A%09%09%09%09%09%5Bu,%20fftime%5D%20%3D%20baseURLs(m);%0A%09%09%09%09%09if%20(m.includes('codecs%3D%22vp09'))%20%7B%0A%09%09%09%09%09%09if%20(cpu%20%3D%3D%20-1)%20%7B%20u%20%3D%20undefined%20%7D%0A//%09%09%09%09%09%09else%20if%20(fftime%20%3E%2010)%20%7B%20out.switch%20%3D%20true%20%7D%0A%09%09%09%09%09%09else%20%7B%20out.switch%20%3D%20true%20%7D%0A%09%09%09%09%09%7D%0A%09%09%09%09%7D%0A%09%09%09%7D%20else%20%7B%0A%09%09%09%09u2%20%3D%20bestImage(a);%0A%09%09%09%7D%0A%09%09%09out.urls2.push(u2);%0A%09%09%09return%20u%20%3F%3F%20u2;%0A%09%09%7D)%0A%09%09if%20(input.includes('/reel/')%20%7C%7C%20input.includes('/tv/'))%20%7B%0A%09%09%09let%20cover%20%3D%20bestImage(p,%20true);%0A%09%09%09out.urls.unshift(cover);%0A%09%09%09out.urls2.unshift(cover);%0A%09%09%09out.reels%20%3D%201;%0A%09%09%7D%0A%09%09out.count%20%3D%20out.urls.length;%0A%09%09out.dates%20%3D%20Array.from(Array(out.count),%20(_,%20i)%20%3D%3E%20localDate(new%20Date(1000%20*%20(p.taken_at+i+1))));%0A%09%09out.tdates%20%3D%20out.dates.map(a%20%3D%3E%20touchDate(a));%0A%09%09out.caption%20%3D%20input%20+%20'%5Cn'%20+%20out.dates%5B0%5D.replace(/T(..)(..)(..)/,%20'%20$1:$2:$3%20%20@')%20+%20out.user%20+%20(p.caption%20%3F%20'%5Cn'%20+%20p.caption.text%20:%20'');%0A%09%7D%20else%20if%20(%5B'stories','s'%5D.includes(m%5B1%5D))%20%7B%20//%20stories%0A%09%09out%20%3D%20%7B...out,%20urls:%5B%5D,%20urls2:%5B%5D,%20dates:%5B%5D,%20tdates:%5B%5D,%20vcount:0%7D;%0A%09%09out.user%20%3D%20j.user.username;%0A%09%09out.count%20%3D%20j.items.length;%0A%09%09let%20sid%20%3D%20input.match(/%5Cd%7B5,25%7D(%3F%3D%5C/%3F$)/)%3F.%5B0%5D%20+%20%22_%22%20+%20j.user.pk;%0A%09%09let%20captions%20%3D%20%5B%5D;%0A%09%09j.items.sort((a,b)%20%3D%3E%20a.taken_at%20-%20b.taken_at).forEach(a%20%3D%3E%20%7B%0A%09%09%09let%20d%20%3D%20localDate(new%20Date(1000*a.taken_at));%0A%09%09%09let%20td%20%3D%20touchDate(d);%0A%09%09%09let%20u,%20u2,%20u3,%20fftime;%0A%09%09%09if%20(a.media_type%20%3D%3D%201)%20%7B%0A%09%09%09%09u2%20%3D%20bestImage(a);%0A%09%09%09%7D%20else%20%7B%0A%09%09%09%09if%20(a.story_music_stickers)%20%7B%0A%09%09%09%09%09out.count++;%0A%09%09%09%09%09u3%20%3D%20bestImage(a);%0A%09%09%09%09%09out.urls.push(u3);%0A%09%09%09%09%09out.urls2.push(u3);%0A%09%09%09%09%09out.dates.push(d);%0A%09%09%09%09%09out.tdates.push(td);%0A%09%09%09%09%7D%0A%09%09%09%09let%20v%20%3D%20a.video_versions;%0A%09%09%09%09u2%20%3D%20bestVideo(v);%0A%09%09%09%09if%20(m%20%3D%20a.video_dash_manifest)%20%7B%0A%09%09%09%09%09%5Bu,%20fftime%5D%20%3D%20baseURLs(m);%0A%09%09%09%09%09if%20(m.includes('codecs%3D%22vp09'))%20%7B%0A%09%09%09%09%09%09if%20(cpu%20%3D%3D%20-1)%20%7B%20u%20%3D%20undefined%20%7D%0A//%09%09%09%09%09%09else%20if%20(fftime%20%3E%2010)%20%7B%20out.switch%20%3D%20true%20%7D%0A%09%09%09%09%09%09else%20%7B%20out.switch%20%3D%20true%20%7D%0A%09%09%09%09%09%7D%0A%09%09%09%09%7D%0A%09%09%09%09out.vcount++;%0A%09%09%09%7D%0A%09%09%09let%20cap%20%3D%20a.caption%20%7C%7C%20a.accessibility_caption;%0A%09%09%09let%20caption;%0A%09%09%09if%20(cap)%20%7B%0A%09%09%09%09caption%20%3D%20d.replace(/T(..)(..)(..)/,%20'%20$1:$2:$3%20%20@')%20+%20out.user%20+%20(cap%20%3F%20'%5Cn'%20+%20cap%20:%20'');%0A%09%09%09%09captions.push(caption);%0A%09%09%09%7D%0A%09%09%09out.urls.push(u%20%3F%3F%20u2);%0A%09%09%09out.urls2.push(u2);%0A%09%09%09out.dates.push(d);%0A%09%09%09out.tdates.push(td);%0A%09%09%09if%20(out.count%20%3E%201%20%26%26%20a.id%20%3D%3D%3D%20sid)%20%7B%0A%09%09%09%09if%20(u3)%20%7B%0A%09%09%09%09%09out.one%20%3D%20%7Buser:out.user,%20count:2,%20dates:%5Bd,d%5D,%20urls:%5Bu3,%20u%20%3F%3F%20u2%5D,%20urls2:%5Bu3,%20u2%5D,%20tdates:%5Btd,td%5D,%20caption:caption%7D;%0A%09%09%09%09%7D%20else%20%7B%0A%09%09%09%09%09out.one%20%3D%20%7Buser:out.user,%20count:1,%20dates:%5Bd%5D,%20urls:%5Bu%20%3F%3F%20u2%5D,%20urls2:%5Bu2%5D,%20tdates:%5Btd%5D,%20caption:caption%7D;%0A%09%09%09%09%7D%0A//%09%09%09%09if%20((cpu%20!%3D%20-1)%20%26%26%20a.video_dash_manifest%3F.includes('codecs%3D%5Cu0022vp09')%20%26%26%20fftime%20%3E%2010)%20%7B%20out.one.switch%20%3D%20true%20%7D%0A%09%09%09%09if%20((cpu%20!%3D%20-1)%20%26%26%20a.video_dash_manifest%3F.includes('codecs%3D%5Cu0022vp09'))%20%7B%20out.one.switch%20%3D%20true%20%7D%0A%09%09%09%7D%0A%09%09%7D);%0A%09%09out.caption%20%3D%20captions.join('%5Cn%5Cn');%0A%09%7D%0A%09return%20out;")))();
window.close();
completion(output);") >> runJavascriptOnWebpage
		replaceText(input: "${DeviceDetails.get(System Version)}", find: "\..*", replace: "", isRegex: true) >> replaceText
		if(Updated Text >= 16) { >> IFResult 4
//Unable to get shortcuts action com.apple.mobilesafari.TabEntity
			if(Tabs .contains "instagram.com") {
//Unable to get shortcuts action com.apple.mobilesafari.CloseTab
			}
		} >> IFResult 5
		if(JavaScript Result != nil) { >> IFResult 6
			number(value: JavaScript Result) >> number
			replaceText(input: "${ShortcutInput.as(URL)}", find: "(?<=instagram\.com/)[^/]+/(?=p/|tv/|reel/)|\?.*", isRegex: true) >> replaceText 1
			if(Number == 1) { >> IFResult 7
				if(JavaScript Result != nil) {
					url(url: "https://www.instagram.com/accounts/login/?next=${Updated Text}") >> url
				} >> IFResult 8
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${If Result}"/>") >> url 1
				openURL(url: URL) >> openURL
				if(JavaScript Result != nil) {
					menu(, [) {
					case("mainDict (privacy?)"):
						openURL(url: mainDict) >> openURL 1
					case("mainDict (ack)"):
					}
				}
				exit()
			} >> IFResult 9
			if(JavaScript Result != nil) {
				valueFor(key: "usesafe2", dictionary: mainDict) >> valueFor 1
			} >> IFResult 10
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = safemodeoff;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Dictionary Value";
                        OutputUUID = "7FE66B38-FF9A-4017-818E-89916512146F";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = retry;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 1
			choose(list: List, prompt: "${mainDict.key(msg.safenomedia)}") >> choose
			if(ActionOutput == ""${mainDict.key(retry)}"") {
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${Updated Text}"/>") >> url 2
				openURL(url: URL) >> openURL 2
			} else {
				openApp(id: "com.burbn.instagram") >> openApp
				if(ActionOutput == ""${mainDict.key(safemodeoff)}"") {
					replaceText(input: "${localpref}", find: ""hide[^"]+info":\s*\w+,?|"[^"]+count":\s*\w+,?", isRegex: true) >> replaceText 2
					setValue(key: "safemode", value: "${mainDict.key(1)}", dictionary: Updated Text) >> setValue
				} else {
					setValue(key: "safemode", value: "${mainDict.key(3)}", dictionary: localpref) >> setValue 1
				} >> IFResult 11
				saveFile(input: If Result, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
				runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut
			}
			exit()
		} >> IFResult 12
//Unable to get shortcuts action is.workflow.actions.getvariable
	} else { >>  13
		if(ShortcutInput .beginsWith "{") { >> IFResult 13
var switched = Variable
//Unable to get shortcuts action is.workflow.actions.getvariable
		} else { >>  14
			if(safe mode == 1) { >> IFResult 14
				nothing() >> nothing
			} else { >>  1
				matchText(text: "${ShortcutInput}", regex: "/(?:p|reels?|tv|s|stories|share)/") >> matchText
				if(safe mode == 3) {
					matchText(text: "${ShortcutInput}", regex: "/(?:p|reels?|tv|share)/") >> matchText 1
				} >> IFResult 15
			} >> IFResult 16
			if(If Result == nil) { >> IFResult 17
				if(ShortcutInput .contains "/s/") { >> IFResult 18
					alert(alert: "${mainDict.key(msg.hlprompt1)}")
					getClipboard() >> old clipboard
					setClipboard() >> setClipboard
					wait(seconds: 3)
					repeat(20) {
						if(Clipboard == nil) {
							wait(seconds: 0.5)
							getClipboard() >> getClipboard
						} >> IFResult 19
					} >> RepeatResult
					setClipboard(variable: old clipboard) >> setClipboard 1
					if(Clipboard .contains "instagram.com/") {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
						alert(alert: "${mainDict.key(msg.hlprompt2)}")
						setClipboard() >> setClipboard 2
						wait(seconds: 6)
						repeat(20) {
							if(Clipboard == nil) {
								wait(seconds: 0.5)
								getClipboard() >> getClipboard 1
							} >> IFResult 20
						} >> RepeatResult 1
						setClipboard(variable: old clipboard) >> setClipboard 3
						if(Clipboard .contains "/highlights/") {
							openApp(id: "com.burbn.instagram") >> openApp 1
							runShortcut(name: "Instagram Download", input: Clipboard) >> runShortcut 1
						}
					}
					exit()
				} >> IFResult 21
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			} else { >>  22
				replaceText(input: "${ShortcutInput}", find: "(?<=instagram\.com/)[^/]+/(?=p/|tv/|reel/)|\?.*", isRegex: true) >> replaceText 3
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${Updated Text}"/>") >> url 3
				openURL(url: URL) >> openURL 3
				if(localpref == nil) { >> IFResult 22
					getNumbersFrom(text: localpref) >> getNumbersFrom
					if(Numbers > 2) { >> IFResult 23
						getTextFrom(input: mainDict) >> ackhide
					} >> IFResult 24
					list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = safemodeoff;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = ackhide;
                        OutputUUID = "102EF46C-7123-476C-B246-70EF3C07499C";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = ack;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 2
					choose(list: List, prompt: "${mainDict.key(msg.safariprompt)}") >> choose 1
					if(ActionOutput == ""${mainDict.key(safemodeoff)}"") {
						replaceText(input: "${localpref}", find: ""safe info count":\d+,?", isRegex: true) >> replaceText 4
						setValue(key: "safemode", value: "${mainDict.key(1)}", dictionary: Updated Text) >> setValue 2
						saveFile(input: Dictionary, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 1
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						replaceText(input: "${DeviceDetails.get(System Version)}", find: "\..*", replace: "", isRegex: true) >> replaceText 5
						if(Updated Text >= 16) { >> IFResult 25
//Unable to get shortcuts action com.apple.mobilesafari.TabEntity
							if(Tabs .contains "instagram.com") {
//Unable to get shortcuts action com.apple.mobilesafari.CloseTab
							}
						} >> IFResult 26
						openApp(id: "com.burbn.instagram") >> openApp 2
						runShortcut(name: "Instagram Download", input: Updated Text)
					} else {
						if(ActionOutput == ""${mainDict.key(ackhide)}"") {
							setValue(key: "hide safe info", value: "${mainDict.key(1)}", dictionary: localpref) >> setValue 3
						} else {
							math(input: "1", operand: localpref) >> math
							setValue(key: "safe info count", value: "${Calculation Result}", dictionary: localpref) >> setValue 4
						} >> IFResult 27
						saveFile(input: If Result, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 2
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
					} >> IFResult 28
				} >> IFResult 29
				exit()
			} >> IFResult 30
		}
	}
} >> IFResult 31
if(If Result == nil) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
} >> IFResult 32
getDictionaryFrom(input: If Result) >> getDictionaryFrom 2
var Output = Dictionary
if(Output != nil) { >> IFResult 33
	openApp(id: "dk.simonbs.Scriptable") >> openApp 3
	if(ShortcutInput != nil) {
		openApp(id: "com.burbn.instagram") >> openApp 4
	} else {
		openApp(id: "com.apple.shortcuts") >> openApp 5
	} >> IFResult 34
	runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut 2
	exit()
} >> IFResult 35
if(Output != nil) { >> IFResult 36
	wait(seconds: Output)
	runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut 3
	exit()
} >> IFResult 37
if(Output != nil) { >> IFResult 38
	alert(alert: "${mainDict.key(msg.oldversion)}", cancel: false)
	openURL(url: mainDict) >> openURL 4
	exit()
} >> IFResult 39
if(Output != nil) { >> IFResult 40
	replaceText(input: "${Output.key(version)}", find: "(?m)^id:.+", isRegex: true) >> replaceText 6
	menu(, [) {
	case("mainDict (gotoweb)"):
		openURL(url: mainDict)
		exit()
	case("mainDict (downloadupdate)"):
		matchText(text: "${Output.key(version)}", regex: "(?<=\nid:).+") >> matchText 2
		expandURL(url: "https://routinehub.co/download/${Matches}/") >> expandURL
		openURL(url: Expanded URL) >> openURL 5
		exit()
	case("mainDict (notnow)"):
	} >> MenuResult
} >> IFResult 41
getDictionaryFrom(input: Output) >> getDictionaryFrom 3
var pref = Dictionary
if(ShortcutInput != nil) { >> IFResult 42
	text(text: "0") >> text
	if(DeviceDetails != nil) {
		text(text: "1") >> text 1
	} >> IFResult 43
	if(Output != nil) { >> IFResult 44
		valueFor(key: "allstory${pref.key(selection.1)}", dictionary: mainDict) >> valueFor 2
		menu(, [) {
		case("mainDict (onestory)"):
			getDictionaryFrom(input: Output) >> getDictionaryFrom 4
var Output = Dictionary
		case("Dictionary Value"):
		} >> MenuResult 1
	} >> IFResult 45
	if(Output != nil) { >> IFResult 46
		menu(, [) {
		case("mainDict (profilestory)"):
		case("mainDict (highlight)"):
//Unable to get shortcuts action is.workflow.actions.getvariable
			if(Output == nil) {
				setName(input: Output, name: "a.vcf") >> setName
				choose(list: Renamed Item, prompt: "${mainDict.key(msg.hlprompt)}") >> choose 2
				contactDetail(detail: Notes, contact: Chosen Item) >> contactDetail
			} >> IFResult 47
			runShortcut(name: "Instagram Download", input: If Result)
			exit()
		}
	}
	valueFor(key: "count", dictionary: Output) >> count
	if(count > 0) {
		repeatEach(Output) {
			url(url: Repeat Item) >> url 4
		} >> RepeatResult 2
		downloadURL(url: "${Repeat Results}") >> downloadURL
		repeatEach(Contents of URL) {
			if(Repeat Item ==) {
				text()
			}
		} >> RepeatResult 3
		if(Repeat Results .contains "txt") { >> IFResult 48
			menu(, [) {
			case("mainDict (geturls2)"):
			case("mainDict (login)"):
				alert(alert: "${mainDict.key(msg.login)}")
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
				exit()
			} >> MenuResult 2
			setValue(key: "urls", value: "urls2", dictionary: mainDict) >> setValue 5
var mainDict = Dictionary
			repeatEach(Output) {
				url(url: Repeat Item) >> url 5
			} >> RepeatResult 4
			downloadURL(url: "${Repeat Results}") >> downloadURL 1
		} >> IFResult 49
		valueFor(key: "selection.6", dictionary: pref) >> Media Date
		if(Media Date > 2) { >> IFResult 50
			choose(list: mainDict, prompt: "${mainDict.key(msg.dateprompt)}") >> choose 3
			replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 7
			count(type: Characters, input: Updated Text) >> count 1
			math(input: "0", operand: Count) >> math 1
			math(input: Calculation Result, operation: -, operand: "2") >> math 2
			if(Calculation Result false 1) {
				combineText(text: pref, combine: Custom) >> combineText
				replaceText(input: "${Combined Text}", find: ".(..)$", replace: "${Calculation Result}$1", isRegex: true) >> replaceText 8
				splitText(text: Updated Text, separator: Every Character) >> splitText
				setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 6
var pref = Dictionary
				alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
			}
		} >> IFResult 51
		adjustDate(operation: Subtract, duration: , date: "${CurrentDate}") >> adjustDate
var index = Variable
		repeat(count) { >> RepeatResult 5
			getItemFromList(list: Contents of URL, type: Item At Index, index: index) >> item 1
//Unable to get shortcuts action is.workflow.actions.appendvariable
			if(MediaDate == 1) {
				valueFor(key: "dates.${Repeat Index}", dictionary: Output)
			} else {
				adjustDate(duration: , date: "${Adjusted Date}") >> adjustDate 1
				formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "yyyy-MM-dd'T'HHmmss")
			} >> IFResult 52
			valueFor(key: "${Repeat Index}.${Variable}", dictionary: Output) >> valueFor 3
			count(input: Dictionary Value) >> count 2
			if(Count == 1) {
				setName(input: item 1, name: "ig_${Repeat Index}.${Variable}") >> setName 1
				saveFile(input: Renamed Item, ask: false, overwrite: true) >> saveFile 3
				nothing()
				if(item 1 == "mp4") {
var 453CA043-156E-4570-8EE4-A26893C9553E = """ffmpeg -v error -i ig_￼.mp4 -metadata "creation_time=￼" -c copy -y ig_t.mp4
mv -f ig_t.mp4 ig_￼.mp4"""
text("${453CA043-156E-4570-8EE4-A26893C9553E}")
				} >> IFResult 53
			} else {
				setName(input: item 1, name: "ig_${Repeat Index}v") >> setName 2
				math(input: index, operand: "1") >> math 3
var index = Calculation Result
				getItemFromList(list: Contents of URL, type: Item At Index, index: index) >> getItemFromList
				setName(input: Item from List, name: "ig_${Repeat Index}a") >> setName 3
				list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Renamed Item";
                        OutputUUID = "6B283A41-A855-4F88-A81E-0AA7D127EE32";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Renamed Item";
                        OutputUUID = "2AAB1040-08F9-433C-BC46-116CB8DE93B7";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 3
				saveFile(input: List, ask: false, overwrite: true) >> saveFile 4
				text(text: "ffmpeg -v error -i ig_${Repeat Index}v.mp4 -i ig_${Variable}a.mp4 -c copy -map 0:v:0 -map 1:a:0 -metadata "creation_time=${Repeat Index}" -y ig_${Variable}.mp4")
			} >> IFResult 54
			math(input: index, operand: "1") >> math 4
var index = Calculation Result
			nothing()
			if(MediaDate == 1) {
				valueFor(key: "tdates.${Repeat Index}", dictionary: Output) >> valueFor 4
			} else {
				formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "yyyyMMddHHmm.ss")
			} >> IFResult 55
var EBCD76B2-CD65-47BE-9EF7-6D34153CCC9B = """dash -c "if [ $(ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 ig_￼.￼) = vp9 ];then ffmpeg -v error -stats -i ig_￼.￼ -c:v h264 -b:v $(bc -e $(ffprobe -v error -select_streams v:0 -show_entries stream=bit_rate -of default=noprint_wrappers=1:nokey=1 ig_￼.￼)*2) -c:a copy -y ig_t.mp4;mv -f ig_t.mp4 ig_￼.￼;fi"
touch -t ￼ ig_￼.￼"""
text("${EBCD76B2-CD65-47BE-9EF7-6D34153CCC9B}")
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "ffmpeg copy";
                        OutputUUID = "1AAC1CCD-482A-4DF8-8766-2B07F11A8656";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Text;
                        OutputUUID = "61965B38-8DEF-4B63-9F2A-EF3D43975129";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
))
		} >> RepeatResult 6
		statistic(input: Contents of URL, operation: Maximum) >> statistic
		if(Maximum false 150000000) { >> IFResult 56
			valueFor(key: "switch", dictionary: Output)
		} >> IFResult 57
		if(If Result != nil) {
var switched = Variable
			openApp(id: "AsheKube.app.a-Shell-mini")
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			waitToReturn()
		} else {
			replaceText(input: "${Repeat Results}", find: "ig_", replace: "~/Documents/ig_") >> replaceText 9
			repeatEach(Updated Text) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} >> RepeatResult 7
		}
		count(type: Characters, input: count) >> digits
		math(input: digits, operation: …, scientific: 10^x) >> math 5
		repeatEach(Output) { >> RepeatResult 8
			getItemFromList(list: extensions, type: Item At Index, index: Repeat Index) >> getItemFromList 1
			getFile(path: "ig_${Repeat Index}.${Variable}") >> getFile 1
			nothing()
			if(Output != nil) {
				if(count > 1) {
					math(input: Calculation Result, operand: Repeat Index) >> math 6
					replaceText(input: "${Calculation Result}", find: "^.", replace: "-", isRegex: true)
				} >> IFResult 58
			} >> IFResult 59
			setName(input: File, name: "${Output.key(user)} ${Variable.key(user)}${If Result}") >> setName 4
		} >> RepeatResult 9
var media = Repeat Results
		count(input: media)
		if(Output != nil) { >> IFResult 60
			valueFor(key: "selection.7", dictionary: pref) >> Reels Cover
			if(Reels Cover > 2) { >> IFResult 61
				choose(list: mainDict, prompt: "${mainDict.key(msg.reelsprompt)}") >> choose 4
				replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 10
				count(type: Characters, input: Updated Text) >> count 3
				math(input: "0", operand: Count) >> math 7
				math(input: Calculation Result, operation: -, operand: "2") >> math 8
				if(Calculation Result false 1) {
					combineText(text: pref, combine: Custom) >> combineText 1
					replaceText(input: "${Combined Text}", find: ".(.)$", replace: "${Calculation Result}$1", isRegex: true) >> replaceText 11
					splitText(text: Updated Text, separator: Every Character) >> splitText 1
					setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 7
var pref = Dictionary
					alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
				}
			} >> IFResult 62
			if(If Result == 2) {
				getItemFromList(list: media, type: Last Item) >> getItemFromList 2
var media = Item from List
			}
			number(value: 1)
		} >> IFResult 63
		replaceText(input: "${DeviceDetails.get(System Version)}", find: "\.(\d+).*", replace: "$1", isRegex: true) >> OS
		if(new count > 1) { >> IFResult 64
			valueFor(key: "selection.1", dictionary: pref) >> Show List
			if(Show List == 1) {
				number(value: 2) >> number 1
				if(Output != nil) { >> IFResult 65
					valueFor(key: "selection.2", dictionary: pref) >> Show Grid
					if(Show Grid > 2) {
						choose(list: mainDict, prompt: "${mainDict.key(msg.gridprompt)}") >> choose 5
						replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 12
						count(input: Updated Text) >> count 4
						math(input: Count, operation: -, operand: "2") >> math 9
						if(Calculation Result false 1) {
							combineText(text: pref, combine: Custom) >> combineText 2
							replaceText(input: "${Combined Text}", find: "^(.).", replace: "$1${Count}", isRegex: true) >> replaceText 13
							splitText(text: Updated Text, separator: Every Character) >> splitText 2
							setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 8
var pref = Dictionary
							alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Count
						} >> IFResult 66
					} >> IFResult 67
				} >> IFResult 68
				if(count > 4) { >> IFResult 69
					number(value: 1) >> number 2
					menu(, [) {
					case("mainDict (selectall)"):
					case("mainDict (selectnone)"):
						number(value: 0)
					}
				} >> IFResult 70
				if(ShowGrid == 1) {
					repeatEach(extensions) {
						nothing()
						if(Repeat Item == "mp4") {
							text(text: "ffmpeg -v error -t 1.3 -i ig_${Repeat Index}.mp4 -vf "fps=1.2,scale=256:-1" -y ig_${Variable}.gif") >> text 2
						}
					} >> RepeatResult 10
					statistic(input: media, operation: Maximum) >> statistic 1
					if(Maximum false 100000000) {
						splitText(text: Repeat Results) >> splitText 3
						replaceText(input: "${Split Text}", find: "ig_", replace: "~/Documents/ig_") >> replaceText 14
						repeatEach(Updated Text) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						}
					} else {
var switched = Variable
						openApp(id: "AsheKube.app.a-Shell-mini")
var ABC65B90-A55F-4D65-9D6A-4078D4CD6CE2 = """hideKeyboard
cd ~/Documents
clear
touch ig_begin0
rm -f ig_done
￼
touch ig_done"""
text("${ABC65B90-A55F-4D65-9D6A-4078D4CD6CE2}")
						repeat(5) { >> RepeatResult 11
							if(File == nil) {
								if(Repeat Index .between 2...4) {
								} else {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
								}
								wait(seconds: 0.5)
								getFile(path: "ig_begin0", error: false) >> getFile 2
							}
						} >> RepeatResult 12
						repeat(20) { >> RepeatResult 13
							if(File == nil) {
								repeat(20) { >> RepeatResult 14
									if(File == nil) {
										wait(seconds: 0.5)
										getFile(path: "ig_done", error: false) >> getFile 3
									}
									nothing()
								}
							}
						} >> RepeatResult 15
					}
					repeatEach(media) { >> RepeatResult 16
						if(Repeat Item == "mp4") {
							getFile(path: "ig_${Repeat Index}.gif")
						} >> IFResult 71
						setName(input: If Result, name: "${Repeat Index}")
					} >> RepeatResult 17
					choose(list: Repeat Results, multiple: true, all: SelectAll) >> choose 6
					getName() >> getName
					repeatEach(Name) {
						getItemFromList(list: media, type: Item At Index, index: Repeat Item)
					} >> RepeatResult 18
				} else { >>  19
					if(OS .between 171...173) {
						getNumbersFrom(text: Output) >> getNumbersFrom 1
						if(Numbers == 0) {
							math(input: "1", operation: -, operand: switched) >> math 10
var switched = Calculation Result
							if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
							} else {
								openApp(id: "com.burbn.instagram")
							}
						}
					} else {
						wait(seconds: 0.5)
					} >> IFResult 72
					choose(list: media, multiple: true, all: SelectAll) >> choose 7
				} >> IFResult 73
var media = If Result
			}
		} >> IFResult 74
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
		if(media != nil) { >> IFResult 75
			valueFor(key: "selection.3", dictionary: pref) >> Share
			if(Share == 1) {
				if(OS .between 171...173) {
					math(input: "1", operation: -, operand: switched) >> math 11
var switched = Calculation Result
					if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
					} else {
						openApp(id: "com.burbn.instagram")
					}
				} else {
					wait(seconds: 0.5)
				}
				share(file: media) >> share
			} >> IFResult 76
			valueFor(key: "selection.4", dictionary: pref) >> Save to Files
			if(Save to Files == 1) {
				valueFor(key: "folderlocation", dictionary: pref) >> valueFor 5
				if(OS == 1) {
					if(Dictionary Value == nil) {
						menu(, [) {
						case("mainDict (onmy)Device Details (Device Type)"):
							number(value: 1)
						case("iCloud Drive"):
							number(value: 2)
						case("iCloud Drive/Shortcuts"):
							number(value: 3)
						} >> MenuResult 3
						setValue(key: "folderlocation", value: "${Menu Result.as(Number)}", dictionary: pref) >> setValue 9
var pref = Dictionary
//Unable to get shortcuts action is.workflow.actions.getvariable
					} >> IFResult 77
				} >> IFResult 78
				if(If Result == 1) {
					file(file: $0) >> file 1
				} else {
					if(If Result == 2) {
						file(file: $0) >> file 2
					} else {
						file(file: $0) >> file 3
					}
				} >> IFResult 79
				if(pref == nil) {
					valueFor(key: "msg.folderprompt${OS}", dictionary: mainDict) >> valueFor 6
					askForInput(prompt: "${Dictionary Value}") >> askForInput
					text(text: "${Provided Input}") >> text 3
					setValue(key: "savefolder", value: "${Text}", dictionary: pref) >> setValue 10
var pref = Dictionary
var savePref = Variable
					if(Provided Input != nil) {
						createFolder(path: "${pref.key(savefolder)}") >> createFolder
					}
				} >> IFResult 80
				saveFile(input: media, ask: false, path: "${pref.key(savefolder)}") >> saveFile 5
			} >> IFResult 81
			valueFor(key: "selection.5", dictionary: pref) >> Save to Album
			if(Save to Album == 1) {
				valueFor(key: "album", dictionary: pref) >> album
				if(album == nil) {
					alert(alert: "${mainDict.key(msg.album)}", cancel: false)
					saveToCameraRoll(image: media, album: Ask) >> saveToCameraRoll
					getItemFromList(list: Saved Photo Media) >> getItemFromList 3
					text(text: "${Item from List}") >> text 4
					setValue(key: "album", value: "${Text}", dictionary: pref) >> setValue 11
var pref = Dictionary
var savePref = Variable
				} else {
					if(album == "") {
						saveToCameraRoll(image: media) >> saveToCameraRoll 1
					} else {
						if(OS == 1) {
							createAlbum(photos: media, name: "${album}") >> createAlbum
						} else {
							saveToCameraRoll(image: media, album: album)
						}
					} >> IFResult 82
				} >> IFResult 83
			} >> IFResult 84
		} >> IFResult 85
		if(switched == 1) {
			openApp(id: "com.burbn.instagram")
		}
		if(Output != nil) { >> IFResult 86
			valueFor(key: "selection.8", dictionary: pref) >> Copy Caption
			if(Copy Caption > 2) {
				choose(list: mainDict, prompt: "${mainDict.key(msg.copyprompt)}") >> choose 8
				replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 15
				count(type: Characters, input: Updated Text) >> count 5
				math(input: "0", operand: Count) >> math 12
				math(input: Calculation Result, operation: -, operand: "2") >> math 13
				if(Calculation Result false 1) {
					combineText(text: pref, combine: Custom) >> combineText 3
					replaceText(input: "${Combined Text}", find: ".$", replace: "${Calculation Result}", isRegex: true) >> replaceText 16
					splitText(text: Updated Text, separator: Every Character) >> splitText 4
					setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 12
var pref = Dictionary
					alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
				} >> IFResult 87
			} >> IFResult 88
			if(If Result == 1) {
				setClipboard(variable: Output) >> setClipboard 4
				getClipboard()
			}
		}
	} >> IFResult 89
	if(savePref != nil) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
	} >> IFResult 90
	if(count == 0) { >> IFResult 91
		if(Output != nil) {
			getTextFrom(input: Output) >> getTextFrom
			nothing() >> nothing 1
			if(Text .contains "⚠️") {
				valueFor(key: "usesafe", dictionary: mainDict) >> usesafe
				if(DeviceDetails ==) {
					if(safe mode == 1) {
						valueFor(key: "usesafe2", dictionary: mainDict) >> valueFor 7
					}
				}
			} >> IFResult 92
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = usesafe;
                        OutputUUID = "1EF6070F-53BA-4C56-8C49-B989E52E2582";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Dictionary Value";
                        OutputUUID = "14E28E3F-E6AF-4DAA-85A3-6DB100813227";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = openscriptable;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = notnow;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 4
			choose(list: List, prompt: "${Output.key(message)}") >> choose 9
			if(Chosen Item .beginsWith "🚸") {
				if(Chosen Item == ""${usesafe}"") {
					setValue(key: "safemode", value: "${mainDict.key(2)}", dictionary: localpref) >> setValue 13
				} else {
					setValue(key: "safemode", value: "${mainDict.key(3)}", dictionary: localpref) >> setValue 14
				} >> IFResult 93
				saveFile(input: If Result, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 6
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} >> IFResult 94
			if(Chosen Item == ""${mainDict.key(openscriptable)}"") {
				alert(alert: "${mainDict.key(msg.login)}")
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
		} else {
			alert(alert: "${mainDict.key(msg.nomedia)}", title: "${ShortcutInput}", cancel: false)
		} >> IFResult 95
	}
} else { >>  96
var menu = Variable
	repeat(20) {
		if(menu == 1) {
var menu = Variable
			getNumbersFrom(text: localpref) >> safemode
			nothing()
			if(safemode != 1) {
				valueFor(key: "loginsafari", dictionary: mainDict) >> valueFor 8
			} >> IFResult 96
			getItemFromList(list: mainDict, type: Item At Index, index: safemode) >> getItemFromList 4
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact2;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = login;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = checklogin;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "If Result";
                        OutputUUID = "562B99E4-6E97-4B7B-BBDA-2DB93C75C209";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = "safemode.title";
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                    "{1, 1}" =                     {
                        OutputName = "Item from List";
                        OutputUUID = "6B2DB4FA-05DA-4AB7-AA78-44614804A488";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = settings;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = getlink;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 5
			choose(list: ActionOutput, prompt: "${mainDict.key(msg.menuprompt)}") >> choose 10
			if(Chosen Item == ""${mainDict.key(contact)}"") {
				openURL(url: mainDict)
			}
			if(Chosen Item == ""${mainDict.key(contact2)}"") {
				openURL(url: mainDict)
			} >> IFResult 97
			if(Chosen Item == ""${mainDict.key(login)}"") {
				alert(alert: "${mainDict.key(msg.login)}")
				if(safemode == 1) {
var FE6C182D-B503-451F-83A2-FFDF4EB5071B = """let fm = FileManager.local();
let path = fm.joinPath(fm.documentsDirectory(), '￼');
pref = fm.fileExists(path) ? JSON.parse(fm.readString(path)) : {};
pref.wait = Date.now() + 9000;
fm.writeString(path, JSON.stringify(pref));"""
text("${FE6C182D-B503-451F-83A2-FFDF4EB5071B}")
				} >> IFResult 98
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
			if(Chosen Item == ""${mainDict.key(checklogin)}"") {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
			if(Chosen Item == ""${mainDict.key(loginsafari)}"") {
				openURL(url: "https://www.instagram.com/accounts/settings/") >> openURL 6
			}
			if(Chosen Item .beginsWith ""${mainDict.key(safemode.title)}"") {
				math(input: localpref, operation: …, scientific: Modulus) >> math 14
				math(input: Calculation Result, operand: "1") >> math 15
				setValue(key: "safemode", value: "${Calculation Result}", dictionary: localpref) >> setValue 15
				if(Calculation Result == 1) {
					replaceText(input: "${Dictionary}", find: ""hide[^"]+info":\s*\w+,?|"[^"]+count":\s*\w+,?", isRegex: true) >> replaceText 17
					getDictionaryFrom(input: Updated Text)
				} >> IFResult 99
var localpref = If Result
				saveFile(input: localpref, ask: false, path: "${mainDict.key(filename)}", overwrite: true) >> saveFile 7
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
var menu = Variable
			}
			if(Chosen Item == ""${mainDict.key(settings)}"") {
				repeat(30) {
					if(menu == 0) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
						getDictionaryFrom(input: Output) >> getDictionaryFrom 5
						choose(list: Dictionary, prompt: "${Dictionary.key(folderpath)}${ActionOutput.key(folderpath)}${Dictionary.key(albumname)}") >> choose 11
						if(Chosen Item == ""${mainDict.key(goback)}"") {
var menu = Variable
						} else {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
							getDictionaryFrom(input: Output) >> getDictionaryFrom 6
var pref = Dictionary
						} >> IFResult 100
					} >> IFResult 101
				} >> RepeatResult 19
			}
			if(Chosen Item == ""${mainDict.key(getlink)}"") {
				getClipboard() >> getClipboard 2
				if(Clipboard .contains "instagram.com") {
					runShortcut(name: "Instagram Download", input: Clipboard) >> runShortcut 4
				} else {
					alert(alert: "${Clipboard}", title: "${mainDict.key(msg.noclipboard)}", cancel: false)
				} >> IFResult 102
			}
		}
	} >> RepeatResult 20
} >> IFResult 103
exit()
