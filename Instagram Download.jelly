import Shortcuts
#Color: Red, #Icon: circledStop

/*
Downloads public or private photos and videos from posts, stories, highlights, reels, etc at highest quality
2024-11-26 	v5.5.3
https://routinehub.co/user/gluebyte
https://threads.net/@gluebyte
*/
list(items: (
        {
        WFItemType = 1;
        WFValue =         {
            Value =             {
                Value =                 {
                    WFDictionaryFieldValueItems =                     (
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = version;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "2024-11-26";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = name;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Instagram Download";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = id;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = DF1910A2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefversion;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 4;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = filename;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Instagram Download.json";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = defaultpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 4;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = selection;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 2;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 1;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 3;
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = 3;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = updatecheck;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 0;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = prefstring;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Show List for Multiple Items";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "\U2937 Show Videos in Grid View";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = Share;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Files";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Save to Photos";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Media Date";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Date Posted [1/3]",
                                                                    "Current Date [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Get Reels Cover";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    },
                                                                        {
                                        WFItemType = 1;
                                        WFValue =                                         {
                                            Value =                                             {
                                                Value =                                                 {
                                                    WFDictionaryFieldValueItems =                                                     (
                                                                                                                {
                                                            WFItemType = 0;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = title;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 {
                                                                    string = "Copy Caption to Clipboard";
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                        },
                                                                                                                {
                                                            WFItemType = 2;
                                                            WFKey =                                                             {
                                                                Value =                                                                 {
                                                                    string = option;
                                                                };
                                                                WFSerializationType = WFTextTokenString;
                                                            };
                                                            WFValue =                                                             {
                                                                Value =                                                                 (
                                                                    "Yes [1/3]",
                                                                    "No [2/3]",
                                                                    "Ask Always [3/3]"
                                                                );
                                                                WFSerializationType = WFArrayParameterState;
                                                            };
                                                        }
                                                    );
                                                };
                                                WFSerializationType = WFDictionaryFieldValue;
                                            };
                                            WFSerializationType = WFDictionaryFieldValue;
                                        };
                                    }
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = option;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "\U2611\Ufe0f",
                                    "\U2b1c\Ufe0f"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = localpref;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = prefversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 3;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safemode;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = 1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = safemode;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = title;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\Ud83d\Udeb8  Use Safe Mode\U3000\U27a4\U3000";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 2;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = options;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     (
                                                        No,
                                                        Yes,
                                                        "Posts/reels only"
                                                    );
                                                    WFSerializationType = WFArrayParameterState;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 0;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 3;
                            WFKey =                             {
                                Value =                                 {
                                    string = 3;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = 3;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onmy;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "On My ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = gotoweb;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf0f  Go to RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = downloadupdate;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc7e  Download Update";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = notnow;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Not Now";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = safemodeoff;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb7  Why Safari? Turn off Safe Mode";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = ackhide;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2705  OK, do not show anymore";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = ack;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2705  OK";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "privacy?";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U270b  Privacy Browsing?";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = privacyurl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://support.apple.com/105030";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = retry;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Retry;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = signin;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Log in";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = cancel;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Cancel;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = onestory;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U261d\Ufe0f  Download current story only";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = allstory1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Show list for all items";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "allstory\U0661";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Show list for all items";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = allstory2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Download all items";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = "allstory\U0662";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udd22  Download all items";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = profilestory;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Profile picture / Stories";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = highlight;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udfa6  Story highlights";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = selectall;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Select All  \U2611\Ufe0f \U2611\Ufe0f \U2611\Ufe0f";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = selectnone;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "Select None  \U2b1c\Ufe0f \U2b1c\Ufe0f \U2b1c\Ufe0f";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = geturls2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udedf  Try another (possibly lower quality) version";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = usesafe;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb8  Turn on Safe Mode";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = usesafe2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udeb8  Turn on Safe Mode for posts/reels";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = urls;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = urls;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83e\Uddf5  Contact gluebyte on Threads";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contact2;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc27  Contact gluebyte on RoutineHub";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = settings;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2699\Ufe0f  User Settings";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = login;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Manage accounts in Scriptable";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = checklogin;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udde3\Ufe0f  Check account in Scriptable";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = loginsafari;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udc64  Manage accounts in Safari";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = getlink;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83d\Udccb  Download media from copied link";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = goback;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2b90  Go Back";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = openscriptable;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\Ud83c\Udf10  Open Scriptable to sign in";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = folder;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Folder: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = album;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "\U2022 Media Album: ";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = Recents;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = contacturl;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "barcelona://user?username=gluebyte";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = web1;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "https://routinehub.co/user/gluebyte";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 0;
                            WFKey =                             {
                                Value =                                 {
                                    string = gestalt;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    string = "file:///private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist";
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = dateoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Date Posted\U200b",
                                    "Always Current Date\U200b\U200b",
                                    "Date Posted\U200b\U200b\U200b",
                                    "Current Date\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = gridoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = reelsoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 2;
                            WFKey =                             {
                                Value =                                 {
                                    string = copyoptions;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 (
                                    "Always Yes\U200b",
                                    "Always No\U200b\U200b",
                                    "Yes\U200b\U200b\U200b",
                                    "No\U200b\U200b\U200b\U200b"
                                );
                                WFSerializationType = WFArrayParameterState;
                            };
                        },
                                                {
                            WFItemType = 1;
                            WFKey =                             {
                                Value =                                 {
                                    string = msg;
                                };
                                WFSerializationType = WFTextTokenString;
                            };
                            WFValue =                             {
                                Value =                                 {
                                    Value =                                     {
                                        WFDictionaryFieldValueItems =                                         (
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmark;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udc1a  One-time Setup  \Ud83d\Udc1a\n\nPlease open \U2018On My \U2022\U2019 folder by tapping:\n\n\U278a \U2018Browse\U2019\n\U278b \U2018On My \U2022\U2019 (not \U2018a-Shell\U2019)\n\U278c \U2018Open\U2019 (upper right corner)\n\nYou can stop shortcut if shortcut banner obscures \U2018Open\U2019.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = bookmarkerror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Uded1  \U2018On My \U2022\U2019 folder was not opened. Please try again.\n\nIf this error continues, please tap cancel then delete and reinstall a-Shell mini.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oldversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2757\Ufe0f This is an old version. RoutineHub will open now.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = newversion;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "New Version Available";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safesafarierror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nPlease turn off Safe Mode for stories if problem persists.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safariprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\t\Ud83d\Udeb8 Safe Mode \Ud83d\Udeb8\n\nTap Safari\U2019s (not Instagram\U2019s) share button and run \U2018Instagram Download\U2019 to download media.\n\nTouching the webpage can prevent forced logouts or account suspensions.\n\nMake sure to turn on Settings app \U2192 Shortcuts \U2192 Advanced \U2192 Allow Running Scripts.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = profileprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nSharing profile URL lets you download profile picture only. To download protected stories/highlights:\n\n\Ud83d\Udeb8 Protected Stories/Highlights in Safe Mode \Ud83d\Udeb8\n\n\U278a  Share the account\U2019s post or reel then run \U2018Instagram Download\U2019\n\n\U278b  Navigate to stories/highlights in Scriptable browser\n\n\U278c  Tap share on top right, select \U2018Share URL\U2019 then run \U2018Instagram Download\U2019 again\n\n\U278d  ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = profileprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nContinue?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safeloginprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nPlease try again after signing in. Choose \U2018Save Info\U2019 when signing in. Make sure to turn off \U2018Private Browsing\U2019.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = safenomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f No media has been downloaded\n\nPlease choose \U2018Retry\U2019 and share to \U2018Instagram Download\U2019 again. If the problem persists, try toggling WiFi. If you cannot download stories/highlights, try using Safe Mode only for posts/reels.\n\n\Ud83d\Udeb8 To download stories (of private accounts) without share button:\n\n\U278a  Share account\U2019s post/reel to \U2018Instagram Download\U2019\n\U278b  Navigate to stories\n\U278c  Reload webpage\n\U278d  Tap Safari\U2019s share button to run \U2018Instagram Download\U2019\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Ude97 Downloading Story Highlights [1/2]\n\n\U278a  Close highlights\n\n\U278b  Select \U2018Copy Profile URL\U2019 from account\U2019s three dot menu on top right\n\n\U278c  Wait a moment\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\Ud83d\Ude97 Downloading Story Highlights [2/2]\n\n\U278a  Navigate to highlights\n\n\U278b  Tap share button on top right of browser window\n\n\U278c  Select \U2018Share URL\U2019 then \U2018Copy\U2019\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = private;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udd12 Could not download private media. Please sign in with an account that follows this account and try again. Scriptable\U2019s browser will open.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nologin1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U2705 Media has been downloaded. Please sign in on Scriptable\U2019s browser in the next screen.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nologin2;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f No media has been downloaded. Please sign in with Scriptable and try again.\n\n\U26a0\Ufe0f CAUTION \U26a0\Ufe0f\nInstagram monitors bot-like activities strictly, and sometimes force-logs out or even suspends accounts. Using a different account in Scriptable is recommended.\n\n\Ud83d\Udeb8 Safe Mode reduces the chance of your account being logged out or banned.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = oops;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26d4\Ufe0f Oops, an error occurred. Please sign in on Scriptable\U2019s browser in the next screen and try again.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = accounterror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83c\Udd98 Account error. Try logging in again in the Scriptable app.\n\n\U26a0\Ufe0f CAUTION \U26a0\Ufe0f\nInstagram monitors bot-like activities strictly. Using a different account in Scriptable is recommended.\n\n\Ud83d\Udeb8 Safe Mode reduces the chance of your account being logged out or banned.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hasherror;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nFailed to download some media due to Instagram server error:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = login;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nScriptable will open Instagram web.\nPlease close the browser after logging in or out.\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = ok;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = OK;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nomedia;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\Ud83d\Udeab No media has been downloaded. If the problem persists, try deleting and reinstalling the Scriptable app.\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = story;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nStory count: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = whichoneprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\nDownload which?\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = hlprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\U26a0\Ufe0f Make sure to turn on Settings app \U2192 Shortcuts \U2192 Advanced \U2192 Allow Sharing Large Amounts of Data \U26a0\Ufe0f\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = gridprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nShow selection list in grid view?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = dateprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nChoose date of media:\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = reelsprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nDownload reels/live cover?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = optionsaved;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2728 Option has been saved. To change settings, run \U2018Instagram Download\U2019 from the Shortcuts app.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = countprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nMedia count: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = album;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Please select photo album from the following list. You can change it later in \U2018User Settings\U2019.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = copyprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\nCopy post caption to clipboard?\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = menuprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\n\n\tInstagram Download Main Menu\n\n";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = userprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Current account: ";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = nouserprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "\U2770 You are not logged in. \U2771";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = settingprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Tap any item to change option. To reset folder or album, turn the option off and on.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = locationprompt;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Where do you want to save media?";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt1;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Enter folder name for media:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = folderprompt0;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "Enter folder name for media. It will be created inside iCloud Drive/Shortcuts folder:";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            },
                                                                                        {
                                                WFItemType = 0;
                                                WFKey =                                                 {
                                                    Value =                                                     {
                                                        string = noclipboard;
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                                WFValue =                                                 {
                                                    Value =                                                     {
                                                        string = "No Instagram link in clipboard.";
                                                    };
                                                    WFSerializationType = WFTextTokenString;
                                                };
                                            }
                                        );
                                    };
                                    WFSerializationType = WFDictionaryFieldValue;
                                };
                                WFSerializationType = WFDictionaryFieldValue;
                            };
                        }
                    );
                };
                WFSerializationType = WFDictionaryFieldValue;
            };
            WFSerializationType = WFDictionaryFieldValue;
        };
    }
)) >> list
getDictionaryFrom(input: List) >> getDictionaryFrom
var mainDict = Dictionary
getFile(path: "/Shortcuts/${mainDict.key(filename)}", error: false) >> getFile
if(File .contains ""safemode"") {
} else {
	valueFor(key: "localpref", dictionary: mainDict) >> valueFor
} >> IFResult
getDictionaryFrom(input: If Result) >> getDictionaryFrom 1
var localpref = Dictionary
getNumbersFrom(text: localpref) >> safe mode
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
matchText(text: "${output}", regex: "^/private/.+/File Provider Storage$") >> matchText
if(Matches == nil) { >> IFResult 1
var switched = Variable
	deviceDetails(detail: Device Model) >> deviceDetails
	replaceText(input: "${mainDict.key(msg.bookmark)}", find: "•", replace: "${Device Model}") >> replaceText
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
	alert(alert: "${Updated Text}", cancel: false)
	waitToReturn()
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
	matchText(text: "${output}", regex: "^/private/.+/File Provider Storage$") >> matchText 1
	if(Matches == nil) {
		replaceText(input: "${mainDict.key(msg.bookmarkerror)}", find: "•", replace: "${Device Model}") >> replaceText 1
		alert(alert: "${Updated Text}")
		runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut
		exit()
	}
} >> IFResult 2
dictionary({})
if(ShortcutInput != nil) { >> IFResult 3
	valueFor(key: "CacheExtra.5pYKlGnYYBzGvAlIU8RjEQ", dictionary: mainDict) >> cpu
	getType(input: ShortcutInput) >> getType
	if(Type .contains "Safari") { >> IFResult 4
var switched = Variable
		runJavascriptOnWebpage(url: ShortcutInput, javascript: "let cpu = eval('${cpu}'.replace(/t80*(.+)/,'($1<110)?-1:$1*1.1-100').replace(/t60*(.+)/,'$1+40'));
let h = document.documentElement.innerHTML;
if (h.includes('"PolarisViewer",[],{"data":null')) exit({error:1, login:1});

let input = window.location.href.replace(/\?.*/, '');
let murl = ((input.includes('/stories/') || input.includes('/s/')) ? document.querySelector('meta[property="og:url"]') : document.querySelector('meta[property="al:android:url"]'))?.content?.replace(/\?.*/, '').replace(/(instagram\.com\/).+?\/(?=(?:p|tv|reel)\/)/, '$1') || '!';
if (murl.includes('com/stories/') && input.endsWith('.com/')) input = murl;
if (murl != input && !(murl.includes('com/stories/') && input.includes('com/stories/'))) exit({error:1});

let mm = h.match(/.*xdt_api__v1__(?:media__shortcode__web_info|feed__reels_media).*/)?.[0]?.replace(/^<.+?>/,'').replace(/<.+?>$/,'');
if (!mm) exit({error:2, mobile:navigator.userAgent.includes('Mobile')?1:null, stories:input.includes('com/stories/')?1:null});

	let localDate = d => new Date(d.getTime() - (d.getTimezoneOffset() * 60000)).toISOString().replace(/\....Z|:/g,'');
	let touchDate = s => s.slice(0,4) + s.slice(5,7) + s.slice(8,10) + s.slice(11,15) + '.' + s.slice(15);
	let bestImage = (j, reels=false) => {
		let ratio = j.original_width ? j.original_width / j.original_height : 0;
		let can = j.image_versions2.candidates;
		return (img = can.reduce((b,c) => (c.width >= b[1] && c.height > b[2] && ((reels && (c.width/c.height != 1)) || !ratio || ((r = c.width/c.height - ratio) <= 0.01 && r >= -0.01))) ? [c.url,c.width,c.height] : b, ['',0,0])[0]) === '' ? can.reduce((b,c) => (c.width >= b[1] && c.height > b[2]) ? [c.url,c.width,c.height] : b, ['',0,0])[0] : img;
	};
	let bestVideo = (v) => (v.candidates ?? v).reduce((b,c) => (c.width ? (c.width >= b[1] && c.height >= b[2]) : (c.type < b[3])) ? [c.url,c.width,c.height,c.type] : b, ['',0,0,9999])[0];
	let baseURLs = m => {
		let url = m.split('</Representation>').reduce((b,c) => (!c.includes('AudioChannelConfiguration') && b[1] < (bw = parseInt(c.match(/bandwidth=\u0022(\d+)/)?.[1] ?? 0))) ? [c.match(/<BaseURL[^>]*>([^<]+)/)?.[1], bw] : b, ['',0]);
		let fftime = Number.parseFloat(m.match(/ duration=\u0022PT([\d.]+)/)?.[1]) * url[1] / 40000 / cpu;
		url = url[0].replace(/&amp;/g,'&');
		if (audio = m.match(/<AudioChannelConfiguration[^>]*>\s*<BaseURL[^>]*>([^<]+)/)) {
			url = [url, audio[1].replace(/&amp;/g,'&')];
		}
		return [url, fftime];
	};

	let j = JSON.parse(mm).require[0][3][0].__bbox.require[0][3][1].__bbox.result.data;
	j = j.xdt_api__v1__media__shortcode__web_info ?? j.xdt_api__v1__feed__reels_media__connection?.edges?.[0]?.node ?? 	j.xdt_api__v1__feed__reels_media?.reels_media?.[0];

	let out = {count:0};
	let m = input.match(/\/(p|tv|reel)\/([\w-]+)/) || input.match(/instagram\.com\/([^\/]+)(?:\/([\w-]+))?/);
	if (['p','tv','reel'].includes(m[1])) { // post
		out.ispost = 1
		out = {...out, urls:[], urls2:[], dates:[], tdates:[], vcount:0};
		p = j.items[0];
		out.user = p.user.username;
		out.urls = (p.carousel_media ?? [p]).map(a => {
			let u, u2, fftime;
			if (v=a.video_versions) {
				out.vcount++;
				u2 = bestVideo(v);
				if (m = a.video_dash_manifest) {
					[u, fftime] = baseURLs(m);
					if (m.includes('codecs="vp09')) {
						if (cpu == -1) { u = undefined }
//						else if (fftime > 10) { out.switch = true }
						else { out.switch = true }
					}
				}
			} else {
				u2 = bestImage(a);
			}
			out.urls2.push(u2);
			return u ?? u2;
		})
		if (input.includes('/reel/') || input.includes('/tv/')) {
			let cover = bestImage(p, true);
			out.urls.unshift(cover);
			out.urls2.unshift(cover);
			out.reels = 1;
		}
		out.count = out.urls.length;
		out.dates = Array.from(Array(out.count), (_, i) => localDate(new Date(1000 * (p.taken_at+i+1))));
		out.tdates = out.dates.map(a => touchDate(a));
		if (p.caption) {
			out.caption = input + '\n' + out.dates[0].replace(/T(..)(..)(..)/, ' $1:$2:$3  @') + out.user + '\n' + p.caption.text;
		}
	} else if (['stories','s'].includes(m[1])) { // stories
		out = {...out, urls:[], urls2:[], dates:[], tdates:[], vcount:0};
		out.user = j.user.username;
		out.count = j.items.length;
		let sid = input.match(/\d{5,25}(?=\/?$)/)?.[0] + "_" + j.user.pk;
		j.items.sort((a,b) => a.taken_at - b.taken_at).forEach(a => {
			let d = localDate(new Date(1000*a.taken_at));
			let td = touchDate(d);
			let u, u2, u3, fftime;
			if (a.media_type == 1) {
				u2 = bestImage(a);
			} else {
				if (a.story_music_stickers) {
					out.count++;
					u3 = bestImage(a);
					out.urls.push(u3);
					out.urls2.push(u3);
					out.dates.push(d);
					out.tdates.push(td);
				}
				let v = a.video_versions;
				u2 = bestVideo(v);
				if (m = a.video_dash_manifest) {
					[u, fftime] = baseURLs(m);
					if (m.includes('codecs="vp09')) {
						if (cpu == -1) { u = undefined }
//						else if (fftime > 10) { out.switch = true }
						else { out.switch = true }
					}
				}
				out.vcount++;
			}
			out.urls.push(u ?? u2);
			out.urls2.push(u2);
			out.dates.push(d);
			out.tdates.push(td);
			if (out.count > 1 && a.id === sid) {
				if (u3) {
					out.one = {user:out.user, count:2, dates:[d,d], urls:[u3, u ?? u2], urls2:[u3, u2], tdates:[td,td]};
				} else {
					out.one = {user:out.user, count:1, dates:[d], urls:[u ?? u2], urls2:[u2], tdates:[td]};
				}
//				if ((cpu != -1) && a.video_dash_manifest?.includes('codecs=\u0022vp09') && fftime > 10) { out.one.switch = true }
				if ((cpu != -1) && a.video_dash_manifest?.includes('codecs=\u0022vp09')) { out.one.switch = true }
			}
		});
	}
	exit(out);

function exit(output) {
	window.close();
	completion(output);
}") >> runJavascriptOnWebpage
		replaceText(input: "${DeviceDetails.get(System Version)}", find: "\..*", replace: "", isRegex: true) >> replaceText 2
		if(Updated Text >= 16) { >> IFResult 5
//Unable to get shortcuts action com.apple.mobilesafari.TabEntity
			if(Tabs .contains "instagram.com") {
//Unable to get shortcuts action com.apple.mobilesafari.CloseTab
			}
		} >> IFResult 6
		if(JavaScript Result != nil) { >> IFResult 7
			number(value: JavaScript Result) >> number
			replaceText(input: "${ShortcutInput.as(URL)}", find: "(?<=instagram\.com/)[^/]+/(?=p/|tv/|reel/)|\?.*", isRegex: true) >> replaceText 3
			if(Number == 1) { >> IFResult 8
				if(JavaScript Result != nil) {
					url(url: "https://www.instagram.com/accounts/login/?next=${Updated Text}") >> url
				} >> IFResult 9
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${If Result}"/>") >> url 1
				openURL(url: URL) >> openURL
				if(JavaScript Result != nil) {
					menu(, [) {
					case("mainDict (privacy?)"):
						openURL(url: mainDict) >> openURL 1
					case("mainDict (ack)"):
					}
				}
				exit()
			} >> IFResult 10
			if(JavaScript Result != nil) {
				valueFor(key: "usesafe2", dictionary: mainDict) >> valueFor 1
			} >> IFResult 11
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = safemodeoff;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Dictionary Value";
                        OutputUUID = "7FE66B38-FF9A-4017-818E-89916512146F";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = retry;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 1
			choose(list: List, prompt: "${mainDict.key(msg.safenomedia)}") >> choose
			if(ActionOutput == ""${mainDict.key(retry)}"") {
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${Updated Text}"/>") >> url 2
				openURL(url: URL) >> openURL 2
			} else {
				openApp(id: "com.burbn.instagram", id: $1) >> openApp
				if(ActionOutput == ""${mainDict.key(safemodeoff)}"") {
					replaceText(input: "${localpref}", find: ""hide[^"]+info":\s*\w+,?|"[^"]+count":\s*\w+,?", isRegex: true) >> replaceText 4
					setValue(key: "safemode", value: "${mainDict.key(1)}", dictionary: Updated Text) >> setValue
				} else {
					setValue(key: "safemode", value: "${mainDict.key(3)}", dictionary: localpref) >> setValue 1
				} >> IFResult 12
				saveFile(input: If Result, ask: false, path: "/Shortcuts/${mainDict.key(filename)}", overwrite: true) >> saveFile
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
				runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut 1
			}
			exit()
		} >> IFResult 13
//Unable to get shortcuts action is.workflow.actions.getvariable
	} else { >>  14
		if(ShortcutInput .beginsWith "{") { >> IFResult 14
var switched = Variable
//Unable to get shortcuts action is.workflow.actions.getvariable
		} else { >>  15
			if(safe mode == 1) { >> IFResult 15
				nothing() >> nothing
			} else { >>  1
				matchText(text: "${ShortcutInput}", regex: "/(?:p|reels?|tv|s|stories|share)/") >> matchText 2
				if(safe mode == 3) {
					matchText(text: "${ShortcutInput}", regex: "/(?:p|reels?|tv|share)/") >> matchText 3
				} >> IFResult 16
			} >> IFResult 17
			if(If Result == nil) { >> IFResult 18
				if(ShortcutInput .contains "/s/") { >> IFResult 19
					alert(alert: "${mainDict.key(msg.hlprompt1)}")
					getClipboard() >> old clipboard
					setClipboard() >> setClipboard
					wait(seconds: 3)
					repeat(20) {
						if(Clipboard == nil) {
							wait(seconds: 0.5)
							getClipboard() >> getClipboard
						} >> IFResult 20
					} >> RepeatResult
					setClipboard(variable: old clipboard) >> setClipboard 1
					if(Clipboard .contains "instagram.com/") {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
						alert(alert: "${mainDict.key(msg.hlprompt2)}")
						setClipboard() >> setClipboard 2
						wait(seconds: 6)
						repeat(20) {
							if(Clipboard == nil) {
								wait(seconds: 0.5)
								getClipboard() >> getClipboard 1
							} >> IFResult 21
						} >> RepeatResult 1
						setClipboard(variable: old clipboard) >> setClipboard 3
						if(Clipboard .contains "/highlights/") {
							openApp(id: "com.burbn.instagram", id: $1) >> openApp 1
							runShortcut(name: "Instagram Download", input: Clipboard) >> runShortcut 2
						}
					}
					exit()
				} >> IFResult 22
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			} else { >>  23
				replaceText(input: "${ShortcutInput}", find: "(?<=instagram\.com/)[^/]+/(?=p/|tv/|reel/)|\?.*", isRegex: true) >> replaceText 5
				url(url: "data:text/html,<meta name="color-scheme" content="light dark"/><meta http-equiv="Refresh" content="0; url=${Updated Text}"/>") >> url 3
				openURL(url: URL) >> openURL 3
				if(localpref == nil) { >> IFResult 23
					getNumbersFrom(text: localpref) >> getNumbersFrom
					if(Numbers > 2) { >> IFResult 24
						getTextFrom(input: mainDict) >> ackhide
					} >> IFResult 25
					list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = safemodeoff;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = ackhide;
                        OutputUUID = "102EF46C-7123-476C-B246-70EF3C07499C";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = ack;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 2
					choose(list: List, prompt: "${mainDict.key(msg.safariprompt)}") >> choose 1
					if(ActionOutput == ""${mainDict.key(safemodeoff)}"") {
						replaceText(input: "${localpref}", find: ""safe info count":\d+,?", isRegex: true) >> replaceText 6
						setValue(key: "safemode", value: "${mainDict.key(1)}", dictionary: Updated Text) >> setValue 2
						saveFile(input: Dictionary, ask: false, path: "/Shortcuts/${mainDict.key(filename)}", overwrite: true) >> saveFile 1
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						replaceText(input: "${DeviceDetails.get(System Version)}", find: "\..*", replace: "", isRegex: true) >> replaceText 7
						if(Updated Text >= 16) { >> IFResult 26
//Unable to get shortcuts action com.apple.mobilesafari.TabEntity
							if(Tabs .contains "instagram.com") {
//Unable to get shortcuts action com.apple.mobilesafari.CloseTab
							}
						} >> IFResult 27
						openApp(id: "com.burbn.instagram", id: $1) >> openApp 2
						runShortcut(name: "Instagram Download", input: Updated Text)
					} else {
						if(ActionOutput == ""${mainDict.key(ackhide)}"") {
							setValue(key: "hide safe info", value: "${mainDict.key(1)}", dictionary: localpref) >> setValue 3
						} else {
							math(input: "1", operand: localpref) >> math
							setValue(key: "safe info count", value: "${Calculation Result}", dictionary: localpref) >> setValue 4
						} >> IFResult 28
						saveFile(input: If Result, ask: false, path: "/Shortcuts/${mainDict.key(filename)}", overwrite: true) >> saveFile 2
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
					} >> IFResult 29
				} >> IFResult 30
				exit()
			} >> IFResult 31
		}
	}
} >> IFResult 32
if(If Result == nil) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
} >> IFResult 33
getDictionaryFrom(input: If Result) >> getDictionaryFrom 2
var Output = Dictionary
if(Output != nil) { >> IFResult 34
	openApp(id: "dk.simonbs.Scriptable", id: $1) >> openApp 3
	if(ShortcutInput != nil) {
		openApp(id: "com.burbn.instagram", id: $1) >> openApp 4
	} else {
		openApp(id: "com.apple.shortcuts", id: $1) >> openApp 5
	} >> IFResult 35
	runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut 3
	exit()
} >> IFResult 36
if(Output != nil) { >> IFResult 37
	wait(seconds: Output)
	runShortcut(name: "Instagram Download", input: ShortcutInput) >> runShortcut 4
	exit()
} >> IFResult 38
if(Output != nil) { >> IFResult 39
	alert(alert: "${mainDict.key(msg.oldversion)}", cancel: false)
	openURL(url: mainDict) >> openURL 4
	exit()
} >> IFResult 40
if(Output != nil) { >> IFResult 41
	menu(, [) {
	case("mainDict (gotoweb)"):
		openURL(url: mainDict)
		exit()
	case("mainDict (downloadupdate)"):
		downloadURL(url: "https://routinehub.co/api/v1/shortcuts/7823/versions/latest") >> downloadURL
		matchText(text: "${Contents of URL}", regex: "(?<="id":\D?)\d+") >> matchText 4
		expandURL(url: "https://routinehub.co/download/${Matches}/") >> expandURL
		replaceText(input: "${Expanded URL}", find: "^.+icloud.com/", replace: "shortcuts://", isRegex: true) >> replaceText 8
		openURL(url: Updated Text) >> openURL 5
		exit()
	case("mainDict (notnow)"):
	} >> MenuResult
} >> IFResult 42
getDictionaryFrom(input: Output) >> getDictionaryFrom 3
var pref = Dictionary
if(ShortcutInput != nil) { >> IFResult 43
	text(text: "0") >> text
	if(DeviceDetails != nil) {
		text(text: "1") >> text 1
	} >> IFResult 44
	if(Output != nil) { >> IFResult 45
		valueFor(key: "allstory${pref.key(selection.1)}", dictionary: mainDict) >> valueFor 2
		menu(, [) {
		case("mainDict (onestory)"):
			getDictionaryFrom(input: Output) >> getDictionaryFrom 4
var Output = Dictionary
		case("Dictionary Value"):
		} >> MenuResult 1
	} >> IFResult 46
	if(Output != nil) { >> IFResult 47
		menu(, [) {
		case("mainDict (profilestory)"):
		case("mainDict (highlight)"):
//Unable to get shortcuts action is.workflow.actions.getvariable
			if(Output == nil) {
				setName(input: Output, name: "a.vcf") >> setName
				choose(list: Renamed Item, prompt: "${mainDict.key(msg.hlprompt)}") >> choose 2
				contactDetail(detail: Notes, contact: Chosen Item) >> contactDetail
			} >> IFResult 48
			runShortcut(name: "Instagram Download", input: If Result)
			exit()
		}
	}
	valueFor(key: "count", dictionary: Output) >> count
	if(count > 0) {
		repeatEach(Output) {
			url(url: Repeat Item) >> url 4
		} >> RepeatResult 2
		downloadURL(url: "${Repeat Results}") >> downloadURL 1
		if(Contents of URL .contains "txt") { >> IFResult 49
			menu(, [) {
			case("mainDict (geturls2)"):
			case("mainDict (login)"):
				alert(alert: "${mainDict.key(msg.login)}")
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
				exit()
			} >> MenuResult 2
			setValue(key: "urls", value: "urls2", dictionary: mainDict) >> setValue 5
var mainDict = Dictionary
			repeatEach(Output) {
				url(url: Repeat Item) >> url 5
			} >> RepeatResult 3
			downloadURL(url: "${Repeat Results}") >> downloadURL 2
		} >> IFResult 50
		valueFor(key: "selection.6", dictionary: pref) >> Media Date
		if(Media Date > 2) { >> IFResult 51
			choose(list: mainDict, prompt: "${mainDict.key(msg.dateprompt)}") >> choose 3
			replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 9
			count(type: Characters, input: Updated Text) >> count 1
			math(input: "0", operand: Count) >> math 1
			math(input: Calculation Result, operation: -, operand: "2") >> math 2
			if(Calculation Result false 1) {
				combineText(text: pref, combine: Custom) >> combineText
				replaceText(input: "${Combined Text}", find: ".(..)$", replace: "${Calculation Result}$1", isRegex: true) >> replaceText 10
				splitText(text: Updated Text, separator: Every Character) >> splitText
				setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 6
var pref = Dictionary
				alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
			}
		} >> IFResult 52
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
		adjustDate(operation: Subtract, duration: , date: "${CurrentDate}") >> adjustDate
var index = Variable
		repeat(count) { >> RepeatResult 4
			getItemFromList(list: Contents of URL, type: Item At Index, index: index) >> item 1
//Unable to get shortcuts action is.workflow.actions.appendvariable
			if(MediaDate == 1) {
				valueFor(key: "dates.${Repeat Index}", dictionary: Output)
			} else {
				adjustDate(duration: , date: "${Adjusted Date}") >> adjustDate 1
				formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "yyyy-MM-dd'T'HHmmss")
			} >> IFResult 53
			valueFor(key: "${Repeat Index}.${Variable}", dictionary: Output) >> valueFor 3
			count(input: Dictionary Value) >> count 2
			if(Count == 1) {
				setName(input: item 1, name: "ig_${Repeat Index}.${Variable}") >> setName 1
				saveFile(input: Renamed Item, ask: false, overwrite: true) >> saveFile 3
				nothing()
				if(item 1 == "mp4") {
var 62B80846-8FDF-4914-8E26-C88AE4AA018A = """ffmpeg -v error -i ig_￼.mp4 -metadata "creation_time=￼" -c copy -y ig_t.mp4
mv -f ig_t.mp4 ig_￼.mp4
"""
text("${62B80846-8FDF-4914-8E26-C88AE4AA018A}")
				} >> IFResult 54
			} else {
				setName(input: item 1, name: "ig_${Repeat Index}v") >> setName 2
				math(input: index, operand: "1") >> math 3
var index = Calculation Result
				getItemFromList(list: Contents of URL, type: Item At Index, index: index) >> getItemFromList
				setName(input: Item from List, name: "ig_${Repeat Index}a") >> setName 3
				list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Renamed Item";
                        OutputUUID = "6B283A41-A855-4F88-A81E-0AA7D127EE32";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Renamed Item";
                        OutputUUID = "2AAB1040-08F9-433C-BC46-116CB8DE93B7";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 3
				saveFile(input: List, ask: false, overwrite: true) >> saveFile 4
var 1793E201-FBF9-48E7-BB72-F07C8D4456DF = """ffmpeg -v error -i ig_￼v.mp4 -i ig_￼a.mp4 -c copy -map 0:v:0 -map 1:a:0 -metadata "creation_time=￼" -y ig_￼.mp4
"""
text("${1793E201-FBF9-48E7-BB72-F07C8D4456DF}")
			} >> IFResult 55
			math(input: index, operand: "1") >> math 4
var index = Calculation Result
			nothing()
			if(MediaDate == 1) {
				valueFor(key: "tdates.${Repeat Index}", dictionary: Output) >> valueFor 4
			} else {
				formatDate(date: "${Adjusted Date}", dStyle: Custom, custom: "yyyyMMddHHmm.ss")
			} >> IFResult 56
var A654185F-0246-45D2-AB17-6CA73A27926A = """dash -c "if [ $(ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 ig_￼.￼) = vp9 ];then ffmpeg -v warning -stats -i ig_￼.￼ -c:v h264 -c:a copy -y ig_t.mp4;mv -f ig_t.mp4 ig_￼.￼;fi"
touch -t ￼ ig_￼.￼"""
text("${A654185F-0246-45D2-AB17-6CA73A27926A}")
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "ffmpeg copy";
                        OutputUUID = "1AAC1CCD-482A-4DF8-8766-2B07F11A8656";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = Text;
                        OutputUUID = "61965B38-8DEF-4B63-9F2A-EF3D43975129";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
))
		} >> RepeatResult 5
		statistic(input: Contents of URL, operation: Maximum) >> statistic
		if(Maximum false 150000000) { >> IFResult 57
			valueFor(key: "switch", dictionary: Output)
		} >> IFResult 58
		if(If Result != nil) {
var switched = Variable
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			waitToReturn()
		} else {
			replaceText(input: "${Repeat Results}", find: "ig_", replace: "~OnMyDevice/ig_") >> replaceText 11
			repeatEach(Updated Text) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} >> RepeatResult 6
		}
		count(type: Characters, input: count) >> digits
		math(input: digits, operation: …, scientific: 10^x) >> math 5
		repeatEach(Output) { >> RepeatResult 7
			getItemFromList(list: extensions, type: Item At Index, index: Repeat Index) >> getItemFromList 1
			getFile(path: "ig_${Repeat Index}.${Variable}") >> getFile 1
			nothing()
			if(Output != nil) {
				if(count > 1) {
					math(input: Calculation Result, operand: Repeat Index) >> math 6
					replaceText(input: "${Calculation Result}", find: "^.", replace: "-", isRegex: true)
				} >> IFResult 59
			} >> IFResult 60
			setName(input: File, name: "${Repeat Item} ${Variable}${Output.key(user)}") >> setName 4
		} >> RepeatResult 8
var media = Repeat Results
		count(input: media)
		if(Output != nil) { >> IFResult 61
			valueFor(key: "selection.7", dictionary: pref) >> Reels Cover
			if(Reels Cover > 2) { >> IFResult 62
				choose(list: mainDict, prompt: "${mainDict.key(msg.reelsprompt)}") >> choose 4
				replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 12
				count(type: Characters, input: Updated Text) >> count 3
				math(input: "0", operand: Count) >> math 7
				math(input: Calculation Result, operation: -, operand: "2") >> math 8
				if(Calculation Result false 1) {
					combineText(text: pref, combine: Custom) >> combineText 1
					replaceText(input: "${Combined Text}", find: ".(.)$", replace: "${Calculation Result}$1", isRegex: true) >> replaceText 13
					splitText(text: Updated Text, separator: Every Character) >> splitText 1
					setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 7
var pref = Dictionary
					alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
				}
			} >> IFResult 63
			if(If Result == 2) {
				getItemFromList(list: media, type: Last Item) >> getItemFromList 2
var media = Item from List
			}
			number(value: 1)
		} >> IFResult 64
		replaceText(input: "${DeviceDetails.get(System Version)}", find: "\.(\d+).*", replace: "$1", isRegex: true) >> OS
		if(new count > 1) { >> IFResult 65
			valueFor(key: "selection.1", dictionary: pref) >> Show List
			if(Show List == 1) {
				number(value: 2) >> number 1
				if(Output != nil) { >> IFResult 66
					valueFor(key: "selection.2", dictionary: pref) >> Show Grid
					if(Show Grid > 2) {
						choose(list: mainDict, prompt: "${mainDict.key(msg.gridprompt)}") >> choose 5
						replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 14
						count(input: Updated Text) >> count 4
						math(input: Count, operation: -, operand: "2") >> math 9
						if(Calculation Result false 1) {
							combineText(text: pref, combine: Custom) >> combineText 2
							replaceText(input: "${Combined Text}", find: "^(.).", replace: "$1${Count}", isRegex: true) >> replaceText 15
							splitText(text: Updated Text, separator: Every Character) >> splitText 2
							setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 8
var pref = Dictionary
							alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Count
						} >> IFResult 67
					} >> IFResult 68
				} >> IFResult 69
				if(count > 4) { >> IFResult 70
					number(value: 1) >> number 2
					menu(, [) {
					case("mainDict (selectall)"):
					case("mainDict (selectnone)"):
						number(value: 0)
					}
				} >> IFResult 71
				if(ShowGrid == 1) {
					repeatEach(extensions) {
						nothing()
						if(Repeat Item == "mp4") {
							text(text: "ffmpeg -v error -t 1.3 -i ig_${Repeat Index}.mp4 -vf "fps=1.2,scale=256:-1" -y ig_${Variable}.gif") >> text 2
						}
					} >> RepeatResult 9
					statistic(input: media, operation: Maximum) >> statistic 1
					if(Maximum false 100000000) {
						splitText(text: Repeat Results) >> splitText 3
						replaceText(input: "${Split Text}", find: "ig_", replace: "~OnMyDevice/ig_") >> replaceText 16
						repeatEach(Updated Text) {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
						}
					} else {
var switched = Variable
var B642D023-B75E-4E15-B60D-934792076AA7 = """hideKeyboard
cd ~OnMyDevice
clear
touch ig_begin0
rm -f ig_done
￼
touch ig_done"""
text("${B642D023-B75E-4E15-B60D-934792076AA7}")
						repeat(5) { >> RepeatResult 10
							if(File == nil "") {
								if(Repeat Index .between 2...4) {
								} else {
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
								}
								wait(seconds: 0.5)
								getFile(path: "ig_begin0", error: false) >> getFile 2
							}
						} >> RepeatResult 11
						repeat(20) { >> RepeatResult 12
							if(File == nil "") {
								repeat(20) { >> RepeatResult 13
									if(File == nil "") {
										wait(seconds: 0.5)
										getFile(path: "ig_done", error: false) >> getFile 3
									}
									nothing()
								}
							}
						} >> RepeatResult 14
					}
					repeatEach(media) { >> RepeatResult 15
						if(Repeat Item == "mp4") {
							getFile(path: "ig_${Repeat Index}.gif")
						} >> IFResult 72
						setName(input: If Result, name: "${Repeat Index}")
					} >> RepeatResult 16
					choose(list: Repeat Results, multiple: true, all: SelectAll) >> choose 6
					getName() >> getName
					repeatEach(Name) {
						getItemFromList(list: media, type: Item At Index, index: Repeat Item)
					} >> RepeatResult 17
				} else { >>  18
					if(OS .between 171...173) {
						getNumbersFrom(text: Output) >> getNumbersFrom 1
						if(Numbers == 0) {
							math(input: "1", operation: -, operand: switched) >> math 10
var switched = Calculation Result
							if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
							} else {
								openApp(id: "com.burbn.instagram", id: $1)
							}
						}
					} else {
						wait(seconds: 0.5)
					} >> IFResult 73
					choose(list: media, multiple: true, all: SelectAll) >> choose 7
				} >> IFResult 74
var media = If Result
			}
		} >> IFResult 75
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
		if(media != nil) { >> IFResult 76
			valueFor(key: "selection.3", dictionary: pref) >> Share
			if(Share == 1) {
				if(OS .between 171...173) {
					math(input: "1", operation: -, operand: switched) >> math 11
var switched = Calculation Result
					if(switched == 1) {
//Unable to get shortcuts action is.workflow.actions.returntohomescreen
					} else {
						openApp(id: "com.burbn.instagram", id: $1)
					}
				} else {
					wait(seconds: 0.5)
				}
				share(file: media) >> share
			} >> IFResult 77
			valueFor(key: "selection.4", dictionary: pref) >> Save to Files
			if(Save to Files == 1) {
				valueFor(key: "folderlocation", dictionary: pref) >> valueFor 5
				if(OS == 1) {
					if(Dictionary Value == nil) {
						menu(, [) {
						case("mainDict (onmy)Device Details (Device Type)"):
							number(value: 1)
						case("iCloud Drive"):
							number(value: 2)
						case("iCloud Drive/Shortcuts"):
							number(value: 3)
						} >> MenuResult 3
						setValue(key: "folderlocation", value: "${Menu Result.as(Number)}", dictionary: pref) >> setValue 9
var pref = Dictionary
//Unable to get shortcuts action is.workflow.actions.getvariable
					} >> IFResult 78
				} >> IFResult 79
				if(If Result == 1) {
					file(file: $0) >> file
				} else {
					if(If Result == 2) {
						file(file: $0) >> file 1
					} else {
						file(file: $0) >> file 2
					}
				} >> IFResult 80
				if(pref == nil) {
					valueFor(key: "msg.folderprompt${OS}", dictionary: mainDict) >> valueFor 6
					askForInput(prompt: "${Dictionary Value}") >> askForInput
					text(text: "${Provided Input}") >> text 3
					setValue(key: "savefolder", value: "${Text}", dictionary: pref) >> setValue 10
var pref = Dictionary
var savePref = Variable
					if(Provided Input != nil) {
						createFolder(path: "${pref.key(savefolder)}") >> createFolder
					}
				} >> IFResult 81
				saveFile(input: media, ask: false, path: "${pref.key(savefolder)}") >> saveFile 5
			} >> IFResult 82
			valueFor(key: "selection.5", dictionary: pref) >> Save to Album
			if(Save to Album == 1) {
				valueFor(key: "album", dictionary: pref) >> album
				if(album == nil) {
					alert(alert: "${mainDict.key(msg.album)}", cancel: false)
					saveToCameraRoll(image: media, album: Ask) >> saveToCameraRoll
					getItemFromList(list: Saved Photo Media) >> getItemFromList 3
					text(text: "${Item from List}") >> text 4
					setValue(key: "album", value: "${Text}", dictionary: pref) >> setValue 11
var pref = Dictionary
var savePref = Variable
				} else {
					if(album == "") {
						saveToCameraRoll(image: media) >> saveToCameraRoll 1
					} else {
						if(OS == 1) {
							createAlbum(photos: media, name: "${album}") >> createAlbum
						} else {
							saveToCameraRoll(image: media, album: album)
						}
					} >> IFResult 83
				} >> IFResult 84
			} >> IFResult 85
		} >> IFResult 86
		if(switched == 1) {
			openApp(id: "com.burbn.instagram", id: $1)
		}
		if(Output != nil) { >> IFResult 87
			valueFor(key: "selection.8", dictionary: pref) >> Copy Caption
			if(Copy Caption > 2) {
				choose(list: mainDict, prompt: "${mainDict.key(msg.copyprompt)}") >> choose 8
				replaceText(input: "${Chosen Item}", find: "[^\u200b]+", isRegex: true) >> replaceText 17
				count(type: Characters, input: Updated Text) >> count 5
				math(input: "0", operand: Count) >> math 12
				math(input: Calculation Result, operation: -, operand: "2") >> math 13
				if(Calculation Result false 1) {
					combineText(text: pref, combine: Custom) >> combineText 3
					replaceText(input: "${Combined Text}", find: ".$", replace: "${Calculation Result}", isRegex: true) >> replaceText 18
					splitText(text: Updated Text, separator: Every Character) >> splitText 4
					setValue(key: "selection", value: "${Split Text.as(Number)}", dictionary: pref) >> setValue 12
var pref = Dictionary
					alert(alert: "${mainDict.key(msg.optionsaved)}", cancel: false)
var savePref = Calculation Result
				} >> IFResult 88
			} >> IFResult 89
			if(If Result == 1) {
				setClipboard(variable: Output) >> setClipboard 4
				getClipboard()
			}
		}
	} >> IFResult 90
	if(savePref != nil) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
	} >> IFResult 91
	if(count == 0) { >> IFResult 92
		if(Output != nil) {
			getTextFrom(input: Output) >> getTextFrom
			nothing() >> nothing 1
			if(Text .contains "⚠️") {
				valueFor(key: "usesafe", dictionary: mainDict) >> usesafe
				if(DeviceDetails ==) {
					if(safe mode == 1) {
						valueFor(key: "usesafe2", dictionary: mainDict) >> valueFor 7
					}
				}
			} >> IFResult 93
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = usesafe;
                        OutputUUID = "1EF6070F-53BA-4C56-8C49-B989E52E2582";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "Dictionary Value";
                        OutputUUID = "14E28E3F-E6AF-4DAA-85A3-6DB100813227";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = openscriptable;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = notnow;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 4
			choose(list: List, prompt: "${Output.key(message)}") >> choose 9
			if(Chosen Item .beginsWith "🚸") {
				if(Chosen Item == ""${usesafe}"") {
					setValue(key: "safemode", value: "${mainDict.key(2)}", dictionary: localpref) >> setValue 13
				} else {
					setValue(key: "safemode", value: "${mainDict.key(3)}", dictionary: localpref) >> setValue 14
				} >> IFResult 94
				saveFile(input: If Result, ask: false, path: "/Shortcuts/${mainDict.key(filename)}", overwrite: true) >> saveFile 6
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
			} >> IFResult 95
			if(Chosen Item == ""${mainDict.key(openscriptable)}"") {
				alert(alert: "${mainDict.key(msg.login)}")
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
		} else {
			alert(alert: "${mainDict.key(msg.nomedia)}", title: "${ShortcutInput}", cancel: false)
		} >> IFResult 96
	}
} else { >>  97
var menu = Variable
	repeat(20) {
		if(menu == 1) {
var menu = Variable
			getNumbersFrom(text: localpref) >> safemode
			nothing()
			if(safemode != 1) {
				valueFor(key: "loginsafari", dictionary: mainDict) >> valueFor 8
			} >> IFResult 97
			getItemFromList(list: mainDict, type: Item At Index, index: safemode) >> getItemFromList 4
			list(items: (
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = contact2;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = login;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = checklogin;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        OutputName = "If Result";
                        OutputUUID = "562B99E4-6E97-4B7B-BBDA-2DB93C75C209";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = "safemode.title";
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                    "{1, 1}" =                     {
                        OutputName = "Item from List";
                        OutputUUID = "6B2DB4FA-05DA-4AB7-AA78-44614804A488";
                        Type = ActionOutput;
                    };
                };
                string = "\Ufffc\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = settings;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    },
        {
        WFItemType = 0;
        WFValue =         {
            Value =             {
                attachmentsByRange =                 {
                    "{0, 1}" =                     {
                        Aggrandizements =                         (
                                                        {
                                DictionaryKey = getlink;
                                Type = WFDictionaryValueVariableAggrandizement;
                            }
                        );
                        Type = Variable;
                        VariableName = mainDict;
                    };
                };
                string = "\Ufffc";
            };
            WFSerializationType = WFTextTokenString;
        };
    }
)) >> list 5
			choose(list: ActionOutput, prompt: "${mainDict.key(msg.menuprompt)}") >> choose 10
			if(Chosen Item == ""${mainDict.key(contact)}"") {
				openURL(url: mainDict)
			}
			if(Chosen Item == ""${mainDict.key(contact2)}"") {
				openURL(url: mainDict)
			} >> IFResult 98
			if(Chosen Item == ""${mainDict.key(login)}"") {
				alert(alert: "${mainDict.key(msg.login)}")
				if(safemode == 1) {
var 8938B2CC-7E67-4EA6-8DC9-E1AB409FE20F = """let fm = FileManager.local();
let path = fm.joinPath(fm.documentsDirectory(), '￼');
pref = fm.fileExists(path) ? JSON.parse(fm.readString(path)) : {};
pref.wait = Date.now() + 9000;
fm.writeString(path, JSON.stringify(pref));"""
text("${8938B2CC-7E67-4EA6-8DC9-E1AB409FE20F}")
				} >> IFResult 99
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
			if(Chosen Item == ""${mainDict.key(checklogin)}"") {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
			}
			if(Chosen Item == ""${mainDict.key(loginsafari)}"") {
				openURL(url: "https://www.instagram.com/accounts/settings/") >> openURL 6
			}
			if(Chosen Item .beginsWith ""${mainDict.key(safemode.title)}"") {
				math(input: localpref, operation: …, scientific: Modulus) >> math 14
				math(input: Calculation Result, operand: "1") >> math 15
				setValue(key: "safemode", value: "${Calculation Result}", dictionary: localpref) >> setValue 15
				if(Calculation Result == 1) {
					replaceText(input: "${Dictionary}", find: ""hide[^"]+info":\s*\w+,?|"[^"]+count":\s*\w+,?", isRegex: true) >> replaceText 19
					getDictionaryFrom(input: Updated Text)
				} >> IFResult 100
var localpref = If Result
				saveFile(input: localpref, ask: false, path: "/Shortcuts/${mainDict.key(filename)}", overwrite: true) >> saveFile 7
//Unable to get shortcuts action AsheKube.app.a-Shell-mini.ExecuteCommandIntent
var menu = Variable
			}
			if(Chosen Item == ""${mainDict.key(settings)}"") {
				repeat(30) {
					if(menu == 0) {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
						getDictionaryFrom(input: Output) >> getDictionaryFrom 5
						choose(list: Dictionary, prompt: "${mainDict.key(msg.settingprompt)}${Variable.key(msg.settingprompt)}${Dictionary.key(folderpath)}") >> choose 11
						if(Chosen Item == ""${mainDict.key(goback)}"") {
var menu = Variable
						} else {
//Unable to get shortcuts action dk.simonbs.Scriptable.RunScriptInlineIntent
							getDictionaryFrom(input: Output) >> getDictionaryFrom 6
var pref = Dictionary
						} >> IFResult 101
					} >> IFResult 102
				} >> RepeatResult 18
			}
			if(Chosen Item == ""${mainDict.key(getlink)}"") {
				getClipboard() >> getClipboard 2
				if(Clipboard .contains "instagram.com") {
					runShortcut(name: "Instagram Download", input: Clipboard) >> runShortcut 5
				} else {
					alert(alert: "${Clipboard}", title: "${mainDict.key(msg.noclipboard)}", cancel: false)
				} >> IFResult 103
			}
		}
	} >> RepeatResult 19
} >> IFResult 104
exit()
